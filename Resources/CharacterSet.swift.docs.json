{
  "key.column": 1,
  "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
  "key.length": 1996,
  "key.line": 1,
  "key.offset": 0,
  "key.substructure": [
    {
      "key.annotated_decl": "<Declaration>struct CharacterSet : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type>, <Type usr=\"s:s10SetAlgebraP\">SetAlgebra<\/Type><\/Declaration>",
      "key.bodycolumn": 25,
      "key.bodylength": 658,
      "key.bodyline": 21,
      "key.bodyoffset": 1336,
      "key.column": 1,
      "key.doc.comment": "",
      "key.doc.declaration": "struct CharacterSet : ReferenceConvertible, Equatable, Hashable, SetAlgebra",
      "key.doc.discussion": [
        {
          "Para": "This type provides “copy-on-write” behavior, and is also bridged to the Objective-C `NSCharacterSet` class."
        }
      ],
      "key.doc.full_as_xml": "<Class><Name>CharacterSet<\/Name><USR>s:10Foundation12CharacterSetV<\/USR><Declaration>struct CharacterSet : ReferenceConvertible, Equatable, Hashable, SetAlgebra<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>CharacterSet<\/codeVoice> represents a set of Unicode-compliant characters. Foundation types use <codeVoice>CharacterSet<\/codeVoice> to group characters together for searching operations, so that they can find any of a particular set of characters during a search.<\/Para><\/Abstract><Discussion><Para>This type provides “copy-on-write” behavior, and is also bridged to the Objective-C <codeVoice>NSCharacterSet<\/codeVoice> class.<\/Para><\/Discussion><\/CommentParts><\/Class>",
      "key.doc.name": "CharacterSet",
      "key.doc.type": "Class",
      "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>CharacterSet<\/decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol>, <ref.protocol usr=\"s:s10SetAlgebraP\">SetAlgebra<\/ref.protocol><\/decl.struct>",
      "key.is_system": true,
      "key.kind": "source.lang.swift.decl.extension",
      "key.length": 683,
      "key.line": 21,
      "key.modulename": "Foundation",
      "key.name": "CharacterSet",
      "key.namecolumn": 11,
      "key.namelength": 12,
      "key.nameline": 21,
      "key.nameoffset": 1322,
      "key.offset": 1312,
      "key.parsed_declaration": "extension CharacterSet",
      "key.parsed_scope.end": 31,
      "key.parsed_scope.start": 21,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public static let whitespacesAndNewlinesAndControlCharacters: <Type usr=\"s:10Foundation12CharacterSetV\">CharacterSet<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 30,
              "key.offset": 1843
            }
          ],
          "key.column": 12,
          "key.doc.column": 23,
          "key.doc.comment": "A simple concatenation of the\n<code>[CharacterSet.whitespacesAndNewlines](https:\/\/developer.apple.com\/documentation\/foundation\/characterset\/1779801-whitespacesandnewlines)<\/code>\nand\n<code>[CharacterSet.controlCharacters](https:\/\/developer.apple.com\/documentation\/foundation\/characterset\/1779846-controlcharacters)<\/code>\ncharacter sets.",
          "key.doc.declaration": "public static let whitespacesAndNewlinesAndControlCharacters: CharacterSet",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Extensions\/CharacterSet.swift",
          "key.doc.full_as_xml": "<Other file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Extensions\/CharacterSet.swift\" line=\"30\" column=\"23\"><Name>whitespacesAndNewlinesAndControlCharacters<\/Name><USR>s:10Foundation12CharacterSetV7RubiconE022whitespacesAndNewlinesF17ControlCharactersACvpZ<\/USR><Declaration>public static let whitespacesAndNewlinesAndControlCharacters: CharacterSet<\/Declaration><CommentParts><Abstract><Para>A simple concatenation of the <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/developer.apple.com\/documentation\/foundation\/characterset\/1779801-whitespacesandnewlines\">CharacterSet.whitespacesAndNewlines<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> and <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/developer.apple.com\/documentation\/foundation\/characterset\/1779846-controlcharacters\">CharacterSet.controlCharacters<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> character sets.<\/Para><\/Abstract><\/CommentParts><\/Other>",
          "key.doc.line": 30,
          "key.doc.name": "whitespacesAndNewlinesAndControlCharacters",
          "key.doc.type": "Other",
          "key.doccolumn": 5,
          "key.doclength": 382,
          "key.docline": 24,
          "key.docoffset": 1457,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Extensions\/CharacterSet.swift",
          "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>whitespacesAndNewlinesAndControlCharacters<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation12CharacterSetV\">CharacterSet<\/ref.struct><\/decl.var.type><\/decl.var.static>",
          "key.kind": "source.lang.swift.decl.var.static",
          "key.length": 143,
          "key.line": 30,
          "key.name": "whitespacesAndNewlinesAndControlCharacters",
          "key.namecolumn": 23,
          "key.namelength": 42,
          "key.nameline": 30,
          "key.nameoffset": 1861,
          "key.offset": 1850,
          "key.parsed_declaration": "public static let whitespacesAndNewlinesAndControlCharacters: CharacterSet = CharacterSet.whitespacesAndNewlines.union(CharacterSet.controlCharacters)",
          "key.parsed_scope.end": 30,
          "key.parsed_scope.start": 30,
          "key.typename": "CharacterSet",
          "key.typeusr": "$s10Foundation12CharacterSetVD",
          "key.usr": "s:10Foundation12CharacterSetV7RubiconE022whitespacesAndNewlinesF17ControlCharactersACvpZ"
        }
      ],
      "key.typename": "CharacterSet.Type",
      "key.typeusr": "$s10Foundation12CharacterSetVmD",
      "key.usr": "s:10Foundation12CharacterSetV"
    }
  ]
}
