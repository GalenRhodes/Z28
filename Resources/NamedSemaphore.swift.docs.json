{
  "key.column" : 1,
  "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
  "key.length" : 12410,
  "key.line" : 1,
  "key.offset" : 0,
  "key.substructure" : [
    {
      "key.accessibility" : "source.lang.swift.accessibility.open",
      "key.annotated_decl" : "<Declaration>open class NamedSemaphore : <Type usr=\"s:7Rubicon11PGSemaphoreP\">PGSemaphore<\/Type><\/Declaration>",
      "key.attributes" : [
        {
          "key.attribute" : "source.decl.attribute.open",
          "key.column" : 5,
          "key.length" : 4,
          "key.line" : 34,
          "key.offset" : 1809
        }
      ],
      "key.bodycolumn" : 45,
      "key.bodylength" : 10552,
      "key.bodyline" : 34,
      "key.bodyoffset" : 1849,
      "key.column" : 10,
      "key.doc.column" : 16,
      "key.doc.comment" : "This class implements an named (intra-process) semaphore. This type of semaphore is visible to multiple\nprocesses. If you need a semaphore that is visible to multiple processes then use a `NamedSemaphore`.",
      "key.doc.declaration" : "open class NamedSemaphore : PGSemaphore",
      "key.doc.file" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
      "key.doc.full_as_xml" : "<Class file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift\" line=\"34\" column=\"16\"><Name>NamedSemaphore<\/Name><USR>s:7Rubicon14NamedSemaphoreC<\/USR><Declaration>open class NamedSemaphore : PGSemaphore<\/Declaration><CommentParts><Abstract><Para>This class implements an named (intra-process) semaphore. This type of semaphore is visible to multiple processes. If you need a semaphore that is visible to multiple processes then use a <codeVoice>NamedSemaphore<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
      "key.doc.line" : 34,
      "key.doc.name" : "NamedSemaphore",
      "key.doc.type" : "Class",
      "key.doccolumn" : 5,
      "key.doclength" : 226,
      "key.docline" : 31,
      "key.docoffset" : 1579,
      "key.elements" : [
        {
          "key.column" : 32,
          "key.kind" : "source.lang.swift.structure.elem.typeref",
          "key.length" : 11,
          "key.line" : 34,
          "key.offset" : 1836
        }
      ],
      "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
      "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>NamedSemaphore<\/decl.name> : <ref.protocol usr=\"s:7Rubicon11PGSemaphoreP\">PGSemaphore<\/ref.protocol><\/decl.class>",
      "key.inheritedtypes" : [
        {
          "key.name" : "PGSemaphore"
        }
      ],
      "key.kind" : "source.lang.swift.decl.class",
      "key.length" : 10588,
      "key.line" : 34,
      "key.name" : "NamedSemaphore",
      "key.namecolumn" : 16,
      "key.namelength" : 14,
      "key.nameline" : 34,
      "key.nameoffset" : 1820,
      "key.offset" : 1814,
      "key.parsed_declaration" : "open class NamedSemaphore: PGSemaphore",
      "key.parsed_scope.end" : 240,
      "key.parsed_scope.start" : 34,
      "key.substructure" : [
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 13,
              "key.length" : 6,
              "key.line" : 36,
              "key.offset" : 1886
            }
          ],
          "key.column" : 20,
          "key.internal_diagnostic" : "Unable to resolve cursor info.",
          "key.kind" : "source.lang.swift.decl.var.static",
          "key.length" : 45,
          "key.line" : 36,
          "key.name" : "OSMaximumNameLength",
          "key.namecolumn" : 31,
          "key.namelength" : 19,
          "key.nameline" : 36,
          "key.nameoffset" : 1904,
          "key.offset" : 1893,
          "key.typename" : "Int"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 17,
              "key.length" : 6,
              "key.line" : 39,
              "key.offset" : 2001
            }
          ],
          "key.column" : 24,
          "key.internal_diagnostic" : "Unable to resolve cursor info.",
          "key.kind" : "source.lang.swift.decl.var.static",
          "key.length" : 110,
          "key.line" : 39,
          "key.name" : "OSMaximumNameLength",
          "key.namecolumn" : 35,
          "key.namelength" : 19,
          "key.nameline" : 39,
          "key.nameoffset" : 2019,
          "key.offset" : 2008,
          "key.typename" : "Int"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public static let OSMaximumNameLength: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 17,
              "key.length" : 6,
              "key.line" : 41,
              "key.offset" : 2153
            }
          ],
          "key.column" : 24,
          "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>OSMaximumNameLength<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.static>",
          "key.kind" : "source.lang.swift.decl.var.static",
          "key.length" : 71,
          "key.line" : 41,
          "key.name" : "OSMaximumNameLength",
          "key.namecolumn" : 35,
          "key.namelength" : 19,
          "key.nameline" : 41,
          "key.nameoffset" : 2171,
          "key.offset" : 2160,
          "key.parsed_declaration" : "public static let OSMaximumNameLength: Int = Int(truncatingIfNeeded: NAME_MAX)",
          "key.parsed_scope.end" : 41,
          "key.parsed_scope.start" : 41,
          "key.typename" : "Int",
          "key.typeusr" : "$sSiD",
          "key.usr" : "s:7Rubicon14NamedSemaphoreC19OSMaximumNameLengthSivpZ"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 13,
              "key.length" : 6,
              "key.line" : 48,
              "key.offset" : 2543
            }
          ],
          "key.column" : 20,
          "key.doc.comment" : "The maximum value of the semaphore - 2,147,483,647. The current value will never go above this value.",
          "key.internal_diagnostic" : "Unable to resolve cursor info.",
          "key.kind" : "source.lang.swift.decl.var.static",
          "key.length" : 47,
          "key.line" : 48,
          "key.name" : "OSMaximumValue",
          "key.namecolumn" : 31,
          "key.namelength" : 14,
          "key.nameline" : 48,
          "key.nameoffset" : 2561,
          "key.offset" : 2550,
          "key.typename" : "Int"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public static let OSMaximumValue: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 13,
              "key.length" : 6,
              "key.line" : 50,
              "key.offset" : 2624
            }
          ],
          "key.column" : 20,
          "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>OSMaximumValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.static>",
          "key.kind" : "source.lang.swift.decl.var.static",
          "key.length" : 71,
          "key.line" : 50,
          "key.name" : "OSMaximumValue",
          "key.namecolumn" : 31,
          "key.namelength" : 14,
          "key.nameline" : 50,
          "key.nameoffset" : 2642,
          "key.offset" : 2631,
          "key.parsed_declaration" : "public static let OSMaximumValue: Int = Int(truncatingIfNeeded: SEM_VALUE_MAX)",
          "key.parsed_scope.end" : 50,
          "key.parsed_scope.start" : 50,
          "key.typename" : "Int",
          "key.typeusr" : "$sSiD",
          "key.usr" : "s:7Rubicon14NamedSemaphoreC14OSMaximumValueSivpZ"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public private(set) var isOpen: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.setter_access.private",
              "key.column" : 16,
              "key.length" : 12,
              "key.line" : 55,
              "key.offset" : 2937
            },
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 9,
              "key.length" : 6,
              "key.line" : 55,
              "key.offset" : 2930
            }
          ],
          "key.column" : 29,
          "key.doc.column" : 33,
          "key.doc.comment" : "`true` if the semaphore is open.  `false` if it has been closed.",
          "key.doc.declaration" : "public private(set) var isOpen: Bool { get }",
          "key.doc.file" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.doc.full_as_xml" : "<Other file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift\" line=\"55\" column=\"33\"><Name>isOpen<\/Name><USR>s:7Rubicon14NamedSemaphoreC6isOpenSbvp<\/USR><Declaration>public private(set) var isOpen: Bool { get }<\/Declaration><CommentParts><Abstract><Para><codeVoice>true<\/codeVoice> if the semaphore is open.  <codeVoice>false<\/codeVoice> if it has been closed.<\/Para><\/Abstract><\/CommentParts><\/Other>",
          "key.doc.line" : 55,
          "key.doc.name" : "isOpen",
          "key.doc.type" : "Other",
          "key.doccolumn" : 9,
          "key.doclength" : 81,
          "key.docline" : 53,
          "key.docoffset" : 2841,
          "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>private<\/syntaxtype.keyword>(set) <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isOpen<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { get }<\/decl.var.instance>",
          "key.kind" : "source.lang.swift.decl.var.instance",
          "key.length" : 24,
          "key.line" : 55,
          "key.name" : "isOpen",
          "key.namecolumn" : 33,
          "key.namelength" : 6,
          "key.nameline" : 55,
          "key.nameoffset" : 2954,
          "key.offset" : 2950,
          "key.parsed_declaration" : "public private(set) var isOpen: Bool = false",
          "key.parsed_scope.end" : 55,
          "key.parsed_scope.start" : 55,
          "key.setter_accessibility" : "source.lang.swift.accessibility.private",
          "key.typename" : "Bool",
          "key.typeusr" : "$sSbD",
          "key.usr" : "s:7Rubicon14NamedSemaphoreC6isOpenSbvp"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public let name: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 9,
              "key.length" : 6,
              "key.line" : 56,
              "key.offset" : 2983
            }
          ],
          "key.column" : 16,
          "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>name<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
          "key.kind" : "source.lang.swift.decl.var.instance",
          "key.length" : 16,
          "key.line" : 56,
          "key.name" : "name",
          "key.namecolumn" : 20,
          "key.namelength" : 4,
          "key.nameline" : 56,
          "key.nameoffset" : 2994,
          "key.offset" : 2990,
          "key.parsed_declaration" : "public let name: String",
          "key.parsed_scope.end" : 56,
          "key.parsed_scope.start" : 56,
          "key.typename" : "String",
          "key.typeusr" : "$sSSD",
          "key.usr" : "s:7Rubicon14NamedSemaphoreC4nameSSvp"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 13,
              "key.length" : 6,
              "key.line" : 61,
              "key.offset" : 3284
            }
          ],
          "key.column" : 20,
          "key.doc.comment" : "The maximum value of the semaphore - 2,147,483,647. The current value will never go above this value.",
          "key.internal_diagnostic" : "Unable to resolve cursor info.",
          "key.kind" : "source.lang.swift.decl.var.instance",
          "key.length" : 17,
          "key.line" : 61,
          "key.name" : "maxValue",
          "key.namecolumn" : 24,
          "key.namelength" : 8,
          "key.nameline" : 61,
          "key.nameoffset" : 3295,
          "key.offset" : 3291,
          "key.typename" : "Int"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public let maxValue: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 13,
              "key.length" : 6,
              "key.line" : 63,
              "key.offset" : 3335
            }
          ],
          "key.column" : 20,
          "key.doc.column" : 9,
          "key.doc.declaration" : "var maxValue: Int { get }",
          "key.doc.discussion" : [
            {
              "Note" : ""
            }
          ],
          "key.doc.file" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/PGSemaphore.swift",
          "key.doc.full_as_xml" : "<Other file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/PGSemaphore.swift\" line=\"25\" column=\"9\"><Name>maxValue<\/Name><USR>s:7Rubicon11PGSemaphoreP8maxValueSivp<\/USR><Declaration>var maxValue: Int { get }<\/Declaration><CommentParts><Abstract><Para>The maximum value of the semaphore. The current value will never go above this value.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>PGSemaphore<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
          "key.doc.line" : 25,
          "key.doc.name" : "maxValue",
          "key.doc.type" : "Other",
          "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>maxValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
          "key.kind" : "source.lang.swift.decl.var.instance",
          "key.length" : 49,
          "key.line" : 63,
          "key.name" : "maxValue",
          "key.namecolumn" : 24,
          "key.namelength" : 8,
          "key.nameline" : 63,
          "key.nameoffset" : 3346,
          "key.offset" : 3342,
          "key.overrides" : [
            {
              "key.usr" : "s:7Rubicon11PGSemaphoreP8maxValueSivp"
            }
          ],
          "key.parsed_declaration" : "public let maxValue: Int = NamedSemaphore.OSMaximumValue",
          "key.parsed_scope.end" : 63,
          "key.parsed_scope.start" : 63,
          "key.typename" : "Int",
          "key.typeusr" : "$sSiD",
          "key.usr" : "s:7Rubicon11PGSemaphoreP8maxValueSivp"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public var value: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 9,
              "key.length" : 6,
              "key.line" : 72,
              "key.offset" : 4030
            }
          ],
          "key.bodycolumn" : 32,
          "key.bodylength" : 373,
          "key.bodyline" : 72,
          "key.bodyoffset" : 4053,
          "key.column" : 16,
          "key.doc.column" : 20,
          "key.doc.comment" : "The current value of the semaphore. If this value is less than or equal to\n<code>[zero](https:\/\/en.wikipedia.org\/wiki\/0)<\/code> then any call to `acquire()`, `tryAcquire()`, or\n`tryAcquire(until:)` will respectively either block, fail, or potentially timeout until this value\nbecomes greater than <code>[zero](https:\/\/en.wikipedia.org\/wiki\/0)<\/code>. Currently, only Linux\nallows for reading the current value of the semaphore.",
          "key.doc.declaration" : "public var value: Int { get }",
          "key.doc.file" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.doc.full_as_xml" : "<Other file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift\" line=\"72\" column=\"20\"><Name>value<\/Name><USR>s:7Rubicon14NamedSemaphoreC5valueSivp<\/USR><Declaration>public var value: Int { get }<\/Declaration><CommentParts><Abstract><Para>The current value of the semaphore. If this value is less than or equal to <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/en.wikipedia.org\/wiki\/0\">zero<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> then any call to <codeVoice>acquire()<\/codeVoice>, <codeVoice>tryAcquire()<\/codeVoice>, or <codeVoice>tryAcquire(until:)<\/codeVoice> will respectively either block, fail, or potentially timeout until this value becomes greater than <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/en.wikipedia.org\/wiki\/0\">zero<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML>. Currently, only Linux allows for reading the current value of the semaphore.<\/Para><\/Abstract><\/CommentParts><\/Other>",
          "key.doc.line" : 72,
          "key.doc.name" : "value",
          "key.doc.type" : "Other",
          "key.doccolumn" : 9,
          "key.doclength" : 492,
          "key.docline" : 66,
          "key.docoffset" : 3530,
          "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind" : "source.lang.swift.decl.var.instance",
          "key.length" : 390,
          "key.line" : 72,
          "key.name" : "value",
          "key.namecolumn" : 20,
          "key.namelength" : 5,
          "key.nameline" : 72,
          "key.nameoffset" : 4041,
          "key.offset" : 4037,
          "key.overrides" : [
            {
              "key.usr" : "s:7Rubicon11PGSemaphoreP5valueSivp"
            }
          ],
          "key.parsed_declaration" : "public var value: Int",
          "key.parsed_scope.end" : 81,
          "key.parsed_scope.start" : 72,
          "key.typename" : "Int",
          "key.typeusr" : "$sSiD",
          "key.usr" : "s:7Rubicon14NamedSemaphoreC5valueSivp"
        },
        {
          "key.column" : 17,
          "key.internal_diagnostic" : "Unable to resolve cursor info.",
          "key.kind" : "source.lang.swift.decl.var.local",
          "key.length" : 88,
          "key.line" : 76,
          "key.name" : "_zz",
          "key.namecolumn" : 21,
          "key.namelength" : 3,
          "key.nameline" : 76,
          "key.nameoffset" : 4196,
          "key.offset" : 4192,
          "key.typename" : "UnsafeMutablePointer<Int32>"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.private",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.private",
              "key.column" : 13,
              "key.length" : 7,
              "key.line" : 84,
              "key.offset" : 4465
            }
          ],
          "key.column" : 21,
          "key.internal_diagnostic" : "Unable to resolve cursor info.",
          "key.kind" : "source.lang.swift.decl.var.instance",
          "key.length" : 23,
          "key.line" : 84,
          "key.name" : "_sem",
          "key.namecolumn" : 25,
          "key.namelength" : 4,
          "key.nameline" : 84,
          "key.nameoffset" : 4477,
          "key.offset" : 4473,
          "key.setter_accessibility" : "source.lang.swift.accessibility.private",
          "key.typename" : "HANDLE!"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.private",
          "key.annotated_decl" : "<Declaration>private let _owns: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.private",
              "key.column" : 13,
              "key.length" : 7,
              "key.line" : 86,
              "key.offset" : 4523
            }
          ],
          "key.column" : 21,
          "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>_owns<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
          "key.kind" : "source.lang.swift.decl.var.instance",
          "key.length" : 15,
          "key.line" : 86,
          "key.name" : "_owns",
          "key.namecolumn" : 25,
          "key.namelength" : 5,
          "key.nameline" : 86,
          "key.nameoffset" : 4535,
          "key.offset" : 4531,
          "key.parsed_declaration" : "private let _owns: Bool",
          "key.parsed_scope.end" : 86,
          "key.parsed_scope.start" : 86,
          "key.typename" : "Bool",
          "key.typeusr" : "$sSbD",
          "key.usr" : "s:7Rubicon14NamedSemaphoreC5_owns33_285FD19E86A1DD732A64399A5A768013LLSbvp"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.private",
          "key.annotated_decl" : "<Declaration>private var _sem: <Type usr=\"s:6Darwin9Semaphorea\">Semaphore<\/Type><\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.private",
              "key.column" : 13,
              "key.length" : 7,
              "key.line" : 87,
              "key.offset" : 4559
            }
          ],
          "key.column" : 21,
          "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>_sem<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:6Darwin9Semaphorea\">Semaphore<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
          "key.kind" : "source.lang.swift.decl.var.instance",
          "key.length" : 20,
          "key.line" : 87,
          "key.name" : "_sem",
          "key.namecolumn" : 25,
          "key.namelength" : 4,
          "key.nameline" : 87,
          "key.nameoffset" : 4571,
          "key.offset" : 4567,
          "key.parsed_declaration" : "private var _sem:  Semaphore",
          "key.parsed_scope.end" : 87,
          "key.parsed_scope.start" : 87,
          "key.setter_accessibility" : "source.lang.swift.accessibility.private",
          "key.typename" : "UnsafeMutablePointer<Int32>",
          "key.typeusr" : "$sSpys5Int32VGD",
          "key.usr" : "s:7Rubicon14NamedSemaphoreC4_sem33_285FD19E86A1DD732A64399A5A768013LLSpys5Int32VGvp"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 13,
              "key.length" : 6,
              "key.line" : 101,
              "key.offset" : 5241
            }
          ],
          "key.bodycolumn" : 106,
          "key.bodylength" : 363,
          "key.bodyline" : 101,
          "key.bodyoffset" : 5334,
          "key.column" : 20,
          "key.doc.comment" : "Create a new named semaphore.\n\n- Parameters:\n  - name: The name of the semaphore.\n  - initialValue: The initial value of the semaphore. Must be between\n                  <code>[zero](https:\/\/en.wikipedia.org\/wiki\/0)<\/code> (0) and `maxValue`.\n  - maxValue: The maximum value the semaphore is allowed.\n  - error: Set to any error that occurs.",
          "key.doccolumn" : 13,
          "key.doclength" : 474,
          "key.docline" : 92,
          "key.docoffset" : 4755,
          "key.internal_diagnostic" : "Unable to resolve cursor info.",
          "key.kind" : "source.lang.swift.decl.function.method.instance",
          "key.length" : 450,
          "key.line" : 101,
          "key.name" : "init(name:initialValue:maxValue:error:)",
          "key.namecolumn" : 20,
          "key.namelength" : 84,
          "key.nameline" : 101,
          "key.nameoffset" : 5248,
          "key.offset" : 5248,
          "key.substructure" : [
            {
              "key.column" : 17,
              "key.internal_diagnostic" : "Unable to resolve cursor info.",
              "key.kind" : "source.lang.swift.decl.var.local",
              "key.length" : 13,
              "key.line" : 102,
              "key.name" : "nm",
              "key.namecolumn" : 21,
              "key.namelength" : 2,
              "key.nameline" : 102,
              "key.nameoffset" : 5355,
              "key.offset" : 5351
            },
            {
              "key.column" : 17,
              "key.internal_diagnostic" : "Unable to resolve cursor info.",
              "key.kind" : "source.lang.swift.decl.var.local",
              "key.length" : 63,
              "key.line" : 103,
              "key.name" : "rx",
              "key.namecolumn" : 21,
              "key.namelength" : 2,
              "key.nameline" : 103,
              "key.nameoffset" : 5385,
              "key.offset" : 5381
            }
          ]
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.convenience",
              "key.column" : 20,
              "key.length" : 11,
              "key.line" : 120,
              "key.offset" : 6232
            },
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 13,
              "key.length" : 6,
              "key.line" : 120,
              "key.offset" : 6225
            }
          ],
          "key.bodycolumn" : 97,
          "key.bodylength" : 134,
          "key.bodyline" : 120,
          "key.bodyoffset" : 6309,
          "key.column" : 32,
          "key.doc.comment" : "Create a new named semaphore.\n\n- Parameters:\n  - name: The name of the semaphore.\n  - initialValue: The initial value of the semaphore. The maximum value is OS dependent. On macOS\n                  it is 32,767.\n  - maxValue: The maximum value the semaphore is allowed.",
          "key.doccolumn" : 13,
          "key.doclength" : 386,
          "key.docline" : 112,
          "key.docoffset" : 5827,
          "key.internal_diagnostic" : "Unable to resolve cursor info.",
          "key.kind" : "source.lang.swift.decl.function.method.instance",
          "key.length" : 200,
          "key.line" : 120,
          "key.name" : "init(name:initialValue:maxValue:)",
          "key.namecolumn" : 32,
          "key.namelength" : 63,
          "key.nameline" : 120,
          "key.nameoffset" : 6244,
          "key.offset" : 6244,
          "key.substructure" : [
            {
              "key.column" : 17,
              "key.internal_diagnostic" : "Unable to resolve cursor info.",
              "key.kind" : "source.lang.swift.decl.var.local",
              "key.length" : 23,
              "key.line" : 121,
              "key.name" : "error",
              "key.namecolumn" : 21,
              "key.namelength" : 5,
              "key.nameline" : 121,
              "key.nameoffset" : 6330,
              "key.offset" : 6326,
              "key.typename" : "Error?"
            }
          ]
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public init?(name: <Type usr=\"s:SS\">String<\/Type>, initialValue: <Type usr=\"s:Si\">Int<\/Type>, error: inout <Type usr=\"s:s5ErrorP\">Error<\/Type>?)<\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 13,
              "key.length" : 6,
              "key.line" : 135,
              "key.offset" : 7096
            }
          ],
          "key.bodycolumn" : 81,
          "key.bodylength" : 877,
          "key.bodyline" : 135,
          "key.bodyoffset" : 7164,
          "key.column" : 20,
          "key.doc.column" : 20,
          "key.doc.comment" : "Create a new named semaphore.\n\n- Parameters:\n  - name: The name of the semaphore.\n  - initialValue: The initial value of the semaphore. Must be between\n                  <code>[zero](https:\/\/en.wikipedia.org\/wiki\/0)<\/code> (0) and `OSMaximumValue`.\n                  The maximum value is OS dependent. On macOS it is 32,767.\n  - error: Set to any error that occurs.",
          "key.doc.declaration" : "public init?(name: String, initialValue: Int, error: inout Error?)",
          "key.doc.file" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.doc.full_as_xml" : "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift\" line=\"135\" column=\"20\"><Name>init(name:initialValue:error:)<\/Name><USR>s:7Rubicon14NamedSemaphoreC4name12initialValue5errorACSgSS_Sis5Error_pSgztcfc<\/USR><Declaration>public init?(name: String, initialValue: Int, error: inout Error?)<\/Declaration><CommentParts><Abstract><Para>Create a new named semaphore.<\/Para><\/Abstract><Parameters><Parameter><Name>name<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The name of the semaphore.<\/Para><\/Discussion><\/Parameter><Parameter><Name>initialValue<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The initial value of the semaphore. Must be between <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/en.wikipedia.org\/wiki\/0\">zero<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> (0) and <codeVoice>OSMaximumValue<\/codeVoice>. The maximum value is OS dependent. On macOS it is 32,767.<\/Para><\/Discussion><\/Parameter><Parameter><Name>error<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Set to any error that occurs.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
          "key.doc.line" : 135,
          "key.doc.name" : "init(name:initialValue:error:)",
          "key.doc.parameters" : [
            {
              "discussion" : [
                {
                  "Para" : "The name of the semaphore."
                }
              ],
              "name" : "name"
            },
            {
              "discussion" : [
                {
                  "Para" : "The initial value of the semaphore. Must be between <code><\/code> (0) and `OSMaximumValue`. The maximum value is OS dependent. On macOS it is 32,767."
                }
              ],
              "name" : "initialValue"
            },
            {
              "discussion" : [
                {
                  "Para" : "Set to any error that occurs."
                }
              ],
              "name" : "error"
            }
          ],
          "key.doc.type" : "Function",
          "key.doccolumn" : 13,
          "key.doclength" : 498,
          "key.docline" : 126,
          "key.docoffset" : 6586,
          "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>name<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>initialValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>error<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
          "key.kind" : "source.lang.swift.decl.function.method.instance",
          "key.length" : 939,
          "key.line" : 135,
          "key.name" : "init(name:initialValue:error:)",
          "key.namecolumn" : 20,
          "key.namelength" : 59,
          "key.nameline" : 135,
          "key.nameoffset" : 7103,
          "key.offset" : 7103,
          "key.parsed_declaration" : "public init?(name: String, initialValue: Int, error: inout Error?)",
          "key.parsed_scope.end" : 157,
          "key.parsed_scope.start" : 135,
          "key.related_decls" : [
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:7Rubicon14NamedSemaphoreC4name12initialValueACSgSS_Sitcfc\">init(name:initialValue:)<\/RelatedName>"
            }
          ],
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>let s: <Type usr=\"s:6Darwin9Semaphorea\">Semaphore<\/Type>?<\/Declaration>",
              "key.column" : 17,
              "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
              "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>s<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:6Darwin9Semaphorea\">Semaphore<\/ref.typealias>?<\/decl.var.type><\/decl.var.local>",
              "key.kind" : "source.lang.swift.decl.var.local",
              "key.length" : 100,
              "key.line" : 137,
              "key.name" : "s",
              "key.namecolumn" : 21,
              "key.namelength" : 1,
              "key.nameline" : 137,
              "key.nameoffset" : 7255,
              "key.offset" : 7251,
              "key.parsed_declaration" : "let s = sem_open(self.name, O_CREAT | O_EXCL, 0o777, CUnsignedInt(truncatingIfNeeded: initialValue))",
              "key.parsed_scope.end" : 137,
              "key.parsed_scope.start" : 137,
              "key.typename" : "UnsafeMutablePointer<Int32>?",
              "key.typeusr" : "$sSpys5Int32VGSgD",
              "key.usr" : "s:7Rubicon14NamedSemaphoreC4name12initialValue5errorACSgSS_Sis5Error_pSgztcfc1sL_Spys5Int32VGSgvp"
            }
          ],
          "key.typename" : "(NamedSemaphore.Type) -> (String, Int, inout Error?) -> NamedSemaphore?",
          "key.typeusr" : "$s4name12initialValue5error7Rubicon14NamedSemaphoreCSgSS_Sis5Error_pSgztcD",
          "key.usr" : "s:7Rubicon14NamedSemaphoreC4name12initialValue5errorACSgSS_Sis5Error_pSgztcfc"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public convenience init?(name: <Type usr=\"s:SS\">String<\/Type>, initialValue: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.convenience",
              "key.column" : 20,
              "key.length" : 11,
              "key.line" : 167,
              "key.offset" : 8502
            },
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 13,
              "key.length" : 6,
              "key.line" : 167,
              "key.offset" : 8495
            }
          ],
          "key.bodycolumn" : 72,
          "key.bodylength" : 134,
          "key.bodyline" : 167,
          "key.bodyoffset" : 8554,
          "key.column" : 32,
          "key.doc.column" : 32,
          "key.doc.comment" : "Create a new named semaphore.\n\n- Parameters:\n  - name: The name of the semaphore.\n  - initialValue: The initial value of the semaphore. The maximum value is OS dependent. On macOS\n                  it is 32,767.",
          "key.doc.declaration" : "public convenience init?(name: String, initialValue: Int)",
          "key.doc.file" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.doc.full_as_xml" : "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift\" line=\"167\" column=\"32\"><Name>init(name:initialValue:)<\/Name><USR>s:7Rubicon14NamedSemaphoreC4name12initialValueACSgSS_Sitcfc<\/USR><Declaration>public convenience init?(name: String, initialValue: Int)<\/Declaration><CommentParts><Abstract><Para>Create a new named semaphore.<\/Para><\/Abstract><Parameters><Parameter><Name>name<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The name of the semaphore.<\/Para><\/Discussion><\/Parameter><Parameter><Name>initialValue<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The initial value of the semaphore. The maximum value is OS dependent. On macOS it is 32,767.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
          "key.doc.line" : 167,
          "key.doc.name" : "init(name:initialValue:)",
          "key.doc.parameters" : [
            {
              "discussion" : [
                {
                  "Para" : "The name of the semaphore."
                }
              ],
              "name" : "name"
            },
            {
              "discussion" : [
                {
                  "Para" : "The initial value of the semaphore. The maximum value is OS dependent. On macOS it is 32,767."
                }
              ],
              "name" : "initialValue"
            }
          ],
          "key.doc.type" : "Function",
          "key.doccolumn" : 13,
          "key.doclength" : 312,
          "key.docline" : 160,
          "key.docoffset" : 8171,
          "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>name<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>initialValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
          "key.kind" : "source.lang.swift.decl.function.method.instance",
          "key.length" : 175,
          "key.line" : 167,
          "key.name" : "init(name:initialValue:)",
          "key.namecolumn" : 32,
          "key.namelength" : 38,
          "key.nameline" : 167,
          "key.nameoffset" : 8514,
          "key.offset" : 8514,
          "key.parsed_declaration" : "public convenience init?(name: String, initialValue: Int)",
          "key.parsed_scope.end" : 170,
          "key.parsed_scope.start" : 167,
          "key.related_decls" : [
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:7Rubicon14NamedSemaphoreC4name12initialValue5errorACSgSS_Sis5Error_pSgztcfc\">init(name:initialValue:error:)<\/RelatedName>"
            }
          ],
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>var error: <Type usr=\"s:s5ErrorP\">Error<\/Type>?<\/Declaration>",
              "key.column" : 17,
              "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
              "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>error<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>?<\/decl.var.type><\/decl.var.local>",
              "key.kind" : "source.lang.swift.decl.var.local",
              "key.length" : 23,
              "key.line" : 168,
              "key.name" : "error",
              "key.namecolumn" : 21,
              "key.namelength" : 5,
              "key.nameline" : 168,
              "key.nameoffset" : 8575,
              "key.offset" : 8571,
              "key.parsed_declaration" : "var error: Error? = nil",
              "key.parsed_scope.end" : 168,
              "key.parsed_scope.start" : 168,
              "key.typename" : "Error?",
              "key.typeusr" : "$ss5Error_pSgD",
              "key.usr" : "s:7Rubicon14NamedSemaphoreC4name12initialValueACSgSS_Sitcfc5errorL_s5Error_pSgvp"
            }
          ],
          "key.typename" : "(NamedSemaphore.Type) -> (String, Int) -> NamedSemaphore?",
          "key.typeusr" : "$s4name12initialValue7Rubicon14NamedSemaphoreCSgSS_SitcD",
          "key.usr" : "s:7Rubicon14NamedSemaphoreC4name12initialValueACSgSS_Sitcfc"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public func release() -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 9,
              "key.length" : 6,
              "key.line" : 181,
              "key.offset" : 9327
            }
          ],
          "key.bodycolumn" : 40,
          "key.bodylength" : 141,
          "key.bodyline" : 181,
          "key.bodyoffset" : 9358,
          "key.column" : 16,
          "key.doc.column" : 21,
          "key.doc.comment" : "Release the semaphore. Increments the value by one (1). If the value was previously less than or equal\nto <code>[zero](https:\/\/en.wikipedia.org\/wiki\/0)<\/code> (0) then a waiting thread will be woken up and\nallowed to acquire the semaphore.\n\n- Returns: `true` if successful. If the value before calling `release()` is already equal to the\n           maximum value then it is left unchanged and `false` is returned.",
          "key.doc.declaration" : "public func release() -> Bool",
          "key.doc.file" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.doc.full_as_xml" : "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift\" line=\"181\" column=\"21\"><Name>release()<\/Name><USR>s:7Rubicon14NamedSemaphoreC7releaseSbyF<\/USR><Declaration>public func release() -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Release the semaphore. Increments the value by one (1). If the value was previously less than or equal to <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/en.wikipedia.org\/wiki\/0\">zero<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> (0) then a waiting thread will be woken up and allowed to acquire the semaphore.<\/Para><\/Abstract><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if successful. If the value before calling <codeVoice>release()<\/codeVoice> is already equal to the maximum value then it is left unchanged and <codeVoice>false<\/codeVoice> is returned.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
          "key.doc.line" : 181,
          "key.doc.name" : "release()",
          "key.doc.result_discussion" : [
            {
              "Para" : "`true` if successful. If the value before calling `release()` is already equal to the maximum value then it is left unchanged and `false` is returned."
            }
          ],
          "key.doc.type" : "Function",
          "key.doccolumn" : 9,
          "key.doclength" : 490,
          "key.docline" : 174,
          "key.docoffset" : 8829,
          "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>release<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind" : "source.lang.swift.decl.function.method.instance",
          "key.length" : 166,
          "key.line" : 181,
          "key.name" : "release()",
          "key.namecolumn" : 21,
          "key.namelength" : 9,
          "key.nameline" : 181,
          "key.nameoffset" : 9339,
          "key.offset" : 9334,
          "key.overrides" : [
            {
              "key.usr" : "s:7Rubicon11PGSemaphoreP7releaseSbyF"
            }
          ],
          "key.parsed_declaration" : "public func release() -> Bool",
          "key.parsed_scope.end" : 187,
          "key.parsed_scope.start" : 181,
          "key.substructure" : [

          ],
          "key.typename" : "(NamedSemaphore) -> () -> Bool",
          "key.typeusr" : "$sSbycD",
          "key.usr" : "s:7Rubicon14NamedSemaphoreC7releaseSbyF"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public func acquire()<\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 9,
              "key.length" : 6,
              "key.line" : 194,
              "key.offset" : 9924
            }
          ],
          "key.bodycolumn" : 32,
          "key.bodylength" : 182,
          "key.bodyline" : 194,
          "key.bodyoffset" : 9947,
          "key.column" : 16,
          "key.doc.column" : 21,
          "key.doc.comment" : "Acquire the semaphore. If the value before calling is less than or equal to\n<code>[zero](https:\/\/en.wikipedia.org\/wiki\/0)<\/code> (0) then the calling thread is blocked until it\nis greater than <code>[zero](https:\/\/en.wikipedia.org\/wiki\/0)<\/code> (0).",
          "key.doc.declaration" : "public func acquire()",
          "key.doc.file" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.doc.full_as_xml" : "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift\" line=\"194\" column=\"21\"><Name>acquire()<\/Name><USR>s:7Rubicon14NamedSemaphoreC7acquireyyF<\/USR><Declaration>public func acquire()<\/Declaration><CommentParts><Abstract><Para>Acquire the semaphore. If the value before calling is less than or equal to <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/en.wikipedia.org\/wiki\/0\">zero<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> (0) then the calling thread is blocked until it is greater than <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/en.wikipedia.org\/wiki\/0\">zero<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> (0).<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line" : 194,
          "key.doc.name" : "acquire()",
          "key.doc.type" : "Function",
          "key.doccolumn" : 9,
          "key.doclength" : 291,
          "key.docline" : 190,
          "key.docoffset" : 9625,
          "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>acquire<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind" : "source.lang.swift.decl.function.method.instance",
          "key.length" : 199,
          "key.line" : 194,
          "key.name" : "acquire()",
          "key.namecolumn" : 21,
          "key.namelength" : 9,
          "key.nameline" : 194,
          "key.nameoffset" : 9936,
          "key.offset" : 9931,
          "key.overrides" : [
            {
              "key.usr" : "s:7Rubicon11PGSemaphoreP7acquireyyF"
            }
          ],
          "key.parsed_declaration" : "public func acquire()",
          "key.parsed_scope.end" : 199,
          "key.parsed_scope.start" : 194,
          "key.substructure" : [

          ],
          "key.typename" : "(NamedSemaphore) -> () -> ()",
          "key.typeusr" : "$syycD",
          "key.usr" : "s:7Rubicon14NamedSemaphoreC7acquireyyF"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public func tryAcquire() -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 9,
              "key.length" : 6,
              "key.line" : 208,
              "key.offset" : 10661
            }
          ],
          "key.bodycolumn" : 43,
          "key.bodylength" : 308,
          "key.bodyline" : 208,
          "key.bodyoffset" : 10695,
          "key.column" : 16,
          "key.doc.column" : 21,
          "key.doc.comment" : "Attempt to acquire the semaphore. If the value before calling is less than or equal to\n<code>[zero](https:\/\/en.wikipedia.org\/wiki\/0)<\/code> (0) then this method fails by returning `false`.\n\n- Returns: `true` if successful. `false` if value is less than or equal to\n           <code>[zero](https:\/\/en.wikipedia.org\/wiki\/0)<\/code> (0).",
          "key.doc.declaration" : "public func tryAcquire() -> Bool",
          "key.doc.file" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.doc.full_as_xml" : "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift\" line=\"208\" column=\"21\"><Name>tryAcquire()<\/Name><USR>s:7Rubicon14NamedSemaphoreC10tryAcquireSbyF<\/USR><Declaration>public func tryAcquire() -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Attempt to acquire the semaphore. If the value before calling is less than or equal to <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/en.wikipedia.org\/wiki\/0\">zero<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> (0) then this method fails by returning <codeVoice>false<\/codeVoice>.<\/Para><\/Abstract><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if successful. <codeVoice>false<\/codeVoice> if value is less than or equal to <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/en.wikipedia.org\/wiki\/0\">zero<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> (0).<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
          "key.doc.line" : 208,
          "key.doc.name" : "tryAcquire()",
          "key.doc.result_discussion" : [
            {
              "Para" : "`true` if successful. `false` if value is less than or equal to <code><\/code> (0)."
            }
          ],
          "key.doc.type" : "Function",
          "key.doccolumn" : 9,
          "key.doclength" : 398,
          "key.docline" : 202,
          "key.docoffset" : 10255,
          "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tryAcquire<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind" : "source.lang.swift.decl.function.method.instance",
          "key.length" : 336,
          "key.line" : 208,
          "key.name" : "tryAcquire()",
          "key.namecolumn" : 21,
          "key.namelength" : 12,
          "key.nameline" : 208,
          "key.nameoffset" : 10673,
          "key.offset" : 10668,
          "key.overrides" : [
            {
              "key.usr" : "s:7Rubicon11PGSemaphoreP10tryAcquireSbyF"
            }
          ],
          "key.parsed_declaration" : "public func tryAcquire() -> Bool",
          "key.parsed_scope.end" : 216,
          "key.parsed_scope.start" : 208,
          "key.related_decls" : [
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:7Rubicon14NamedSemaphoreC10tryAcquire5untilSb10Foundation4DateV_tF\">tryAcquire(until:)<\/RelatedName>"
            }
          ],
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>let ret: <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
              "key.column" : 17,
              "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
              "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>ret<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.type><\/decl.var.local>",
              "key.kind" : "source.lang.swift.decl.var.local",
              "key.length" : 34,
              "key.line" : 212,
              "key.name" : "ret",
              "key.namecolumn" : 21,
              "key.namelength" : 3,
              "key.nameline" : 212,
              "key.nameoffset" : 10791,
              "key.offset" : 10787,
              "key.parsed_declaration" : "let ret: Int32 = sem_trywait(_sem)",
              "key.parsed_scope.end" : 212,
              "key.parsed_scope.start" : 212,
              "key.typename" : "Int32",
              "key.typeusr" : "$ss5Int32VD",
              "key.usr" : "s:7Rubicon14NamedSemaphoreC10tryAcquireSbyF3retL_s5Int32Vvp"
            }
          ],
          "key.typename" : "(NamedSemaphore) -> () -> Bool",
          "key.typeusr" : "$sSbycD",
          "key.usr" : "s:7Rubicon14NamedSemaphoreC10tryAcquireSbyF"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public func tryAcquire(until: <Type usr=\"s:10Foundation4DateV\">Date<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.column" : 9,
              "key.length" : 6,
              "key.line" : 227,
              "key.offset" : 11738
            }
          ],
          "key.bodycolumn" : 54,
          "key.bodylength" : 612,
          "key.bodyline" : 227,
          "key.bodyoffset" : 11783,
          "key.column" : 16,
          "key.doc.column" : 21,
          "key.doc.comment" : "Attempt to acquire the semaphore. If the value before calling is less than or equal to\n<code>[zero](https:\/\/en.wikipedia.org\/wiki\/0)<\/code> (0) then the calling thread is blocked until\neither the value is greater than <code>[zero](https:\/\/en.wikipedia.org\/wiki\/0)<\/code> (0) or until the\namount of time specified by `until` has elapsed.\n\n- Parameter until: the absolute time that this method will wait trying to acquire the semaphore.\n- Returns: `true` if successful or `false` if the specified time has elapsed.",
          "key.doc.declaration" : "public func tryAcquire(until: Date) -> Bool",
          "key.doc.file" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.doc.full_as_xml" : "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift\" line=\"227\" column=\"21\"><Name>tryAcquire(until:)<\/Name><USR>s:7Rubicon14NamedSemaphoreC10tryAcquire5untilSb10Foundation4DateV_tF<\/USR><Declaration>public func tryAcquire(until: Date) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Attempt to acquire the semaphore. If the value before calling is less than or equal to <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/en.wikipedia.org\/wiki\/0\">zero<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> (0) then the calling thread is blocked until either the value is greater than <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/en.wikipedia.org\/wiki\/0\">zero<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> (0) or until the amount of time specified by <codeVoice>until<\/codeVoice> has elapsed.<\/Para><\/Abstract><Parameters><Parameter><Name>until<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the absolute time that this method will wait trying to acquire the semaphore.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if successful or <codeVoice>false<\/codeVoice> if the specified time has elapsed.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
          "key.doc.line" : 227,
          "key.doc.name" : "tryAcquire(until:)",
          "key.doc.parameters" : [
            {
              "discussion" : [
                {
                  "Para" : "the absolute time that this method will wait trying to acquire the semaphore."
                }
              ],
              "name" : "until"
            }
          ],
          "key.doc.result_discussion" : [
            {
              "Para" : "`true` if successful or `false` if the specified time has elapsed."
            }
          ],
          "key.doc.type" : "Function",
          "key.doccolumn" : 9,
          "key.doclength" : 601,
          "key.docline" : 219,
          "key.docoffset" : 11129,
          "key.filepath" : "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Concurrency\/NamedSemaphore.swift",
          "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tryAcquire<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>until<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind" : "source.lang.swift.decl.function.method.instance",
          "key.length" : 651,
          "key.line" : 227,
          "key.name" : "tryAcquire(until:)",
          "key.namecolumn" : 21,
          "key.namelength" : 23,
          "key.nameline" : 227,
          "key.nameoffset" : 11750,
          "key.offset" : 11745,
          "key.overrides" : [
            {
              "key.usr" : "s:7Rubicon11PGSemaphoreP10tryAcquire5untilSb10Foundation4DateV_tF"
            }
          ],
          "key.parsed_declaration" : "public func tryAcquire(until: Date) -> Bool",
          "key.parsed_scope.end" : 239,
          "key.parsed_scope.start" : 227,
          "key.related_decls" : [
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:7Rubicon14NamedSemaphoreC10tryAcquireSbyF\">tryAcquire()<\/RelatedName>"
            }
          ],
          "key.substructure" : [
            {
              "key.column" : 17,
              "key.internal_diagnostic" : "Unable to resolve cursor info.",
              "key.kind" : "source.lang.swift.decl.var.local",
              "key.length" : 43,
              "key.line" : 235,
              "key.name" : "ret",
              "key.namecolumn" : 21,
              "key.namelength" : 3,
              "key.nameline" : 235,
              "key.nameoffset" : 12171,
              "key.offset" : 12167,
              "key.typename" : "Int32"
            }
          ],
          "key.typename" : "(NamedSemaphore) -> (Date) -> Bool",
          "key.typeusr" : "$s5untilSb10Foundation4DateV_tcD",
          "key.usr" : "s:7Rubicon14NamedSemaphoreC10tryAcquire5untilSb10Foundation4DateV_tF"
        }
      ],
      "key.typename" : "NamedSemaphore.Type",
      "key.typeusr" : "$s7Rubicon14NamedSemaphoreCmD",
      "key.usr" : "s:7Rubicon14NamedSemaphoreC"
    }
  ]
}