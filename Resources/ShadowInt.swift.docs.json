{
  "key.column": 1,
  "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
  "key.length": 17350,
  "key.line": 1,
  "key.offset": 0,
  "key.substructure": [
    {
      "key.accessibility": "source.lang.swift.accessibility.public",
      "key.annotated_decl": "<Declaration>@frozen public struct ShadowInt : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type>, <Type usr=\"s:Sz\">BinaryInteger<\/Type>, <Type usr=\"s:Sj\">Numeric<\/Type>, <Type usr=\"s:s18AdditiveArithmeticP\">AdditiveArithmetic<\/Type><\/Declaration>",
      "key.attributes": [
        {
          "key.attribute": "source.decl.attribute.public",
          "key.column": 9,
          "key.length": 6,
          "key.line": 69,
          "key.offset": 3140
        },
        {
          "key.attribute": "source.decl.attribute.frozen",
          "key.column": 1,
          "key.length": 7,
          "key.line": 69,
          "key.offset": 3132
        }
      ],
      "key.bodycolumn": 111,
      "key.bodylength": 14106,
      "key.bodyline": 69,
      "key.bodyoffset": 3242,
      "key.column": 16,
      "key.doc.column": 23,
      "key.doc.comment": "This structure solves a very unique and interesting dilemma. Suppose you have a\n<code>[Dictionary&lt;Key,Value&gt;](https:\/\/developer.apple.com\/documentation\/swift\/dictionary)<\/code> in your\ncode like so:\n\n```\n    var dict: [Int: Any] = [:]\n\n    let someval = dict[3]\n```\n\nIn this case the `Dictionary.Index` is the same type as the generic type `Key`. So there is no way for the\ncompiler to differentiate between the subscript that takes a value of type `Key` and the subscript that takes\na value of type `Dictionary.Index`.\n\nSo, for your key you can simply use this `Int` _holder_. It will even allow comparisons (`==`, `!=`, `<`, `>`,\netc.) and basic arithmetic (`+`, `-`, `*`, `\/`, etc.) between itself and values of type `Int`. The type of the\nresults for arithmetic is always a `ShadowInt`. For example:\n\n```\n    let anInt:   Int       = 7 let aShadow: ShadowInt = `ShadowInt(5)`\n\n    let anotherShadow: ShadowInt = (aShadow + anInt) \/\/ The same as `ShadowInt(aShadow.value + anInt)` let\n    yetAnotherShadow: ShadowInt = (anInt + aShadow) \/\/ The same as `ShadowInt(anInt + aShadow.value)`\n```\n\nHowever, operator+assignment functions (`+=`, `-=`, `*=`, `\/=`, etc.) will behave as one might expect them to.\nSo, for example:\n\n```\n    var anInt:   Int       = 7 var aShadow: ShadowInt = `ShadowInt(5)`\n\n    anInt += aShadow \/\/ the type of anInt is still Int\n\n    aShadow += anInt \/\/ the type of aShadow is still ShadowInt\n```\n\nAnd, as an added bonus, you can even directly assign between an `Int` and a `ShadowInt` using the `<-`\noperator.\n\n```\n    var anInt  : Int       = 0 let aShadow: ShadowInt = `ShadowInt(42)`\n\n    anInt <- aShadow \/\/ anInt is now 42\n```",
      "key.doc.declaration": "@frozen public struct ShadowInt : Comparable, Hashable, Equatable, BinaryInteger, Numeric, AdditiveArithmetic",
      "key.doc.discussion": [
        {
          "CodeListing": ""
        },
        {
          "Para": "In this case the `Dictionary.Index` is the same type as the generic type `Key`. So there is no way for the compiler to differentiate between the subscript that takes a value of type `Key` and the subscript that takes a value of type `Dictionary.Index`."
        },
        {
          "Para": "So, for your key you can simply use this `Int` . It will even allow comparisons (`==`, `!=`, `<`, `>`, etc.) and basic arithmetic (`+`, `-`, `*`, `\/`, etc.) between itself and values of type `Int`. The type of the results for arithmetic is always a `ShadowInt`. For example:"
        },
        {
          "CodeListing": ""
        },
        {
          "Para": "However, operator+assignment functions (`+=`, `-=`, `*=`, `\/=`, etc.) will behave as one might expect them to. So, for example:"
        },
        {
          "CodeListing": ""
        },
        {
          "Para": "And, as an added bonus, you can even directly assign between an `Int` and a `ShadowInt` using the `<-` operator."
        },
        {
          "CodeListing": ""
        }
      ],
      "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
      "key.doc.full_as_xml": "<Class file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift\" line=\"69\" column=\"23\"><Name>ShadowInt<\/Name><USR>s:7Rubicon9ShadowIntV<\/USR><Declaration>@frozen public struct ShadowInt : Comparable, Hashable, Equatable, BinaryInteger, Numeric, AdditiveArithmetic<\/Declaration><CommentParts><Abstract><Para>This structure solves a very unique and interesting dilemma. Suppose you have a <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/developer.apple.com\/documentation\/swift\/dictionary\">Dictionary&lt;Key,Value&gt;<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> in your code like so:<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    var dict: [Int: Any] = [:]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let someval = dict[3]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>In this case the <codeVoice>Dictionary.Index<\/codeVoice> is the same type as the generic type <codeVoice>Key<\/codeVoice>. So there is no way for the compiler to differentiate between the subscript that takes a value of type <codeVoice>Key<\/codeVoice> and the subscript that takes a value of type <codeVoice>Dictionary.Index<\/codeVoice>.<\/Para><Para>So, for your key you can simply use this <codeVoice>Int<\/codeVoice> <emphasis>holder<\/emphasis>. It will even allow comparisons (<codeVoice>==<\/codeVoice>, <codeVoice>!=<\/codeVoice>, <codeVoice>&lt;<\/codeVoice>, <codeVoice>&gt;<\/codeVoice>, etc.) and basic arithmetic (<codeVoice>+<\/codeVoice>, <codeVoice>-<\/codeVoice>, <codeVoice>*<\/codeVoice>, <codeVoice>\/<\/codeVoice>, etc.) between itself and values of type <codeVoice>Int<\/codeVoice>. The type of the results for arithmetic is always a <codeVoice>ShadowInt<\/codeVoice>. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    let anInt:   Int       = 7 let aShadow: ShadowInt = `ShadowInt(5)`]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let anotherShadow: ShadowInt = (aShadow + anInt) \/\/ The same as `ShadowInt(aShadow.value + anInt)` let]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    yetAnotherShadow: ShadowInt = (anInt + aShadow) \/\/ The same as `ShadowInt(anInt + aShadow.value)`]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>However, operator+assignment functions (<codeVoice>+=<\/codeVoice>, <codeVoice>-=<\/codeVoice>, <codeVoice>*=<\/codeVoice>, <codeVoice>\/=<\/codeVoice>, etc.) will behave as one might expect them to. So, for example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    var anInt:   Int       = 7 var aShadow: ShadowInt = `ShadowInt(5)`]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    anInt += aShadow \/\/ the type of anInt is still Int]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    aShadow += anInt \/\/ the type of aShadow is still ShadowInt]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>And, as an added bonus, you can even directly assign between an <codeVoice>Int<\/codeVoice> and a <codeVoice>ShadowInt<\/codeVoice> using the <codeVoice>&lt;-<\/codeVoice> operator.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[    var anInt  : Int       = 0 let aShadow: ShadowInt = `ShadowInt(42)`]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    anInt <- aShadow \/\/ anInt is now 42]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
      "key.doc.line": 69,
      "key.doc.name": "ShadowInt",
      "key.doc.type": "Class",
      "key.doccolumn": 1,
      "key.doclength": 1845,
      "key.docline": 24,
      "key.docoffset": 1287,
      "key.elements": [
        {
          "key.column": 34,
          "key.kind": "source.lang.swift.structure.elem.typeref",
          "key.length": 10,
          "key.line": 69,
          "key.offset": 3165
        },
        {
          "key.column": 46,
          "key.kind": "source.lang.swift.structure.elem.typeref",
          "key.length": 8,
          "key.line": 69,
          "key.offset": 3177
        },
        {
          "key.column": 56,
          "key.kind": "source.lang.swift.structure.elem.typeref",
          "key.length": 9,
          "key.line": 69,
          "key.offset": 3187
        },
        {
          "key.column": 67,
          "key.kind": "source.lang.swift.structure.elem.typeref",
          "key.length": 13,
          "key.line": 69,
          "key.offset": 3198
        },
        {
          "key.column": 82,
          "key.kind": "source.lang.swift.structure.elem.typeref",
          "key.length": 7,
          "key.line": 69,
          "key.offset": 3213
        },
        {
          "key.column": 91,
          "key.kind": "source.lang.swift.structure.elem.typeref",
          "key.length": 18,
          "key.line": 69,
          "key.offset": 3222
        }
      ],
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
      "key.fully_annotated_decl": "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ShadowInt<\/decl.name> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol>, <ref.protocol usr=\"s:Sz\">BinaryInteger<\/ref.protocol>, <ref.protocol usr=\"s:Sj\">Numeric<\/ref.protocol>, <ref.protocol usr=\"s:s18AdditiveArithmeticP\">AdditiveArithmetic<\/ref.protocol><\/decl.struct>",
      "key.inheritedtypes": [
        {
          "key.name": "Comparable"
        },
        {
          "key.name": "Hashable"
        },
        {
          "key.name": "Equatable"
        },
        {
          "key.name": "BinaryInteger"
        },
        {
          "key.name": "Numeric"
        },
        {
          "key.name": "AdditiveArithmetic"
        }
      ],
      "key.kind": "source.lang.swift.decl.struct",
      "key.length": 14202,
      "key.line": 69,
      "key.name": "ShadowInt",
      "key.namecolumn": 23,
      "key.namelength": 9,
      "key.nameline": 69,
      "key.nameoffset": 3154,
      "key.offset": 3147,
      "key.parsed_declaration": "@frozen public struct ShadowInt: Comparable, Hashable, Equatable, BinaryInteger, Numeric, AdditiveArithmetic",
      "key.parsed_scope.end": 257,
      "key.parsed_scope.start": 69,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>.Magnitude = <Type usr=\"s:Si\">Int<\/Type>.<Type usr=\"s:Si9Magnitudea\">Magnitude<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 71,
              "key.offset": 3258
            }
          ],
          "key.column": 12,
          "key.doc.declaration": "associatedtype Magnitude : Comparable, Numeric",
          "key.doc.discussion": [
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Other><Name>Magnitude<\/Name><USR>s:Sj9MagnitudeQa<\/USR><Declaration>associatedtype Magnitude : Comparable, Numeric<\/Declaration><CommentParts><Abstract><Para>A type that can represent the absolute value of any possible value of the conforming type.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Numeric<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
          "key.doc.name": "Magnitude",
          "key.doc.type": "Other",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct>.<decl.name>Magnitude<\/decl.name> = <ref.struct usr=\"s:Si\">Int<\/ref.struct>.<ref.typealias usr=\"s:Si9Magnitudea\">Magnitude<\/ref.typealias><\/decl.typealias>",
          "key.kind": "source.lang.swift.decl.typealias",
          "key.length": 44,
          "key.line": 71,
          "key.name": "Magnitude",
          "key.namecolumn": 22,
          "key.namelength": 9,
          "key.nameline": 71,
          "key.nameoffset": 3275,
          "key.offset": 3265,
          "key.overrides": [
            {
              "key.usr": "s:Sj9MagnitudeQa"
            }
          ],
          "key.parsed_declaration": "public typealias Magnitude          = Int.Magnitude",
          "key.parsed_scope.end": 71,
          "key.parsed_scope.start": 71,
          "key.typename": "UInt.Type",
          "key.typeusr": "$sSumD",
          "key.usr": "s:Sj9MagnitudeQa"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>.Words = <Type usr=\"s:Si\">Int<\/Type>.<Type usr=\"s:Si5WordsV\">Words<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 72,
              "key.offset": 3314
            }
          ],
          "key.column": 12,
          "key.doc.declaration": "associatedtype Words : RandomAccessCollection where Self.Words.Element == UInt, Self.Words.Index == Int",
          "key.doc.discussion": [
            {
              "Para": "The `Words` type must conform to the `RandomAccessCollection` protocol with an `Element` type of `UInt` and `Index` type of `Int`."
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Other><Name>Words<\/Name><USR>s:Sz5WordsQa<\/USR><Declaration>associatedtype Words : RandomAccessCollection where Self.Words.Element == UInt, Self.Words.Index == Int<\/Declaration><CommentParts><Abstract><Para>A type that represents the words of a binary integer.<\/Para><\/Abstract><Discussion><Para>The <codeVoice>Words<\/codeVoice> type must conform to the <codeVoice>RandomAccessCollection<\/codeVoice> protocol with an <codeVoice>Element<\/codeVoice> type of <codeVoice>UInt<\/codeVoice> and <codeVoice>Index<\/codeVoice> type of <codeVoice>Int<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
          "key.doc.name": "Words",
          "key.doc.type": "Other",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct>.<decl.name>Words<\/decl.name> = <ref.struct usr=\"s:Si\">Int<\/ref.struct>.<ref.struct usr=\"s:Si5WordsV\">Words<\/ref.struct><\/decl.typealias>",
          "key.kind": "source.lang.swift.decl.typealias",
          "key.length": 40,
          "key.line": 72,
          "key.name": "Words",
          "key.namecolumn": 22,
          "key.namelength": 5,
          "key.nameline": 72,
          "key.nameoffset": 3331,
          "key.offset": 3321,
          "key.overrides": [
            {
              "key.usr": "s:Sz5WordsQa"
            }
          ],
          "key.parsed_declaration": "public typealias Words              = Int.Words",
          "key.parsed_scope.end": 72,
          "key.parsed_scope.start": 72,
          "key.typename": "Int.Words.Type",
          "key.typeusr": "$sSi5WordsVmD",
          "key.usr": "s:Sz5WordsQa"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>.IntegerLiteralType = <Type usr=\"s:Si\">Int<\/Type>.<Type usr=\"s:Si18IntegerLiteralTypea\">IntegerLiteralType<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 73,
              "key.offset": 3366
            }
          ],
          "key.column": 12,
          "key.doc.declaration": "associatedtype IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral",
          "key.doc.discussion": [
            {
              "Para": "The standard library integer and floating-point types are all valid types for `IntegerLiteralType`."
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Other><Name>IntegerLiteralType<\/Name><USR>s:s27ExpressibleByIntegerLiteralP0cD4TypeQa<\/USR><Declaration>associatedtype IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral<\/Declaration><CommentParts><Abstract><Para>A type that represents an integer literal.<\/Para><\/Abstract><Discussion><Para>The standard library integer and floating-point types are all valid types for <codeVoice>IntegerLiteralType<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>ExpressibleByIntegerLiteral<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
          "key.doc.name": "IntegerLiteralType",
          "key.doc.type": "Other",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct>.<decl.name>IntegerLiteralType<\/decl.name> = <ref.struct usr=\"s:Si\">Int<\/ref.struct>.<ref.typealias usr=\"s:Si18IntegerLiteralTypea\">IntegerLiteralType<\/ref.typealias><\/decl.typealias>",
          "key.kind": "source.lang.swift.decl.typealias",
          "key.length": 53,
          "key.line": 73,
          "key.name": "IntegerLiteralType",
          "key.namecolumn": 22,
          "key.namelength": 18,
          "key.nameline": 73,
          "key.nameoffset": 3383,
          "key.offset": 3373,
          "key.overrides": [
            {
              "key.usr": "s:s27ExpressibleByIntegerLiteralP0cD4TypeQa"
            }
          ],
          "key.parsed_declaration": "public typealias IntegerLiteralType = Int.IntegerLiteralType",
          "key.parsed_scope.end": 73,
          "key.parsed_scope.start": 73,
          "key.typename": "Int.Type",
          "key.typeusr": "$sSimD",
          "key.usr": "s:s27ExpressibleByIntegerLiteralP0cD4TypeQa"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public static let zero: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 75,
              "key.offset": 3432
            }
          ],
          "key.column": 12,
          "key.doc.declaration": "static var zero: Self { get }",
          "key.doc.discussion": [
            {
              "Para": "Zero is the identity element for addition. For any value, `x + .zero == x` and `.zero + x == x`."
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Other><Name>zero<\/Name><USR>s:s18AdditiveArithmeticP4zeroxvpZ<\/USR><Declaration>static var zero: Self { get }<\/Declaration><CommentParts><Abstract><Para>The zero value.<\/Para><\/Abstract><Discussion><Para>Zero is the identity element for addition. For any value, <codeVoice>x + .zero == x<\/codeVoice> and <codeVoice>.zero + x == x<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>AdditiveArithmetic<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
          "key.doc.name": "zero",
          "key.doc.type": "Other",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>zero<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.type><\/decl.var.static>",
          "key.kind": "source.lang.swift.decl.var.static",
          "key.length": 45,
          "key.line": 75,
          "key.name": "zero",
          "key.namecolumn": 23,
          "key.namelength": 4,
          "key.nameline": 75,
          "key.nameoffset": 3450,
          "key.offset": 3439,
          "key.overrides": [
            {
              "key.usr": "s:s18AdditiveArithmeticP4zeroxvpZ"
            }
          ],
          "key.parsed_declaration": "public static let zero:     ShadowInt = ShadowInt(0)",
          "key.parsed_scope.end": 75,
          "key.parsed_scope.start": 75,
          "key.typename": "ShadowInt",
          "key.typeusr": "$s7Rubicon9ShadowIntVD",
          "key.usr": "s:s18AdditiveArithmeticP4zeroxvpZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public static let isSigned: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 76,
              "key.offset": 3489
            }
          ],
          "key.column": 12,
          "key.doc.declaration": "static var isSigned: Bool { get }",
          "key.doc.discussion": [
            {
              "Para": " integer types can represent both positive and negative values.  integer types can represent only nonnegative values."
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Other><Name>isSigned<\/Name><USR>s:Sz8isSignedSbvpZ<\/USR><Declaration>static var isSigned: Bool { get }<\/Declaration><CommentParts><Abstract><Para>A Boolean value indicating whether this type is a signed integer type.<\/Para><\/Abstract><Discussion><Para><emphasis>Signed<\/emphasis> integer types can represent both positive and negative values. <emphasis>Unsigned<\/emphasis> integer types can represent only nonnegative values.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
          "key.doc.name": "isSigned",
          "key.doc.type": "Other",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>isSigned<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.static>",
          "key.kind": "source.lang.swift.decl.var.static",
          "key.length": 45,
          "key.line": 76,
          "key.name": "isSigned",
          "key.namecolumn": 23,
          "key.namelength": 8,
          "key.nameline": 76,
          "key.nameoffset": 3507,
          "key.offset": 3496,
          "key.overrides": [
            {
              "key.usr": "s:Sz8isSignedSbvpZ"
            }
          ],
          "key.parsed_declaration": "public static let isSigned: Bool      = Int.isSigned",
          "key.parsed_scope.end": 76,
          "key.parsed_scope.start": 76,
          "key.typename": "Bool",
          "key.typeusr": "$sSbD",
          "key.usr": "s:Sz8isSignedSbvpZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var magnitude: <Type usr=\"s:7Rubicon9ShadowIntV9Magnitudea\">Magnitude<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 78,
              "key.offset": 3558
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 78,
              "key.offset": 3547
            }
          ],
          "key.bodycolumn": 60,
          "key.bodylength": 28,
          "key.bodyline": 78,
          "key.bodyoffset": 3602,
          "key.column": 23,
          "key.doc.declaration": "var magnitude: Self.Magnitude { get }",
          "key.doc.discussion": [
            {
              "Para": "For any numeric value `x`, `x.magnitude` is the absolute value of `x`. You can use the `magnitude` property in operations that are simpler to implement in terms of unsigned values, such as printing the value of an integer, which is just printing a ‘-’ character in front of an absolute value."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The global `abs(_:)` function provides more familiar syntax when you need to find an absolute value. In addition, because `abs(_:)` always returns a value of the same type, even in a generic context, using the function instead of the `magnitude` property is encouraged."
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Other><Name>magnitude<\/Name><USR>s:Sj9magnitude9MagnitudeQzvp<\/USR><Declaration>var magnitude: Self.Magnitude { get }<\/Declaration><CommentParts><Abstract><Para>The magnitude of this value.<\/Para><\/Abstract><Discussion><Para>For any numeric value <codeVoice>x<\/codeVoice>, <codeVoice>x.magnitude<\/codeVoice> is the absolute value of <codeVoice>x<\/codeVoice>. You can use the <codeVoice>magnitude<\/codeVoice> property in operations that are simpler to implement in terms of unsigned values, such as printing the value of an integer, which is just printing a ‘-’ character in front of an absolute value.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x = -200]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x.magnitude == 200]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The global <codeVoice>abs(_:)<\/codeVoice> function provides more familiar syntax when you need to find an absolute value. In addition, because <codeVoice>abs(_:)<\/codeVoice> always returns a value of the same type, even in a generic context, using the function instead of the <codeVoice>magnitude<\/codeVoice> property is encouraged.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Numeric<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
          "key.doc.name": "magnitude",
          "key.doc.type": "Other",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>magnitude<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:7Rubicon9ShadowIntV9Magnitudea\">Magnitude<\/ref.typealias><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 66,
          "key.line": 78,
          "key.name": "magnitude",
          "key.namecolumn": 27,
          "key.namelength": 9,
          "key.nameline": 78,
          "key.nameoffset": 3569,
          "key.offset": 3565,
          "key.overrides": [
            {
              "key.usr": "s:Sj9magnitude9MagnitudeQzvp"
            }
          ],
          "key.parsed_declaration": "@inlinable public var magnitude:            Magnitude",
          "key.parsed_scope.end": 78,
          "key.parsed_scope.start": 78,
          "key.typename": "UInt",
          "key.typeusr": "$sSuD",
          "key.usr": "s:Sj9magnitude9MagnitudeQzvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var words: <Type usr=\"s:7Rubicon9ShadowIntV5Wordsa\">Words<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 79,
              "key.offset": 3647
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 79,
              "key.offset": 3636
            }
          ],
          "key.bodycolumn": 60,
          "key.bodylength": 28,
          "key.bodyline": 79,
          "key.bodyoffset": 3691,
          "key.column": 23,
          "key.doc.declaration": "var words: Self.Words { get }",
          "key.doc.discussion": [
            {
              "Para": "Negative values are returned in two’s complement representation, regardless of the type’s underlying implementation."
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Other><Name>words<\/Name><USR>s:Sz5words5WordsQzvp<\/USR><Declaration>var words: Self.Words { get }<\/Declaration><CommentParts><Abstract><Para>A collection containing the words of this value’s binary representation, in order from the least significant to most significant.<\/Para><\/Abstract><Discussion><Para>Negative values are returned in two’s complement representation, regardless of the type’s underlying implementation.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
          "key.doc.name": "words",
          "key.doc.type": "Other",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>words<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:7Rubicon9ShadowIntV5Wordsa\">Words<\/ref.typealias><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 66,
          "key.line": 79,
          "key.name": "words",
          "key.namecolumn": 27,
          "key.namelength": 5,
          "key.nameline": 79,
          "key.nameoffset": 3658,
          "key.offset": 3654,
          "key.overrides": [
            {
              "key.usr": "s:Sz5words5WordsQzvp"
            }
          ],
          "key.parsed_declaration": "@inlinable public var words:                Words",
          "key.parsed_scope.end": 79,
          "key.parsed_scope.start": 79,
          "key.typename": "Int.Words",
          "key.typeusr": "$sSi5WordsVD",
          "key.usr": "s:Sz5words5WordsQzvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var bitWidth: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 80,
              "key.offset": 3736
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 80,
              "key.offset": 3725
            }
          ],
          "key.bodycolumn": 60,
          "key.bodylength": 28,
          "key.bodyline": 80,
          "key.bodyoffset": 3780,
          "key.column": 23,
          "key.doc.declaration": "var bitWidth: Int { get }",
          "key.doc.discussion": [
            {
              "Para": "This property is a constant for instances of fixed-width integer types."
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Other><Name>bitWidth<\/Name><USR>s:Sz8bitWidthSivp<\/USR><Declaration>var bitWidth: Int { get }<\/Declaration><CommentParts><Abstract><Para>The number of bits in the current binary representation of this value.<\/Para><\/Abstract><Discussion><Para>This property is a constant for instances of fixed-width integer types.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
          "key.doc.name": "bitWidth",
          "key.doc.type": "Other",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>bitWidth<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 66,
          "key.line": 80,
          "key.name": "bitWidth",
          "key.namecolumn": 27,
          "key.namelength": 8,
          "key.nameline": 80,
          "key.nameoffset": 3747,
          "key.offset": 3743,
          "key.overrides": [
            {
              "key.usr": "s:Sz8bitWidthSivp"
            }
          ],
          "key.parsed_declaration": "@inlinable public var bitWidth:             Int",
          "key.parsed_scope.end": 80,
          "key.parsed_scope.start": 80,
          "key.typename": "Int",
          "key.typeusr": "$sSiD",
          "key.usr": "s:Sz8bitWidthSivp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var trailingZeroBitCount: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 81,
              "key.offset": 3825
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 81,
              "key.offset": 3814
            }
          ],
          "key.bodycolumn": 60,
          "key.bodylength": 28,
          "key.bodyline": 81,
          "key.bodyoffset": 3869,
          "key.column": 23,
          "key.doc.declaration": "var trailingZeroBitCount: Int { get }",
          "key.doc.discussion": [
            {
              "Para": "For example, in a fixed-width integer type with a `bitWidth` value of 8, the number -8 has three trailing zeros."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If the value is zero, then `trailingZeroBitCount` is equal to `bitWidth`."
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Other><Name>trailingZeroBitCount<\/Name><USR>s:Sz20trailingZeroBitCountSivp<\/USR><Declaration>var trailingZeroBitCount: Int { get }<\/Declaration><CommentParts><Abstract><Para>The number of trailing zeros in this value’s binary representation.<\/Para><\/Abstract><Discussion><Para>For example, in a fixed-width integer type with a <codeVoice>bitWidth<\/codeVoice> value of 8, the number -8 has three trailing zeros.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x = Int8(bitPattern: 0b1111_1000)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x == -8]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x.trailingZeroBitCount == 3]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If the value is zero, then <codeVoice>trailingZeroBitCount<\/codeVoice> is equal to <codeVoice>bitWidth<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
          "key.doc.name": "trailingZeroBitCount",
          "key.doc.type": "Other",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>trailingZeroBitCount<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 66,
          "key.line": 81,
          "key.name": "trailingZeroBitCount",
          "key.namecolumn": 27,
          "key.namelength": 20,
          "key.nameline": 81,
          "key.nameoffset": 3836,
          "key.offset": 3832,
          "key.overrides": [
            {
              "key.usr": "s:Sz20trailingZeroBitCountSivp"
            }
          ],
          "key.parsed_declaration": "@inlinable public var trailingZeroBitCount: Int",
          "key.parsed_scope.end": 81,
          "key.parsed_scope.start": 81,
          "key.typename": "Int",
          "key.typeusr": "$sSiD",
          "key.usr": "s:Sz20trailingZeroBitCountSivp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var hashValue: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 82,
              "key.offset": 3914
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 82,
              "key.offset": 3903
            }
          ],
          "key.bodycolumn": 60,
          "key.bodylength": 28,
          "key.bodyline": 82,
          "key.bodyoffset": 3958,
          "key.column": 23,
          "key.doc.declaration": "var hashValue: Int { get }",
          "key.doc.discussion": [
            {
              "Para": "Hash values are not guaranteed to be equal across different executions of your program. Do not save hash values to use during a future execution."
            },
            {
              "Important": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Other><Name>hashValue<\/Name><USR>s:SH9hashValueSivp<\/USR><Declaration>var hashValue: Int { get }<\/Declaration><CommentParts><Abstract><Para>The hash value.<\/Para><\/Abstract><Discussion><Para>Hash values are not guaranteed to be equal across different executions of your program. Do not save hash values to use during a future execution.<\/Para><Important><Para><codeVoice>hashValue<\/codeVoice> is deprecated as a <codeVoice>Hashable<\/codeVoice> requirement. To conform to <codeVoice>Hashable<\/codeVoice>, implement the <codeVoice>hash(into:)<\/codeVoice> requirement instead.<\/Para><\/Important><Note><Para>This documentation comment was inherited from <codeVoice>Hashable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
          "key.doc.name": "hashValue",
          "key.doc.type": "Other",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>hashValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 66,
          "key.line": 82,
          "key.name": "hashValue",
          "key.namecolumn": 27,
          "key.namelength": 9,
          "key.nameline": 82,
          "key.nameoffset": 3925,
          "key.offset": 3921,
          "key.overrides": [
            {
              "key.usr": "s:SH9hashValueSivp"
            }
          ],
          "key.parsed_declaration": "@inlinable public var hashValue:            Int",
          "key.parsed_scope.end": 82,
          "key.parsed_scope.start": 82,
          "key.typename": "Int",
          "key.typeusr": "$sSiD",
          "key.usr": "s:SH9hashValueSivp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public let value: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 84,
              "key.offset": 3993
            }
          ],
          "key.column": 12,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 14,
          "key.line": 84,
          "key.name": "value",
          "key.namecolumn": 16,
          "key.namelength": 5,
          "key.nameline": 84,
          "key.nameoffset": 4004,
          "key.offset": 4000,
          "key.parsed_declaration": "public let value: Int",
          "key.parsed_scope.end": 84,
          "key.parsed_scope.start": 84,
          "key.typename": "Int",
          "key.typeusr": "$sSiD",
          "key.usr": "s:7Rubicon9ShadowIntV5valueSivp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public init(_ nodeIndex: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 86,
              "key.offset": 4031
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 86,
              "key.offset": 4020
            }
          ],
          "key.bodycolumn": 85,
          "key.bodylength": 70,
          "key.bodyline": 86,
          "key.bodyoffset": 4100,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>nodeIndex<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 133,
          "key.line": 86,
          "key.name": "init(_:)",
          "key.namecolumn": 23,
          "key.namelength": 22,
          "key.nameline": 86,
          "key.nameoffset": 4038,
          "key.offset": 4038,
          "key.parsed_declaration": "@inlinable public init(_ nodeIndex: Int)",
          "key.parsed_scope.end": 86,
          "key.parsed_scope.start": 86,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACxcSBRzlufc\">init&lt;T&gt;(_: T) where T : BinaryFloatingPoint<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACxcSzRzlufc\">init&lt;T&gt;(_: T) where T : BinaryInteger<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV18truncatingIfNeededACx_tcSzRzlufc\">init(truncatingIfNeeded:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV8clampingACx_tcSzRzlufc\">init(clamping:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSBRzlufc\">init?&lt;T&gt;(exactly: T) where T : BinaryFloatingPoint<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSzRzlufc\">init?&lt;T&gt;(exactly: T) where T : BinaryInteger<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVSicD",
          "key.usr": "s:7Rubicon9ShadowIntVyACSicfc"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public init&lt;T&gt;(_ source: <Type usr=\"s:7Rubicon9ShadowIntVyACxcSBRzlufc1TL_xmfp\">T<\/Type>) where <Type usr=\"s:7Rubicon9ShadowIntVyACxcSBRzlufc1TL_xmfp\">T<\/Type> : <Type usr=\"s:SB\">BinaryFloatingPoint<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 88,
              "key.offset": 4188
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 88,
              "key.offset": 4177
            }
          ],
          "key.bodycolumn": 85,
          "key.bodylength": 70,
          "key.bodyline": 88,
          "key.bodyoffset": 4257,
          "key.column": 23,
          "key.doc.declaration": "init<T>(_ source: T) where T : BinaryFloatingPoint",
          "key.doc.discussion": [
            {
              "Para": "Any fractional part of the value passed as `source` is removed, rounding the value toward zero."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If `source` is outside the bounds of this type after rounding toward zero, a runtime error may occur."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>init(_:)<\/Name><USR>s:Szyxqd__cSBRd__lufc<\/USR><Declaration>init&lt;T&gt;(_ source: T) where T : BinaryFloatingPoint<\/Declaration><CommentParts><Abstract><Para>Creates an integer from the given floating-point value, rounding toward zero.<\/Para><\/Abstract><Parameters><Parameter><Name>source<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A floating-point value to convert to an integer. <codeVoice>source<\/codeVoice> must be representable in this type after rounding toward zero.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Any fractional part of the value passed as <codeVoice>source<\/codeVoice> is removed, rounding the value toward zero.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x = Int(21.5)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x == 21]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y = Int(-21.5)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ y == -21]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If <codeVoice>source<\/codeVoice> is outside the bounds of this type after rounding toward zero, a runtime error may occur.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let z = UInt(-21.5)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Error: ...the result would be less than UInt.min]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "init(_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "A floating-point value to convert to an integer. `source` must be representable in this type after rounding toward zero."
                }
              ],
              "name": "source"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:7Rubicon9ShadowIntVyACxcSBRzlufc1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>source<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntVyACxcSBRzlufc1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntVyACxcSBRzlufc1TL_xmfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:SB\">BinaryFloatingPoint<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 133,
          "key.line": 88,
          "key.name": "init(_:)",
          "key.namecolumn": 23,
          "key.namelength": 20,
          "key.nameline": 88,
          "key.nameoffset": 4195,
          "key.offset": 4195,
          "key.overrides": [
            {
              "key.usr": "s:Szyxqd__cSBRd__lufc"
            }
          ],
          "key.parsed_declaration": "@inlinable public init<T>(_ source: T) where T: BinaryFloatingPoint",
          "key.parsed_scope.end": 88,
          "key.parsed_scope.start": 88,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACSicfc\">init(_: Int)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACxcSzRzlufc\">init&lt;T&gt;(_: T) where T : BinaryInteger<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV18truncatingIfNeededACx_tcSzRzlufc\">init(truncatingIfNeeded:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV8clampingACx_tcSzRzlufc\">init(clamping:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSBRzlufc\">init?&lt;T&gt;(exactly: T) where T : BinaryFloatingPoint<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSzRzlufc\">init?&lt;T&gt;(exactly: T) where T : BinaryInteger<\/RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T<\/Declaration>",
              "key.column": 28,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 1,
              "key.line": 88,
              "key.name": "T",
              "key.namecolumn": 28,
              "key.namelength": 1,
              "key.nameline": 88,
              "key.nameoffset": 4200,
              "key.offset": 4200,
              "key.parsed_declaration": "@inlinable public init<T",
              "key.parsed_scope.end": 88,
              "key.parsed_scope.start": 88,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:7Rubicon9ShadowIntVyACxcSBRzlufc1TL_xmfp"
            }
          ],
          "key.typename": "<T where T : BinaryFloatingPoint> (ShadowInt.Type) -> (T) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVxcSBRzluD",
          "key.usr": "s:Szyxqd__cSBRd__lufc"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public init&lt;T&gt;(_ source: <Type usr=\"s:7Rubicon9ShadowIntVyACxcSzRzlufc1TL_xmfp\">T<\/Type>) where <Type usr=\"s:7Rubicon9ShadowIntVyACxcSzRzlufc1TL_xmfp\">T<\/Type> : <Type usr=\"s:Sz\">BinaryInteger<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 90,
              "key.offset": 4345
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 90,
              "key.offset": 4334
            }
          ],
          "key.bodycolumn": 85,
          "key.bodylength": 70,
          "key.bodyline": 90,
          "key.bodyoffset": 4414,
          "key.column": 23,
          "key.doc.declaration": "init<T>(_ source: T) where T : BinaryInteger",
          "key.doc.discussion": [
            {
              "Para": "If the value passed as `source` is not representable in this type, a runtime error may occur."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>init(_:)<\/Name><USR>s:Szyxqd__cSzRd__lufc<\/USR><Declaration>init&lt;T&gt;(_ source: T) where T : BinaryInteger<\/Declaration><CommentParts><Abstract><Para>Creates a new instance from the given integer.<\/Para><\/Abstract><Parameters><Parameter><Name>source<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An integer to convert. <codeVoice>source<\/codeVoice> must be representable in this type.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>If the value passed as <codeVoice>source<\/codeVoice> is not representable in this type, a runtime error may occur.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x = -500 as Int]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y = Int32(x)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ y == -500]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ -500 is not representable as a 'UInt32' instance]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let z = UInt32(x)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Error]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "init(_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "An integer to convert. `source` must be representable in this type."
                }
              ],
              "name": "source"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:7Rubicon9ShadowIntVyACxcSzRzlufc1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>source<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntVyACxcSzRzlufc1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntVyACxcSzRzlufc1TL_xmfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Sz\">BinaryInteger<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 133,
          "key.line": 90,
          "key.name": "init(_:)",
          "key.namecolumn": 23,
          "key.namelength": 20,
          "key.nameline": 90,
          "key.nameoffset": 4352,
          "key.offset": 4352,
          "key.overrides": [
            {
              "key.usr": "s:Szyxqd__cSzRd__lufc"
            }
          ],
          "key.parsed_declaration": "@inlinable public init<T>(_ source: T) where T: BinaryInteger",
          "key.parsed_scope.end": 90,
          "key.parsed_scope.start": 90,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACSicfc\">init(_: Int)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACxcSBRzlufc\">init&lt;T&gt;(_: T) where T : BinaryFloatingPoint<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV18truncatingIfNeededACx_tcSzRzlufc\">init(truncatingIfNeeded:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV8clampingACx_tcSzRzlufc\">init(clamping:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSBRzlufc\">init?&lt;T&gt;(exactly: T) where T : BinaryFloatingPoint<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSzRzlufc\">init?&lt;T&gt;(exactly: T) where T : BinaryInteger<\/RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T<\/Declaration>",
              "key.column": 28,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 1,
              "key.line": 90,
              "key.name": "T",
              "key.namecolumn": 28,
              "key.namelength": 1,
              "key.nameline": 90,
              "key.nameoffset": 4357,
              "key.offset": 4357,
              "key.parsed_declaration": "@inlinable public init<T",
              "key.parsed_scope.end": 90,
              "key.parsed_scope.start": 90,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:7Rubicon9ShadowIntVyACxcSzRzlufc1TL_xmfp"
            }
          ],
          "key.typename": "<T where T : BinaryInteger> (ShadowInt.Type) -> (T) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVxcSzRzluD",
          "key.usr": "s:Szyxqd__cSzRd__lufc"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public init&lt;T&gt;(truncatingIfNeeded source: <Type usr=\"s:7Rubicon9ShadowIntV18truncatingIfNeededACx_tcSzRzlufc1TL_xmfp\">T<\/Type>) where <Type usr=\"s:7Rubicon9ShadowIntV18truncatingIfNeededACx_tcSzRzlufc1TL_xmfp\">T<\/Type> : <Type usr=\"s:Sz\">BinaryInteger<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 92,
              "key.offset": 4502
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 92,
              "key.offset": 4491
            }
          ],
          "key.bodycolumn": 85,
          "key.bodylength": 70,
          "key.bodyline": 92,
          "key.bodyoffset": 4571,
          "key.column": 23,
          "key.doc.declaration": "init<T>(truncatingIfNeeded source: T) where T : BinaryInteger",
          "key.doc.discussion": [
            {
              "Para": "When the bit width of `T` (the type of `source`) is equal to or greater than this type’s bit width, the result is the truncated least-significant bits of `source`. For example, when converting a 16-bit value to an 8-bit type, only the lower 8 bits of `source` are used."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "When the bit width of `T` is less than this type’s bit width, the result is  to fill the remaining bits. That is, if `source` is negative, the result is padded with ones; otherwise, the result is padded with zeros."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>init(truncatingIfNeeded:)<\/Name><USR>s:Sz18truncatingIfNeededxqd___tcSzRd__lufc<\/USR><Declaration>init&lt;T&gt;(truncatingIfNeeded source: T) where T : BinaryInteger<\/Declaration><CommentParts><Abstract><Para>Creates a new instance from the bit pattern of the given instance by sign-extending or truncating to fit this type.<\/Para><\/Abstract><Parameters><Parameter><Name>source<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An integer to convert to this type.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>When the bit width of <codeVoice>T<\/codeVoice> (the type of <codeVoice>source<\/codeVoice>) is equal to or greater than this type’s bit width, the result is the truncated least-significant bits of <codeVoice>source<\/codeVoice>. For example, when converting a 16-bit value to an 8-bit type, only the lower 8 bits of <codeVoice>source<\/codeVoice> are used.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let p: Int16 = -500]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'p' has a binary representation of 11111110_00001100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let q = Int8(truncatingIfNeeded: p)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ q == 12]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'q' has a binary representation of 00001100]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>When the bit width of <codeVoice>T<\/codeVoice> is less than this type’s bit width, the result is <emphasis>sign-extended<\/emphasis> to fill the remaining bits. That is, if <codeVoice>source<\/codeVoice> is negative, the result is padded with ones; otherwise, the result is padded with zeros.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let u: Int8 = 21]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'u' has a binary representation of 00010101]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let v = Int16(truncatingIfNeeded: u)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ v == 21]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'v' has a binary representation of 00000000_00010101]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let w: Int8 = -21]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'w' has a binary representation of 11101011]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let x = Int16(truncatingIfNeeded: w)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x == -21]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'x' has a binary representation of 11111111_11101011]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y = UInt16(truncatingIfNeeded: w)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ y == 65515]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'y' has a binary representation of 11111111_11101011]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "init(truncatingIfNeeded:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "An integer to convert to this type."
                }
              ],
              "name": "source"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:7Rubicon9ShadowIntV18truncatingIfNeededACx_tcSzRzlufc1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>truncatingIfNeeded<\/decl.var.parameter.argument_label> <decl.var.parameter.name>source<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV18truncatingIfNeededACx_tcSzRzlufc1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV18truncatingIfNeededACx_tcSzRzlufc1TL_xmfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Sz\">BinaryInteger<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 133,
          "key.line": 92,
          "key.name": "init(truncatingIfNeeded:)",
          "key.namecolumn": 23,
          "key.namelength": 37,
          "key.nameline": 92,
          "key.nameoffset": 4509,
          "key.offset": 4509,
          "key.overrides": [
            {
              "key.usr": "s:Sz18truncatingIfNeededxqd___tcSzRd__lufc"
            }
          ],
          "key.parsed_declaration": "@inlinable public init<T>(truncatingIfNeeded source: T) where T: BinaryInteger",
          "key.parsed_scope.end": 92,
          "key.parsed_scope.start": 92,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACSicfc\">init(_: Int)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACxcSBRzlufc\">init&lt;T&gt;(_: T) where T : BinaryFloatingPoint<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACxcSzRzlufc\">init&lt;T&gt;(_: T) where T : BinaryInteger<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV8clampingACx_tcSzRzlufc\">init(clamping:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSBRzlufc\">init?&lt;T&gt;(exactly: T) where T : BinaryFloatingPoint<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSzRzlufc\">init?&lt;T&gt;(exactly: T) where T : BinaryInteger<\/RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T<\/Declaration>",
              "key.column": 28,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 1,
              "key.line": 92,
              "key.name": "T",
              "key.namecolumn": 28,
              "key.namelength": 1,
              "key.nameline": 92,
              "key.nameoffset": 4514,
              "key.offset": 4514,
              "key.parsed_declaration": "@inlinable public init<T",
              "key.parsed_scope.end": 92,
              "key.parsed_scope.start": 92,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:7Rubicon9ShadowIntV18truncatingIfNeededACx_tcSzRzlufc1TL_xmfp"
            }
          ],
          "key.typename": "<T where T : BinaryInteger> (ShadowInt.Type) -> (T) -> ShadowInt",
          "key.typeusr": "$s18truncatingIfNeeded7Rubicon9ShadowIntVx_tcSzRzluD",
          "key.usr": "s:Sz18truncatingIfNeededxqd___tcSzRd__lufc"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public init&lt;T&gt;(clamping source: <Type usr=\"s:7Rubicon9ShadowIntV8clampingACx_tcSzRzlufc1TL_xmfp\">T<\/Type>) where <Type usr=\"s:7Rubicon9ShadowIntV8clampingACx_tcSzRzlufc1TL_xmfp\">T<\/Type> : <Type usr=\"s:Sz\">BinaryInteger<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 94,
              "key.offset": 4659
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 94,
              "key.offset": 4648
            }
          ],
          "key.bodycolumn": 85,
          "key.bodylength": 70,
          "key.bodyline": 94,
          "key.bodyoffset": 4728,
          "key.column": 23,
          "key.doc.declaration": "init<T>(clamping source: T) where T : BinaryInteger",
          "key.doc.discussion": [
            {
              "Para": "If the value passed as `source` is greater than the maximum representable value in this type, the result is the type’s `max` value. If `source` is less than the smallest representable value in this type, the result is the type’s `min` value."
            },
            {
              "Para": "In this example, `x` is initialized as an `Int8` instance by clamping `500` to the range `-128...127`, and `y` is initialized as a `UInt` instance by clamping `-500` to the range `0...UInt.max`."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>init(clamping:)<\/Name><USR>s:Sz8clampingxqd___tcSzRd__lufc<\/USR><Declaration>init&lt;T&gt;(clamping source: T) where T : BinaryInteger<\/Declaration><CommentParts><Abstract><Para>Creates a new instance with the representable value that’s closest to the given integer.<\/Para><\/Abstract><Parameters><Parameter><Name>source<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An integer to convert to this type.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>If the value passed as <codeVoice>source<\/codeVoice> is greater than the maximum representable value in this type, the result is the type’s <codeVoice>max<\/codeVoice> value. If <codeVoice>source<\/codeVoice> is less than the smallest representable value in this type, the result is the type’s <codeVoice>min<\/codeVoice> value.<\/Para><Para>In this example, <codeVoice>x<\/codeVoice> is initialized as an <codeVoice>Int8<\/codeVoice> instance by clamping <codeVoice>500<\/codeVoice> to the range <codeVoice>-128...127<\/codeVoice>, and <codeVoice>y<\/codeVoice> is initialized as a <codeVoice>UInt<\/codeVoice> instance by clamping <codeVoice>-500<\/codeVoice> to the range <codeVoice>0...UInt.max<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x = Int8(clamping: 500)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x == 127]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x == Int8.max]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y = UInt(clamping: -500)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ y == 0]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "init(clamping:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "An integer to convert to this type."
                }
              ],
              "name": "source"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:7Rubicon9ShadowIntV8clampingACx_tcSzRzlufc1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>clamping<\/decl.var.parameter.argument_label> <decl.var.parameter.name>source<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV8clampingACx_tcSzRzlufc1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV8clampingACx_tcSzRzlufc1TL_xmfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Sz\">BinaryInteger<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 133,
          "key.line": 94,
          "key.name": "init(clamping:)",
          "key.namecolumn": 23,
          "key.namelength": 27,
          "key.nameline": 94,
          "key.nameoffset": 4666,
          "key.offset": 4666,
          "key.overrides": [
            {
              "key.usr": "s:Sz8clampingxqd___tcSzRd__lufc"
            }
          ],
          "key.parsed_declaration": "@inlinable public init<T>(clamping source: T) where T: BinaryInteger",
          "key.parsed_scope.end": 94,
          "key.parsed_scope.start": 94,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACSicfc\">init(_: Int)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACxcSBRzlufc\">init&lt;T&gt;(_: T) where T : BinaryFloatingPoint<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACxcSzRzlufc\">init&lt;T&gt;(_: T) where T : BinaryInteger<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV18truncatingIfNeededACx_tcSzRzlufc\">init(truncatingIfNeeded:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSBRzlufc\">init?&lt;T&gt;(exactly: T) where T : BinaryFloatingPoint<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSzRzlufc\">init?&lt;T&gt;(exactly: T) where T : BinaryInteger<\/RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T<\/Declaration>",
              "key.column": 28,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 1,
              "key.line": 94,
              "key.name": "T",
              "key.namecolumn": 28,
              "key.namelength": 1,
              "key.nameline": 94,
              "key.nameoffset": 4671,
              "key.offset": 4671,
              "key.parsed_declaration": "@inlinable public init<T",
              "key.parsed_scope.end": 94,
              "key.parsed_scope.start": 94,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:7Rubicon9ShadowIntV8clampingACx_tcSzRzlufc1TL_xmfp"
            }
          ],
          "key.typename": "<T where T : BinaryInteger> (ShadowInt.Type) -> (T) -> ShadowInt",
          "key.typeusr": "$s8clamping7Rubicon9ShadowIntVx_tcSzRzluD",
          "key.usr": "s:Sz8clampingxqd___tcSzRd__lufc"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public init(integerLiteral value: <Type usr=\"s:7Rubicon9ShadowIntV18IntegerLiteralTypea\">IntegerLiteralType<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 96,
              "key.offset": 4816
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 96,
              "key.offset": 4805
            }
          ],
          "key.bodycolumn": 85,
          "key.bodylength": 70,
          "key.bodyline": 96,
          "key.bodyoffset": 4885,
          "key.column": 23,
          "key.doc.declaration": "init(integerLiteral value: Self.IntegerLiteralType)",
          "key.doc.discussion": [
            {
              "Para": "Do not call this initializer directly. Instead, initialize a variable or constant using an integer literal. For example:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "In this example, the assignment to the `x` constant calls this integer literal initializer behind the scenes."
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>init(integerLiteral:)<\/Name><USR>s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc<\/USR><Declaration>init(integerLiteral value: Self.IntegerLiteralType)<\/Declaration><CommentParts><Abstract><Para>Creates an instance initialized to the specified integer value.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to create.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Do not call this initializer directly. Instead, initialize a variable or constant using an integer literal. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x = 23]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>In this example, the assignment to the <codeVoice>x<\/codeVoice> constant calls this integer literal initializer behind the scenes.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>ExpressibleByIntegerLiteral<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "init(integerLiteral:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The value to create."
                }
              ],
              "name": "value"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>integerLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Rubicon9ShadowIntV18IntegerLiteralTypea\">IntegerLiteralType<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 133,
          "key.line": 96,
          "key.name": "init(integerLiteral:)",
          "key.namecolumn": 23,
          "key.namelength": 46,
          "key.nameline": 96,
          "key.nameoffset": 4823,
          "key.offset": 4823,
          "key.overrides": [
            {
              "key.usr": "s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc"
            }
          ],
          "key.parsed_declaration": "@inlinable public init(integerLiteral value: IntegerLiteralType)",
          "key.parsed_scope.end": 96,
          "key.parsed_scope.start": 96,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACSicfc\">init(_: Int)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACxcSBRzlufc\">init&lt;T&gt;(_: T) where T : BinaryFloatingPoint<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACxcSzRzlufc\">init&lt;T&gt;(_: T) where T : BinaryInteger<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV18truncatingIfNeededACx_tcSzRzlufc\">init(truncatingIfNeeded:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV8clampingACx_tcSzRzlufc\">init(clamping:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSBRzlufc\">init?&lt;T&gt;(exactly: T) where T : BinaryFloatingPoint<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSzRzlufc\">init?&lt;T&gt;(exactly: T) where T : BinaryInteger<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int) -> ShadowInt",
          "key.typeusr": "$s14integerLiteral7Rubicon9ShadowIntVSi_tcD",
          "key.usr": "s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public init?&lt;T&gt;(exactly source: <Type usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSBRzlufc1TL_xmfp\">T<\/Type>) where <Type usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSBRzlufc1TL_xmfp\">T<\/Type> : <Type usr=\"s:SB\">BinaryFloatingPoint<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 98,
              "key.offset": 4973
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 98,
              "key.offset": 4962
            }
          ],
          "key.bodycolumn": 85,
          "key.bodylength": 70,
          "key.bodyline": 98,
          "key.bodyoffset": 5042,
          "key.column": 23,
          "key.doc.declaration": "init?<T>(exactly source: T) where T : BinaryFloatingPoint",
          "key.doc.discussion": [
            {
              "Para": "If the value passed as `source` is not representable exactly, the result is `nil`. In the following example, the constant `x` is successfully created from a value of `21.0`, while the attempt to initialize the constant `y` from `21.5` fails:"
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>init(exactly:)<\/Name><USR>s:Sz7exactlyxSgqd___tcSBRd__lufc<\/USR><Declaration>init?&lt;T&gt;(exactly source: T) where T : BinaryFloatingPoint<\/Declaration><CommentParts><Abstract><Para>Creates an integer from the given floating-point value, if it can be represented exactly.<\/Para><\/Abstract><Parameters><Parameter><Name>source<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A floating-point value to convert to an integer.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>If the value passed as <codeVoice>source<\/codeVoice> is not representable exactly, the result is <codeVoice>nil<\/codeVoice>. In the following example, the constant <codeVoice>x<\/codeVoice> is successfully created from a value of <codeVoice>21.0<\/codeVoice>, while the attempt to initialize the constant <codeVoice>y<\/codeVoice> from <codeVoice>21.5<\/codeVoice> fails:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x = Int(exactly: 21.0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x == Optional(21)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y = Int(exactly: 21.5)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ y == nil]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "init(exactly:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "A floating-point value to convert to an integer."
                }
              ],
              "name": "source"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?&lt;<decl.generic_type_param usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSBRzlufc1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>exactly<\/decl.var.parameter.argument_label> <decl.var.parameter.name>source<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSBRzlufc1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSBRzlufc1TL_xmfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:SB\">BinaryFloatingPoint<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 133,
          "key.line": 98,
          "key.name": "init(exactly:)",
          "key.namecolumn": 23,
          "key.namelength": 27,
          "key.nameline": 98,
          "key.nameoffset": 4980,
          "key.offset": 4980,
          "key.overrides": [
            {
              "key.usr": "s:Sz7exactlyxSgqd___tcSBRd__lufc"
            }
          ],
          "key.parsed_declaration": "@inlinable public init?<T>(exactly source: T) where T: BinaryFloatingPoint",
          "key.parsed_scope.end": 98,
          "key.parsed_scope.start": 98,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACSicfc\">init(_: Int)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACxcSBRzlufc\">init&lt;T&gt;(_: T) where T : BinaryFloatingPoint<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACxcSzRzlufc\">init&lt;T&gt;(_: T) where T : BinaryInteger<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV18truncatingIfNeededACx_tcSzRzlufc\">init(truncatingIfNeeded:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV8clampingACx_tcSzRzlufc\">init(clamping:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSzRzlufc\">init?&lt;T&gt;(exactly: T) where T : BinaryInteger<\/RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T<\/Declaration>",
              "key.column": 29,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 1,
              "key.line": 98,
              "key.name": "T",
              "key.namecolumn": 29,
              "key.namelength": 1,
              "key.nameline": 98,
              "key.nameoffset": 4986,
              "key.offset": 4986,
              "key.parsed_declaration": "@inlinable public init?<T",
              "key.parsed_scope.end": 98,
              "key.parsed_scope.start": 98,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:7Rubicon9ShadowIntV7exactlyACSgx_tcSBRzlufc1TL_xmfp"
            }
          ],
          "key.typename": "<T where T : BinaryFloatingPoint> (ShadowInt.Type) -> (T) -> ShadowInt?",
          "key.typeusr": "$s7exactly7Rubicon9ShadowIntVSgx_tcSBRzluD",
          "key.usr": "s:Sz7exactlyxSgqd___tcSBRd__lufc"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public init?&lt;T&gt;(exactly source: <Type usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSzRzlufc1TL_xmfp\">T<\/Type>) where <Type usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSzRzlufc1TL_xmfp\">T<\/Type> : <Type usr=\"s:Sz\">BinaryInteger<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 100,
              "key.offset": 5130
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 100,
              "key.offset": 5119
            }
          ],
          "key.bodycolumn": 85,
          "key.bodylength": 70,
          "key.bodyline": 100,
          "key.bodyoffset": 5199,
          "key.column": 23,
          "key.doc.declaration": "init?<T>(exactly source: T) where T : BinaryInteger",
          "key.doc.discussion": [
            {
              "Para": "If the value passed as `source` is not representable exactly, the result is `nil`. In the following example, the constant `x` is successfully created from a value of `100`, while the attempt to initialize the constant `y` from `1_000` fails because the `Int8` type can represent `127` at maximum:"
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>init(exactly:)<\/Name><USR>s:Sj7exactlyxSgqd___tcSzRd__lufc<\/USR><Declaration>init?&lt;T&gt;(exactly source: T) where T : BinaryInteger<\/Declaration><CommentParts><Abstract><Para>Creates a new instance from the given integer, if it can be represented exactly.<\/Para><\/Abstract><Parameters><Parameter><Name>source<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A value to convert to this type.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>If the value passed as <codeVoice>source<\/codeVoice> is not representable exactly, the result is <codeVoice>nil<\/codeVoice>. In the following example, the constant <codeVoice>x<\/codeVoice> is successfully created from a value of <codeVoice>100<\/codeVoice>, while the attempt to initialize the constant <codeVoice>y<\/codeVoice> from <codeVoice>1_000<\/codeVoice> fails because the <codeVoice>Int8<\/codeVoice> type can represent <codeVoice>127<\/codeVoice> at maximum:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x = Int8(exactly: 100)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x == Optional(100)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y = Int8(exactly: 1_000)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ y == nil]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>Numeric<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "init(exactly:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "A value to convert to this type."
                }
              ],
              "name": "source"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?&lt;<decl.generic_type_param usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSzRzlufc1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>exactly<\/decl.var.parameter.argument_label> <decl.var.parameter.name>source<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSzRzlufc1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSzRzlufc1TL_xmfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Sz\">BinaryInteger<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 133,
          "key.line": 100,
          "key.name": "init(exactly:)",
          "key.namecolumn": 23,
          "key.namelength": 27,
          "key.nameline": 100,
          "key.nameoffset": 5137,
          "key.offset": 5137,
          "key.overrides": [
            {
              "key.usr": "s:Sj7exactlyxSgqd___tcSzRd__lufc"
            }
          ],
          "key.parsed_declaration": "@inlinable public init?<T>(exactly source: T) where T: BinaryInteger",
          "key.parsed_scope.end": 100,
          "key.parsed_scope.start": 100,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACSicfc\">init(_: Int)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACxcSBRzlufc\">init&lt;T&gt;(_: T) where T : BinaryFloatingPoint<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntVyACxcSzRzlufc\">init&lt;T&gt;(_: T) where T : BinaryInteger<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV18truncatingIfNeededACx_tcSzRzlufc\">init(truncatingIfNeeded:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV8clampingACx_tcSzRzlufc\">init(clamping:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV7exactlyACSgx_tcSBRzlufc\">init?&lt;T&gt;(exactly: T) where T : BinaryFloatingPoint<\/RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T<\/Declaration>",
              "key.column": 29,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 1,
              "key.line": 100,
              "key.name": "T",
              "key.namecolumn": 29,
              "key.namelength": 1,
              "key.nameline": 100,
              "key.nameoffset": 5143,
              "key.offset": 5143,
              "key.parsed_declaration": "@inlinable public init?<T",
              "key.parsed_scope.end": 100,
              "key.parsed_scope.start": 100,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:7Rubicon9ShadowIntV7exactlyACSgx_tcSzRzlufc1TL_xmfp"
            }
          ],
          "key.typename": "<T where T : BinaryInteger> (ShadowInt.Type) -> (T) -> ShadowInt?",
          "key.typeusr": "$s7exactly7Rubicon9ShadowIntVSgx_tcSzRzluD",
          "key.usr": "s:Sj7exactlyxSgqd___tcSzRd__lufc"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &lt;- (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 102,
              "key.offset": 5287
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 102,
              "key.offset": 5276
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 102,
          "key.bodyoffset": 5394,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt;- <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 102,
          "key.name": "<-(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 102,
          "key.nameoffset": 5313,
          "key.offset": 5294,
          "key.parsed_declaration": "@inlinable public static        func <- (lhs: inout ShadowInt, rhs: Int)",
          "key.parsed_scope.end": 102,
          "key.parsed_scope.start": 102,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2lsoiyySiz_ACtFZ\">&lt;- (_: inout Int, _: ShadowInt)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, Int) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV2lsoiyyACz_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &lt;- (lhs: inout <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 104,
              "key.offset": 5446
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 104,
              "key.offset": 5435
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 104,
          "key.bodyoffset": 5553,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt;- <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 104,
          "key.name": "<-(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 104,
          "key.nameoffset": 5472,
          "key.offset": 5453,
          "key.parsed_declaration": "@inlinable public static        func <- (lhs: inout Int, rhs: ShadowInt)",
          "key.parsed_scope.end": 104,
          "key.parsed_scope.start": 104,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2lsoiyyACz_SitFZ\">&lt;- (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout Int, ShadowInt) -> ()",
          "key.typeusr": "$syySiz_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV2lsoiyySiz_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &lt; (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 106,
              "key.offset": 5605
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 106,
              "key.offset": 5594
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 106,
          "key.bodyoffset": 5712,
          "key.column": 23,
          "key.doc.declaration": "static func < (lhs: Self, rhs: Self) -> Bool",
          "key.doc.discussion": [
            {
              "Para": "This function is the only requirement of the `Comparable` protocol. The remainder of the relational operator functions are implemented by the standard library for any type that conforms to `Comparable`."
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>&lt;(_:_:)<\/Name><USR>s:SL1loiySbx_xtFZ<\/USR><Declaration>static func &lt; (lhs: Self, rhs: Self) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether the value of the first argument is less than that of the second argument.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A value to compare.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another value to compare.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This function is the only requirement of the <codeVoice>Comparable<\/codeVoice> protocol. The remainder of the relational operator functions are implemented by the standard library for any type that conforms to <codeVoice>Comparable<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Comparable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "<(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "A value to compare."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "Another value to compare."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 106,
          "key.name": "<(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 34,
          "key.nameline": 106,
          "key.nameoffset": 5631,
          "key.offset": 5612,
          "key.overrides": [
            {
              "key.usr": "s:SL1loiySbx_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func < (lhs: ShadowInt, rhs: ShadowInt)        -> Bool",
          "key.parsed_scope.end": 106,
          "key.parsed_scope.start": 106,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1loiySbAC_SitFZ\">&lt; (_: ShadowInt, _: Int) -&gt; Bool<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1loiySbSi_ACtFZ\">&lt; (_: Int, _: ShadowInt) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, ShadowInt) -> Bool",
          "key.typeusr": "$sySb7Rubicon9ShadowIntV_ACtcD",
          "key.usr": "s:SL1loiySbx_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &lt; (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 108,
              "key.offset": 5764
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 108,
              "key.offset": 5753
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 108,
          "key.bodyoffset": 5871,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 108,
          "key.name": "<(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 108,
          "key.nameoffset": 5790,
          "key.offset": 5771,
          "key.parsed_declaration": "@inlinable public static        func < (lhs: ShadowInt, rhs: Int)              -> Bool",
          "key.parsed_scope.end": 108,
          "key.parsed_scope.start": 108,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1loiySbAC_ACtFZ\">&lt; (_: ShadowInt, _: ShadowInt) -&gt; Bool<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1loiySbSi_ACtFZ\">&lt; (_: Int, _: ShadowInt) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, Int) -> Bool",
          "key.typeusr": "$sySb7Rubicon9ShadowIntV_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV1loiySbAC_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &lt; (lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 110,
              "key.offset": 5923
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 110,
              "key.offset": 5912
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 110,
          "key.bodyoffset": 6030,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 110,
          "key.name": "<(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 110,
          "key.nameoffset": 5949,
          "key.offset": 5930,
          "key.parsed_declaration": "@inlinable public static        func < (lhs: Int, rhs: ShadowInt)              -> Bool",
          "key.parsed_scope.end": 110,
          "key.parsed_scope.start": 110,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1loiySbAC_ACtFZ\">&lt; (_: ShadowInt, _: ShadowInt) -&gt; Bool<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1loiySbAC_SitFZ\">&lt; (_: ShadowInt, _: Int) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int, ShadowInt) -> Bool",
          "key.typeusr": "$sySbSi_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV1loiySbSi_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func == (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 112,
              "key.offset": 6082
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 112,
              "key.offset": 6071
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 112,
          "key.bodyoffset": 6189,
          "key.column": 23,
          "key.doc.declaration": "static func == (lhs: Self, rhs: Self) -> Bool",
          "key.doc.discussion": [
            {
              "Para": "Equality is the inverse of inequality. For any values `a` and `b`, `a == b` implies that `a != b` is `false`."
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>==(_:_:)<\/Name><USR>s:SQ2eeoiySbx_xtFZ<\/USR><Declaration>static func == (lhs: Self, rhs: Self) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are equal.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A value to compare.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another value to compare.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Equality is the inverse of inequality. For any values <codeVoice>a<\/codeVoice> and <codeVoice>b<\/codeVoice>, <codeVoice>a == b<\/codeVoice> implies that <codeVoice>a != b<\/codeVoice> is <codeVoice>false<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Equatable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "==(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "A value to compare."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "Another value to compare."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 112,
          "key.name": "==(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 112,
          "key.nameoffset": 6108,
          "key.offset": 6089,
          "key.overrides": [
            {
              "key.usr": "s:SQ2eeoiySbx_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func == (lhs: ShadowInt, rhs: ShadowInt)       -> Bool",
          "key.parsed_scope.end": 112,
          "key.parsed_scope.start": 112,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2eeoiySbAC_SitFZ\">== (_: ShadowInt, _: Int) -&gt; Bool<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2eeoiySbSi_ACtFZ\">== (_: Int, _: ShadowInt) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, ShadowInt) -> Bool",
          "key.typeusr": "$sySb7Rubicon9ShadowIntV_ACtcD",
          "key.usr": "s:SQ2eeoiySbx_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func == (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 114,
              "key.offset": 6241
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 114,
              "key.offset": 6230
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 114,
          "key.bodyoffset": 6348,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 114,
          "key.name": "==(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 29,
          "key.nameline": 114,
          "key.nameoffset": 6267,
          "key.offset": 6248,
          "key.parsed_declaration": "@inlinable public static        func == (lhs: ShadowInt, rhs: Int)             -> Bool",
          "key.parsed_scope.end": 114,
          "key.parsed_scope.start": 114,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2eeoiySbAC_ACtFZ\">== (_: ShadowInt, _: ShadowInt) -&gt; Bool<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2eeoiySbSi_ACtFZ\">== (_: Int, _: ShadowInt) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, Int) -> Bool",
          "key.typeusr": "$sySb7Rubicon9ShadowIntV_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV2eeoiySbAC_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func == (lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 116,
              "key.offset": 6400
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 116,
              "key.offset": 6389
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 116,
          "key.bodyoffset": 6507,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 116,
          "key.name": "==(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 29,
          "key.nameline": 116,
          "key.nameoffset": 6426,
          "key.offset": 6407,
          "key.parsed_declaration": "@inlinable public static        func == (lhs: Int, rhs: ShadowInt)             -> Bool",
          "key.parsed_scope.end": 116,
          "key.parsed_scope.start": 116,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2eeoiySbAC_ACtFZ\">== (_: ShadowInt, _: ShadowInt) -&gt; Bool<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2eeoiySbAC_SitFZ\">== (_: ShadowInt, _: Int) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int, ShadowInt) -> Bool",
          "key.typeusr": "$sySbSi_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV2eeoiySbSi_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &lt;= (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 118,
              "key.offset": 6559
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 118,
              "key.offset": 6548
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 118,
          "key.bodyoffset": 6666,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt;= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 118,
          "key.name": "<=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 29,
          "key.nameline": 118,
          "key.nameoffset": 6585,
          "key.offset": 6566,
          "key.parsed_declaration": "@inlinable public static        func <= (lhs: ShadowInt, rhs: Int)             -> Bool",
          "key.parsed_scope.end": 118,
          "key.parsed_scope.start": 118,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2leoiySbSi_ACtFZ\">&lt;= (_: Int, _: ShadowInt) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, Int) -> Bool",
          "key.typeusr": "$sySb7Rubicon9ShadowIntV_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV2leoiySbAC_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &lt;= (lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 120,
              "key.offset": 6718
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 120,
              "key.offset": 6707
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 120,
          "key.bodyoffset": 6825,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt;= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 120,
          "key.name": "<=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 29,
          "key.nameline": 120,
          "key.nameoffset": 6744,
          "key.offset": 6725,
          "key.parsed_declaration": "@inlinable public static        func <= (lhs: Int, rhs: ShadowInt)             -> Bool",
          "key.parsed_scope.end": 120,
          "key.parsed_scope.start": 120,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2leoiySbAC_SitFZ\">&lt;= (_: ShadowInt, _: Int) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int, ShadowInt) -> Bool",
          "key.typeusr": "$sySbSi_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV2leoiySbSi_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &gt; (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 122,
              "key.offset": 6877
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 122,
              "key.offset": 6866
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 122,
          "key.bodyoffset": 6984,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&gt; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 122,
          "key.name": ">(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 122,
          "key.nameoffset": 6903,
          "key.offset": 6884,
          "key.parsed_declaration": "@inlinable public static        func > (lhs: ShadowInt, rhs: Int)              -> Bool",
          "key.parsed_scope.end": 122,
          "key.parsed_scope.start": 122,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1goiySbSi_ACtFZ\">&gt; (_: Int, _: ShadowInt) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, Int) -> Bool",
          "key.typeusr": "$sySb7Rubicon9ShadowIntV_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV1goiySbAC_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &gt; (lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 124,
              "key.offset": 7036
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 124,
              "key.offset": 7025
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 124,
          "key.bodyoffset": 7143,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&gt; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 124,
          "key.name": ">(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 124,
          "key.nameoffset": 7062,
          "key.offset": 7043,
          "key.parsed_declaration": "@inlinable public static        func > (lhs: Int, rhs: ShadowInt)              -> Bool",
          "key.parsed_scope.end": 124,
          "key.parsed_scope.start": 124,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1goiySbAC_SitFZ\">&gt; (_: ShadowInt, _: Int) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int, ShadowInt) -> Bool",
          "key.typeusr": "$sySbSi_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV1goiySbSi_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &gt;= (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 126,
              "key.offset": 7195
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 126,
              "key.offset": 7184
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 126,
          "key.bodyoffset": 7302,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&gt;= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 126,
          "key.name": ">=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 29,
          "key.nameline": 126,
          "key.nameoffset": 7221,
          "key.offset": 7202,
          "key.parsed_declaration": "@inlinable public static        func >= (lhs: ShadowInt, rhs: Int)             -> Bool",
          "key.parsed_scope.end": 126,
          "key.parsed_scope.start": 126,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2geoiySbSi_ACtFZ\">&gt;= (_: Int, _: ShadowInt) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, Int) -> Bool",
          "key.typeusr": "$sySb7Rubicon9ShadowIntV_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV2geoiySbAC_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &gt;= (lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 128,
              "key.offset": 7354
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 128,
              "key.offset": 7343
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 128,
          "key.bodyoffset": 7461,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&gt;= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 128,
          "key.name": ">=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 29,
          "key.nameline": 128,
          "key.nameoffset": 7380,
          "key.offset": 7361,
          "key.parsed_declaration": "@inlinable public static        func >= (lhs: Int, rhs: ShadowInt)             -> Bool",
          "key.parsed_scope.end": 128,
          "key.parsed_scope.start": 128,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2geoiySbAC_SitFZ\">&gt;= (_: ShadowInt, _: Int) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int, ShadowInt) -> Bool",
          "key.typeusr": "$sySbSi_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV2geoiySbSi_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func != (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 130,
              "key.offset": 7513
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 130,
              "key.offset": 7502
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 130,
          "key.bodyoffset": 7620,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>!= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 130,
          "key.name": "!=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 29,
          "key.nameline": 130,
          "key.nameoffset": 7539,
          "key.offset": 7520,
          "key.parsed_declaration": "@inlinable public static        func != (lhs: ShadowInt, rhs: Int)             -> Bool",
          "key.parsed_scope.end": 130,
          "key.parsed_scope.start": 130,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2neoiySbSi_ACtFZ\">!= (_: Int, _: ShadowInt) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, Int) -> Bool",
          "key.typeusr": "$sySb7Rubicon9ShadowIntV_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV2neoiySbAC_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func != (lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 132,
              "key.offset": 7672
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 132,
              "key.offset": 7661
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 132,
          "key.bodyoffset": 7779,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>!= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 132,
          "key.name": "!=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 29,
          "key.nameline": 132,
          "key.nameoffset": 7698,
          "key.offset": 7679,
          "key.parsed_declaration": "@inlinable public static        func != (lhs: Int, rhs: ShadowInt)             -> Bool",
          "key.parsed_scope.end": 132,
          "key.parsed_scope.start": 132,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2neoiySbAC_SitFZ\">!= (_: ShadowInt, _: Int) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int, ShadowInt) -> Bool",
          "key.typeusr": "$sySbSi_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV2neoiySbSi_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public prefix static func ~ (x: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.prefix",
              "key.column": 30,
              "key.length": 6,
              "key.line": 134,
              "key.offset": 7845
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 134,
              "key.offset": 7831
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 134,
              "key.offset": 7820
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 134,
          "key.bodyoffset": 7938,
          "key.column": 23,
          "key.doc.declaration": "prefix static func ~ (x: Self) -> Self",
          "key.doc.discussion": [
            {
              "Para": "The bitwise NOT operator (`~`) is a prefix operator that returns a value in which all the bits of its argument are flipped: Bits that are `1` in the argument are `0` in the result, and bits that are `0` in the argument are `1` in the result. This is equivalent to the inverse of a set. For example:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Performing a bitwise NOT operation on 0 returns a value with every bit set to `1`."
            },
            {
              "CodeListing": ""
            },
            {
              "Complexity": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>~(_:)<\/Name><USR>s:Sz1topyxxFZ<\/USR><Declaration>prefix static func ~ (x: Self) -&gt; Self<\/Declaration><CommentParts><Abstract><Para>Returns the inverse of the bits set in the argument.<\/Para><\/Abstract><Discussion><Para>The bitwise NOT operator (<codeVoice>~<\/codeVoice>) is a prefix operator that returns a value in which all the bits of its argument are flipped: Bits that are <codeVoice>1<\/codeVoice> in the argument are <codeVoice>0<\/codeVoice> in the result, and bits that are <codeVoice>0<\/codeVoice> in the argument are <codeVoice>1<\/codeVoice> in the result. This is equivalent to the inverse of a set. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x: UInt8 = 5        \/\/ 0b00000101]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let notX = ~x           \/\/ 0b11111010]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Performing a bitwise NOT operation on 0 returns a value with every bit set to <codeVoice>1<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let allOnes = ~UInt8.min   \/\/ 0b11111111]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Complexity><Para>O(1).<\/Para><\/Complexity><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "~(_:)",
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.prefix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>prefix<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>~ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>x<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.prefix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 134,
          "key.name": "~(_:)",
          "key.namecolumn": 42,
          "key.namelength": 16,
          "key.nameline": 134,
          "key.nameoffset": 7857,
          "key.offset": 7838,
          "key.overrides": [
            {
              "key.usr": "s:Sz1topyxxFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static prefix func ~ (x: ShadowInt)                          -> ShadowInt",
          "key.parsed_scope.end": 134,
          "key.parsed_scope.start": 134,
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVACcD",
          "key.usr": "s:Sz1topyxxFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func + (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 136,
              "key.offset": 7990
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 136,
              "key.offset": 7979
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 136,
          "key.bodyoffset": 8097,
          "key.column": 23,
          "key.doc.declaration": "override static func + (lhs: Self, rhs: Self) -> Self",
          "key.doc.discussion": [
            {
              "Para": "The addition operator (`+`) calculates the sum of its two arguments. For example:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You cannot use `+` with arguments of different types. To add values of different types, convert one of the values to the other value’s type."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>+(_:_:)<\/Name><USR>s:Sz1poiyxx_xtFZ<\/USR><Declaration>override static func + (lhs: Self, rhs: Self) -&gt; Self<\/Declaration><CommentParts><Abstract><Para>Adds two values and produces their sum.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The first value to add.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The second value to add.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>The addition operator (<codeVoice>+<\/codeVoice>) calculates the sum of its two arguments. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[1 + 2                   \/\/ 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[-10 + 15                \/\/ 5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[-15 + -5                \/\/ -20]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[21.5 + 3.25             \/\/ 24.75]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You cannot use <codeVoice>+<\/codeVoice> with arguments of different types. To add values of different types, convert one of the values to the other value’s type.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x: Int8 = 21]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y: Int = 1000000]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[Int(x) + y              \/\/ 1000021]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "+(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The first value to add."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "The second value to add."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 136,
          "key.name": "+(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 34,
          "key.nameline": 136,
          "key.nameoffset": 8016,
          "key.offset": 7997,
          "key.overrides": [
            {
              "key.usr": "s:Sz1poiyxx_xtFZ"
            },
            {
              "key.usr": "s:s18AdditiveArithmeticP1poiyxx_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func + (lhs: ShadowInt, rhs: ShadowInt)        -> ShadowInt",
          "key.parsed_scope.end": 136,
          "key.parsed_scope.start": 136,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1poiyA2C_SitFZ\">+ (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1poiyACSi_ACtFZ\">+ (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_ACtcD",
          "key.usr": "s:Sz1poiyxx_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func + (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 138,
              "key.offset": 8149
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 138,
              "key.offset": 8138
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 138,
          "key.bodyoffset": 8256,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 138,
          "key.name": "+(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 138,
          "key.nameoffset": 8175,
          "key.offset": 8156,
          "key.parsed_declaration": "@inlinable public static        func + (lhs: ShadowInt, rhs: Int)              -> ShadowInt",
          "key.parsed_scope.end": 138,
          "key.parsed_scope.start": 138,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1poiyA2C_ACtFZ\">+ (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1poiyACSi_ACtFZ\">+ (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, Int) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV1poiyA2C_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func + (lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 140,
              "key.offset": 8308
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 140,
              "key.offset": 8297
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 140,
          "key.bodyoffset": 8415,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 140,
          "key.name": "+(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 140,
          "key.nameoffset": 8334,
          "key.offset": 8315,
          "key.parsed_declaration": "@inlinable public static        func + (lhs: Int, rhs: ShadowInt)              -> ShadowInt",
          "key.parsed_scope.end": 140,
          "key.parsed_scope.start": 140,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1poiyA2C_ACtFZ\">+ (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1poiyA2C_SitFZ\">+ (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVSi_ACtcD",
          "key.usr": "s:7Rubicon9ShadowIntV1poiyACSi_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func - (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 142,
              "key.offset": 8467
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 142,
              "key.offset": 8456
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 142,
          "key.bodyoffset": 8574,
          "key.column": 23,
          "key.doc.declaration": "override static func - (lhs: Self, rhs: Self) -> Self",
          "key.doc.discussion": [
            {
              "Para": "The subtraction operator (`-`) calculates the difference of its two arguments. For example:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You cannot use `-` with arguments of different types. To subtract values of different types, convert one of the values to the other value’s type."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>-(_:_:)<\/Name><USR>s:Sz1soiyxx_xtFZ<\/USR><Declaration>override static func - (lhs: Self, rhs: Self) -&gt; Self<\/Declaration><CommentParts><Abstract><Para>Subtracts one value from another and produces their difference.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A numeric value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to subtract from <codeVoice>lhs<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>The subtraction operator (<codeVoice>-<\/codeVoice>) calculates the difference of its two arguments. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[8 - 3                   \/\/ 5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[-10 - 5                 \/\/ -15]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[100 - -5                \/\/ 105]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[10.5 - 100.0            \/\/ -89.5]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You cannot use <codeVoice>-<\/codeVoice> with arguments of different types. To subtract values of different types, convert one of the values to the other value’s type.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x: UInt8 = 21]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y: UInt = 1000000]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y - UInt(x)             \/\/ 999979]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "-(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "A numeric value."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "The value to subtract from `lhs`."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 142,
          "key.name": "-(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 34,
          "key.nameline": 142,
          "key.nameoffset": 8493,
          "key.offset": 8474,
          "key.overrides": [
            {
              "key.usr": "s:Sz1soiyxx_xtFZ"
            },
            {
              "key.usr": "s:s18AdditiveArithmeticP1soiyxx_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func - (lhs: ShadowInt, rhs: ShadowInt)        -> ShadowInt",
          "key.parsed_scope.end": 142,
          "key.parsed_scope.start": 142,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1soiyA2C_SitFZ\">- (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1soiyACSi_ACtFZ\">- (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_ACtcD",
          "key.usr": "s:Sz1soiyxx_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func - (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 144,
              "key.offset": 8626
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 144,
              "key.offset": 8615
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 144,
          "key.bodyoffset": 8733,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 144,
          "key.name": "-(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 144,
          "key.nameoffset": 8652,
          "key.offset": 8633,
          "key.parsed_declaration": "@inlinable public static        func - (lhs: ShadowInt, rhs: Int)              -> ShadowInt",
          "key.parsed_scope.end": 144,
          "key.parsed_scope.start": 144,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1soiyA2C_ACtFZ\">- (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1soiyACSi_ACtFZ\">- (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, Int) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV1soiyA2C_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func - (lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 146,
              "key.offset": 8785
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 146,
              "key.offset": 8774
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 146,
          "key.bodyoffset": 8892,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 146,
          "key.name": "-(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 146,
          "key.nameoffset": 8811,
          "key.offset": 8792,
          "key.parsed_declaration": "@inlinable public static        func - (lhs: Int, rhs: ShadowInt)              -> ShadowInt",
          "key.parsed_scope.end": 146,
          "key.parsed_scope.start": 146,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1soiyA2C_ACtFZ\">- (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1soiyA2C_SitFZ\">- (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVSi_ACtcD",
          "key.usr": "s:7Rubicon9ShadowIntV1soiyACSi_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func * (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 148,
              "key.offset": 8944
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 148,
              "key.offset": 8933
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 148,
          "key.bodyoffset": 9051,
          "key.column": 23,
          "key.doc.declaration": "override static func * (lhs: Self, rhs: Self) -> Self",
          "key.doc.discussion": [
            {
              "Para": "The multiplication operator (`*`) calculates the product of its two arguments. For example:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You cannot use `*` with arguments of different types. To multiply values of different types, convert one of the values to the other value’s type."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>*(_:_:)<\/Name><USR>s:Sz1moiyxx_xtFZ<\/USR><Declaration>override static func * (lhs: Self, rhs: Self) -&gt; Self<\/Declaration><CommentParts><Abstract><Para>Multiplies two values and produces their product.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The first value to multiply.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The second value to multiply.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>The multiplication operator (<codeVoice>*<\/codeVoice>) calculates the product of its two arguments. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[2 * 3                   \/\/ 6]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[100 * 21                \/\/ 2100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[-10 * 15                \/\/ -150]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[3.5 * 2.25              \/\/ 7.875]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You cannot use <codeVoice>*<\/codeVoice> with arguments of different types. To multiply values of different types, convert one of the values to the other value’s type.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x: Int8 = 21]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y: Int = 1000000]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[Int(x) * y              \/\/ 21000000]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "*(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The first value to multiply."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "The second value to multiply."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 148,
          "key.name": "*(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 34,
          "key.nameline": 148,
          "key.nameoffset": 8970,
          "key.offset": 8951,
          "key.overrides": [
            {
              "key.usr": "s:Sz1moiyxx_xtFZ"
            },
            {
              "key.usr": "s:Sj1moiyxx_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func * (lhs: ShadowInt, rhs: ShadowInt)        -> ShadowInt",
          "key.parsed_scope.end": 148,
          "key.parsed_scope.start": 148,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1moiyA2C_SitFZ\">* (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1moiyACSi_ACtFZ\">* (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_ACtcD",
          "key.usr": "s:Sz1moiyxx_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func * (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 150,
              "key.offset": 9103
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 150,
              "key.offset": 9092
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 150,
          "key.bodyoffset": 9210,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 150,
          "key.name": "*(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 150,
          "key.nameoffset": 9129,
          "key.offset": 9110,
          "key.parsed_declaration": "@inlinable public static        func * (lhs: ShadowInt, rhs: Int)              -> ShadowInt",
          "key.parsed_scope.end": 150,
          "key.parsed_scope.start": 150,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1moiyA2C_ACtFZ\">* (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1moiyACSi_ACtFZ\">* (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, Int) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV1moiyA2C_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func * (lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 152,
              "key.offset": 9262
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 152,
              "key.offset": 9251
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 152,
          "key.bodyoffset": 9369,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 152,
          "key.name": "*(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 152,
          "key.nameoffset": 9288,
          "key.offset": 9269,
          "key.parsed_declaration": "@inlinable public static        func * (lhs: Int, rhs: ShadowInt)              -> ShadowInt",
          "key.parsed_scope.end": 152,
          "key.parsed_scope.start": 152,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1moiyA2C_ACtFZ\">* (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1moiyA2C_SitFZ\">* (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVSi_ACtcD",
          "key.usr": "s:7Rubicon9ShadowIntV1moiyACSi_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func \/ (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 154,
              "key.offset": 9421
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 154,
              "key.offset": 9410
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 154,
          "key.bodyoffset": 9528,
          "key.column": 23,
          "key.doc.declaration": "static func \/ (lhs: Self, rhs: Self) -> Self",
          "key.doc.discussion": [
            {
              "Para": "For integer types, any remainder of the division is discarded."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>\/(_:_:)<\/Name><USR>s:Sz1doiyxx_xtFZ<\/USR><Declaration>static func \/ (lhs: Self, rhs: Self) -&gt; Self<\/Declaration><CommentParts><Abstract><Para>Returns the quotient of dividing the first value by the second.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to divide.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to divide <codeVoice>lhs<\/codeVoice> by. <codeVoice>rhs<\/codeVoice> must not be zero.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>For integer types, any remainder of the division is discarded.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x = 21 \/ 5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x == 4]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "\/(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The value to divide."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "The value to divide `lhs` by. `rhs` must not be zero."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 154,
          "key.name": "\/(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 34,
          "key.nameline": 154,
          "key.nameoffset": 9447,
          "key.offset": 9428,
          "key.overrides": [
            {
              "key.usr": "s:Sz1doiyxx_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func \/ (lhs: ShadowInt, rhs: ShadowInt)        -> ShadowInt",
          "key.parsed_scope.end": 154,
          "key.parsed_scope.start": 154,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1doiyA2C_SitFZ\">\/ (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1doiyACSi_ACtFZ\">\/ (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_ACtcD",
          "key.usr": "s:Sz1doiyxx_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func \/ (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 156,
              "key.offset": 9580
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 156,
              "key.offset": 9569
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 156,
          "key.bodyoffset": 9687,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 156,
          "key.name": "\/(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 156,
          "key.nameoffset": 9606,
          "key.offset": 9587,
          "key.parsed_declaration": "@inlinable public static        func \/ (lhs: ShadowInt, rhs: Int)              -> ShadowInt",
          "key.parsed_scope.end": 156,
          "key.parsed_scope.start": 156,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1doiyA2C_ACtFZ\">\/ (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1doiyACSi_ACtFZ\">\/ (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, Int) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV1doiyA2C_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func \/ (lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 158,
              "key.offset": 9739
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 158,
              "key.offset": 9728
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 158,
          "key.bodyoffset": 9846,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 158,
          "key.name": "\/(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 158,
          "key.nameoffset": 9765,
          "key.offset": 9746,
          "key.parsed_declaration": "@inlinable public static        func \/ (lhs: Int, rhs: ShadowInt)              -> ShadowInt",
          "key.parsed_scope.end": 158,
          "key.parsed_scope.start": 158,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1doiyA2C_ACtFZ\">\/ (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1doiyA2C_SitFZ\">\/ (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVSi_ACtcD",
          "key.usr": "s:7Rubicon9ShadowIntV1doiyACSi_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func % (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 160,
              "key.offset": 9898
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 160,
              "key.offset": 9887
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 160,
          "key.bodyoffset": 10005,
          "key.column": 23,
          "key.doc.declaration": "static func % (lhs: Self, rhs: Self) -> Self",
          "key.doc.discussion": [
            {
              "Para": "The result of the remainder operator (`%`) has the same sign as `lhs` and has a magnitude less than `rhs.magnitude`."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "For any two integers `a` and `b`, their quotient `q`, and their remainder `r`, `a == b * q + r`."
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>%(_:_:)<\/Name><USR>s:Sz1roiyxx_xtFZ<\/USR><Declaration>static func % (lhs: Self, rhs: Self) -&gt; Self<\/Declaration><CommentParts><Abstract><Para>Returns the remainder of dividing the first value by the second.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to divide.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to divide <codeVoice>lhs<\/codeVoice> by. <codeVoice>rhs<\/codeVoice> must not be zero.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>The result of the remainder operator (<codeVoice>%<\/codeVoice>) has the same sign as <codeVoice>lhs<\/codeVoice> and has a magnitude less than <codeVoice>rhs.magnitude<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x = 22 % 5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x == 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y = 22 % -5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ y == 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let z = -22 % -5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ z == -2]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>For any two integers <codeVoice>a<\/codeVoice> and <codeVoice>b<\/codeVoice>, their quotient <codeVoice>q<\/codeVoice>, and their remainder <codeVoice>r<\/codeVoice>, <codeVoice>a == b * q + r<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "%(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The value to divide."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "The value to divide `lhs` by. `rhs` must not be zero."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>% <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 160,
          "key.name": "%(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 34,
          "key.nameline": 160,
          "key.nameoffset": 9924,
          "key.offset": 9905,
          "key.overrides": [
            {
              "key.usr": "s:Sz1roiyxx_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func % (lhs: ShadowInt, rhs: ShadowInt)        -> ShadowInt",
          "key.parsed_scope.end": 160,
          "key.parsed_scope.start": 160,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1roiyA2C_SitFZ\">% (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1roiyACSi_ACtFZ\">% (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_ACtcD",
          "key.usr": "s:Sz1roiyxx_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func % (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 162,
              "key.offset": 10057
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 162,
              "key.offset": 10046
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 162,
          "key.bodyoffset": 10164,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>% <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 162,
          "key.name": "%(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 162,
          "key.nameoffset": 10083,
          "key.offset": 10064,
          "key.parsed_declaration": "@inlinable public static        func % (lhs: ShadowInt, rhs: Int)              -> ShadowInt",
          "key.parsed_scope.end": 162,
          "key.parsed_scope.start": 162,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1roiyA2C_ACtFZ\">% (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1roiyACSi_ACtFZ\">% (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, Int) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV1roiyA2C_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func % (lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 164,
              "key.offset": 10216
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 164,
              "key.offset": 10205
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 164,
          "key.bodyoffset": 10323,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>% <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 164,
          "key.name": "%(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 164,
          "key.nameoffset": 10242,
          "key.offset": 10223,
          "key.parsed_declaration": "@inlinable public static        func % (lhs: Int, rhs: ShadowInt)              -> ShadowInt",
          "key.parsed_scope.end": 164,
          "key.parsed_scope.start": 164,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1roiyA2C_ACtFZ\">% (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1roiyA2C_SitFZ\">% (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVSi_ACtcD",
          "key.usr": "s:7Rubicon9ShadowIntV1roiyACSi_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &amp; (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 166,
              "key.offset": 10375
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 166,
              "key.offset": 10364
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 166,
          "key.bodyoffset": 10482,
          "key.column": 23,
          "key.doc.declaration": "static func & (lhs: Self, rhs: Self) -> Self",
          "key.doc.discussion": [
            {
              "Para": "A bitwise AND operation results in a value that has each bit set to `1` where  of its arguments have that bit set to `1`. For example:"
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>&amp;(_:_:)<\/Name><USR>s:Sz1aoiyxx_xtFZ<\/USR><Declaration>static func &amp; (lhs: Self, rhs: Self) -&gt; Self<\/Declaration><CommentParts><Abstract><Para>Returns the result of performing a bitwise AND operation on the two given values.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An integer value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another integer value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>A bitwise AND operation results in a value that has each bit set to <codeVoice>1<\/codeVoice> where <emphasis>both<\/emphasis> of its arguments have that bit set to <codeVoice>1<\/codeVoice>. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x: UInt8 = 5          \/\/ 0b00000101]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y: UInt8 = 14         \/\/ 0b00001110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let z = x & y             \/\/ 0b00000100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ z == 4]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "&(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "An integer value."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "Another integer value."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&amp; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 166,
          "key.name": "&(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 34,
          "key.nameline": 166,
          "key.nameoffset": 10401,
          "key.offset": 10382,
          "key.overrides": [
            {
              "key.usr": "s:Sz1aoiyxx_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func & (lhs: ShadowInt, rhs: ShadowInt)        -> ShadowInt",
          "key.parsed_scope.end": 166,
          "key.parsed_scope.start": 166,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1aoiyA2C_SitFZ\">&amp; (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1aoiyACSi_ACtFZ\">&amp; (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_ACtcD",
          "key.usr": "s:Sz1aoiyxx_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &amp; (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 168,
              "key.offset": 10534
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 168,
              "key.offset": 10523
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 168,
          "key.bodyoffset": 10641,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&amp; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 168,
          "key.name": "&(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 168,
          "key.nameoffset": 10560,
          "key.offset": 10541,
          "key.parsed_declaration": "@inlinable public static        func & (lhs: ShadowInt, rhs: Int)              -> ShadowInt",
          "key.parsed_scope.end": 168,
          "key.parsed_scope.start": 168,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1aoiyA2C_ACtFZ\">&amp; (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1aoiyACSi_ACtFZ\">&amp; (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, Int) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV1aoiyA2C_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &amp; (lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 170,
              "key.offset": 10693
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 170,
              "key.offset": 10682
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 170,
          "key.bodyoffset": 10800,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&amp; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 170,
          "key.name": "&(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 170,
          "key.nameoffset": 10719,
          "key.offset": 10700,
          "key.parsed_declaration": "@inlinable public static        func & (lhs: Int, rhs: ShadowInt)              -> ShadowInt",
          "key.parsed_scope.end": 170,
          "key.parsed_scope.start": 170,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1aoiyA2C_ACtFZ\">&amp; (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1aoiyA2C_SitFZ\">&amp; (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVSi_ACtcD",
          "key.usr": "s:7Rubicon9ShadowIntV1aoiyACSi_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func | (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 172,
              "key.offset": 10852
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 172,
              "key.offset": 10841
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 172,
          "key.bodyoffset": 10959,
          "key.column": 23,
          "key.doc.declaration": "static func | (lhs: Self, rhs: Self) -> Self",
          "key.doc.discussion": [
            {
              "Para": "A bitwise OR operation results in a value that has each bit set to `1` where  of its arguments have that bit set to `1`. For example:"
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>|(_:_:)<\/Name><USR>s:Sz1ooiyxx_xtFZ<\/USR><Declaration>static func | (lhs: Self, rhs: Self) -&gt; Self<\/Declaration><CommentParts><Abstract><Para>Returns the result of performing a bitwise OR operation on the two given values.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An integer value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another integer value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>A bitwise OR operation results in a value that has each bit set to <codeVoice>1<\/codeVoice> where <emphasis>one or both<\/emphasis> of its arguments have that bit set to <codeVoice>1<\/codeVoice>. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x: UInt8 = 5          \/\/ 0b00000101]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y: UInt8 = 14         \/\/ 0b00001110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let z = x | y             \/\/ 0b00001111]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ z == 15]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "|(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "An integer value."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "Another integer value."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>| <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 172,
          "key.name": "|(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 34,
          "key.nameline": 172,
          "key.nameoffset": 10878,
          "key.offset": 10859,
          "key.overrides": [
            {
              "key.usr": "s:Sz1ooiyxx_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func | (lhs: ShadowInt, rhs: ShadowInt)        -> ShadowInt",
          "key.parsed_scope.end": 172,
          "key.parsed_scope.start": 172,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1ooiyA2C_SitFZ\">| (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1ooiyACSi_ACtFZ\">| (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_ACtcD",
          "key.usr": "s:Sz1ooiyxx_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func | (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 174,
              "key.offset": 11011
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 174,
              "key.offset": 11000
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 174,
          "key.bodyoffset": 11118,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>| <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 174,
          "key.name": "|(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 174,
          "key.nameoffset": 11037,
          "key.offset": 11018,
          "key.parsed_declaration": "@inlinable public static        func | (lhs: ShadowInt, rhs: Int)              -> ShadowInt",
          "key.parsed_scope.end": 174,
          "key.parsed_scope.start": 174,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1ooiyA2C_ACtFZ\">| (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1ooiyACSi_ACtFZ\">| (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, Int) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV1ooiyA2C_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func | (lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 176,
              "key.offset": 11170
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 176,
              "key.offset": 11159
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 176,
          "key.bodyoffset": 11277,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>| <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 176,
          "key.name": "|(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 176,
          "key.nameoffset": 11196,
          "key.offset": 11177,
          "key.parsed_declaration": "@inlinable public static        func | (lhs: Int, rhs: ShadowInt)              -> ShadowInt",
          "key.parsed_scope.end": 176,
          "key.parsed_scope.start": 176,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1ooiyA2C_ACtFZ\">| (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1ooiyA2C_SitFZ\">| (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVSi_ACtcD",
          "key.usr": "s:7Rubicon9ShadowIntV1ooiyACSi_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func ^ (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 178,
              "key.offset": 11329
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 178,
              "key.offset": 11318
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 178,
          "key.bodyoffset": 11436,
          "key.column": 23,
          "key.doc.declaration": "static func ^ (lhs: Self, rhs: Self) -> Self",
          "key.doc.discussion": [
            {
              "Para": "A bitwise XOR operation, also known as an exclusive OR operation, results in a value that has each bit set to `1` where  of its arguments had that bit set to `1`. For example:"
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>^(_:_:)<\/Name><USR>s:Sz1xoiyxx_xtFZ<\/USR><Declaration>static func ^ (lhs: Self, rhs: Self) -&gt; Self<\/Declaration><CommentParts><Abstract><Para>Returns the result of performing a bitwise XOR operation on the two given values.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An integer value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another integer value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>A bitwise XOR operation, also known as an exclusive OR operation, results in a value that has each bit set to <codeVoice>1<\/codeVoice> where <emphasis>one or the other but not both<\/emphasis> of its arguments had that bit set to <codeVoice>1<\/codeVoice>. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x: UInt8 = 5          \/\/ 0b00000101]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y: UInt8 = 14         \/\/ 0b00001110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let z = x ^ y             \/\/ 0b00001011]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ z == 11]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "^(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "An integer value."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "Another integer value."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>^ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 178,
          "key.name": "^(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 34,
          "key.nameline": 178,
          "key.nameoffset": 11355,
          "key.offset": 11336,
          "key.overrides": [
            {
              "key.usr": "s:Sz1xoiyxx_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func ^ (lhs: ShadowInt, rhs: ShadowInt)        -> ShadowInt",
          "key.parsed_scope.end": 178,
          "key.parsed_scope.start": 178,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1xoiyA2C_SitFZ\">^ (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1xoiyACSi_ACtFZ\">^ (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_ACtcD",
          "key.usr": "s:Sz1xoiyxx_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func ^ (lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 180,
              "key.offset": 11488
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 180,
              "key.offset": 11477
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 180,
          "key.bodyoffset": 11595,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>^ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 180,
          "key.name": "^(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 180,
          "key.nameoffset": 11514,
          "key.offset": 11495,
          "key.parsed_declaration": "@inlinable public static        func ^ (lhs: ShadowInt, rhs: Int)              -> ShadowInt",
          "key.parsed_scope.end": 180,
          "key.parsed_scope.start": 180,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1xoiyA2C_ACtFZ\">^ (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1xoiyACSi_ACtFZ\">^ (_: Int, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (ShadowInt, Int) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV1xoiyA2C_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func ^ (lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 182,
              "key.offset": 11647
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 182,
              "key.offset": 11636
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 182,
          "key.bodyoffset": 11754,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>^ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 182,
          "key.name": "^(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 28,
          "key.nameline": 182,
          "key.nameoffset": 11673,
          "key.offset": 11654,
          "key.parsed_declaration": "@inlinable public static        func ^ (lhs: Int, rhs: ShadowInt)              -> ShadowInt",
          "key.parsed_scope.end": 182,
          "key.parsed_scope.start": 182,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1xoiyA2C_ACtFZ\">^ (_: ShadowInt, _: ShadowInt) -&gt; ShadowInt<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV1xoiyA2C_SitFZ\">^ (_: ShadowInt, _: Int) -&gt; ShadowInt<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (Int, ShadowInt) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVSi_ACtcD",
          "key.usr": "s:7Rubicon9ShadowIntV1xoiyACSi_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &gt;&gt; &lt;RHS&gt;(lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV2ggoiyA2C_xtSzRzlFZ3RHSL_xmfp\">RHS<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type> where <Type usr=\"s:7Rubicon9ShadowIntV2ggoiyA2C_xtSzRzlFZ3RHSL_xmfp\">RHS<\/Type> : <Type usr=\"s:Sz\">BinaryInteger<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 184,
              "key.offset": 11806
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 184,
              "key.offset": 11795
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 184,
          "key.bodyoffset": 11913,
          "key.column": 23,
          "key.doc.declaration": "static func >> <RHS>(lhs: Self, rhs: RHS) -> Self where RHS : BinaryInteger",
          "key.doc.discussion": [
            {
              "Para": "The `>>` operator performs a , which defines a result for a shift of any value."
            },
            {
              "List-Bullet": ""
            },
            {
              "Para": "The following example defines `x` as an instance of `UInt8`, an 8-bit, unsigned integer type. If you use `2` as the right-hand-side value in an operation on `x`, the value is shifted right by two bits."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If you use `11` as `rhs`, `x` is overshifted such that all of its bits are set to zero."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Using a negative value as `rhs` is the same as performing a left shift using `abs(rhs)`."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Right shift operations on negative values “fill in” the high bits with ones instead of zeros."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>&gt;&gt;(_:_:)<\/Name><USR>s:Sz2ggoiyxx_qd__tSzRd__lFZ<\/USR><Declaration>static func &gt;&gt; &lt;RHS&gt;(lhs: Self, rhs: RHS) -&gt; Self where RHS : BinaryInteger<\/Declaration><CommentParts><Abstract><Para>Returns the result of shifting a value’s binary representation the specified number of digits to the right.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to shift.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The number of bits to shift <codeVoice>lhs<\/codeVoice> to the right.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>The <codeVoice>&gt;&gt;<\/codeVoice> operator performs a <emphasis>smart shift<\/emphasis>, which defines a result for a shift of any value.<\/Para><List-Bullet><Item><Para>Using a negative value for <codeVoice>rhs<\/codeVoice> performs a left shift using <codeVoice>abs(rhs)<\/codeVoice>.<\/Para><\/Item><Item><Para>Using a value for <codeVoice>rhs<\/codeVoice> that is greater than or equal to the bit width of <codeVoice>lhs<\/codeVoice> is an <emphasis>overshift<\/emphasis>. An overshift results in <codeVoice>-1<\/codeVoice> for a negative value of <codeVoice>lhs<\/codeVoice> or <codeVoice>0<\/codeVoice> for a nonnegative value.<\/Para><\/Item><Item><Para>Using any other value for <codeVoice>rhs<\/codeVoice> performs a right shift on <codeVoice>lhs<\/codeVoice> by that amount.<\/Para><\/Item><\/List-Bullet><Para>The following example defines <codeVoice>x<\/codeVoice> as an instance of <codeVoice>UInt8<\/codeVoice>, an 8-bit, unsigned integer type. If you use <codeVoice>2<\/codeVoice> as the right-hand-side value in an operation on <codeVoice>x<\/codeVoice>, the value is shifted right by two bits.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x: UInt8 = 30                 \/\/ 0b00011110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y = x >> 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ y == 7                         \/\/ 0b00000111]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you use <codeVoice>11<\/codeVoice> as <codeVoice>rhs<\/codeVoice>, <codeVoice>x<\/codeVoice> is overshifted such that all of its bits are set to zero.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let z = x >> 11]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ z == 0                         \/\/ 0b00000000]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Using a negative value as <codeVoice>rhs<\/codeVoice> is the same as performing a left shift using <codeVoice>abs(rhs)<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let a = x >> -3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ a == 240                       \/\/ 0b11110000]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let b = x << 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ b == 240                       \/\/ 0b11110000]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Right shift operations on negative values “fill in” the high bits with ones instead of zeros.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let q: Int8 = -30                 \/\/ 0b11100010]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let r = q >> 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ r == -8                        \/\/ 0b11111000]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let s = q >> 11]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ s == -1                        \/\/ 0b11111111]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": ">>(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The value to shift."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "The number of bits to shift `lhs` to the right."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&gt;&gt; <\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Rubicon9ShadowIntV2ggoiyA2C_xtSzRzlFZ3RHSL_xmfp\"><decl.generic_type_param.name>RHS<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV2ggoiyA2C_xtSzRzlFZ3RHSL_xmfp\">RHS<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV2ggoiyA2C_xtSzRzlFZ3RHSL_xmfp\">RHS<\/ref.generic_type_param> : <ref.protocol usr=\"s:Sz\">BinaryInteger<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 184,
          "key.name": ">>(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 34,
          "key.nameline": 184,
          "key.nameoffset": 11832,
          "key.offset": 11813,
          "key.overrides": [
            {
              "key.usr": "s:Sz2ggoiyxx_qd__tSzRd__lFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func >> <RHS>(lhs: ShadowInt, rhs: RHS)        -> ShadowInt where RHS: BinaryInteger",
          "key.parsed_scope.end": 184,
          "key.parsed_scope.start": 184,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>RHS<\/Declaration>",
              "key.column": 46,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>RHS<\/decl.generic_type_param.name><\/decl.generic_type_param>",
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 3,
              "key.line": 184,
              "key.name": "RHS",
              "key.namecolumn": 46,
              "key.namelength": 3,
              "key.nameline": 184,
              "key.nameoffset": 11836,
              "key.offset": 11836,
              "key.parsed_declaration": "@inlinable public static        func >> <RHS",
              "key.parsed_scope.end": 184,
              "key.parsed_scope.start": 184,
              "key.typename": "RHS.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:7Rubicon9ShadowIntV2ggoiyA2C_xtSzRzlFZ3RHSL_xmfp"
            }
          ],
          "key.typename": "<RHS where RHS : BinaryInteger> (ShadowInt.Type) -> (ShadowInt, RHS) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_xtcSzRzluD",
          "key.usr": "s:Sz2ggoiyxx_qd__tSzRd__lFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &lt;&lt; &lt;RHS&gt;(lhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV2lloiyA2C_xtSzRzlFZ3RHSL_xmfp\">RHS<\/Type>) -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type> where <Type usr=\"s:7Rubicon9ShadowIntV2lloiyA2C_xtSzRzlFZ3RHSL_xmfp\">RHS<\/Type> : <Type usr=\"s:Sz\">BinaryInteger<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 186,
              "key.offset": 11965
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 186,
              "key.offset": 11954
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 34,
          "key.bodyline": 186,
          "key.bodyoffset": 12072,
          "key.column": 23,
          "key.doc.declaration": "static func << <RHS>(lhs: Self, rhs: RHS) -> Self where RHS : BinaryInteger",
          "key.doc.discussion": [
            {
              "Para": "The `<<` operator performs a , which defines a result for a shift of any value."
            },
            {
              "List-Bullet": ""
            },
            {
              "Para": "The following example defines `x` as an instance of `UInt8`, an 8-bit, unsigned integer type. If you use `2` as the right-hand-side value in an operation on `x`, the value is shifted left by two bits."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If you use `11` as `rhs`, `x` is overshifted such that all of its bits are set to zero."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Using a negative value as `rhs` is the same as performing a right shift with `abs(rhs)`."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>&lt;&lt;(_:_:)<\/Name><USR>s:Sz2lloiyxx_qd__tSzRd__lFZ<\/USR><Declaration>static func &lt;&lt; &lt;RHS&gt;(lhs: Self, rhs: RHS) -&gt; Self where RHS : BinaryInteger<\/Declaration><CommentParts><Abstract><Para>Returns the result of shifting a value’s binary representation the specified number of digits to the left.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to shift.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The number of bits to shift <codeVoice>lhs<\/codeVoice> to the left.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>The <codeVoice>&lt;&lt;<\/codeVoice> operator performs a <emphasis>smart shift<\/emphasis>, which defines a result for a shift of any value.<\/Para><List-Bullet><Item><Para>Using a negative value for <codeVoice>rhs<\/codeVoice> performs a right shift using <codeVoice>abs(rhs)<\/codeVoice>.<\/Para><\/Item><Item><Para>Using a value for <codeVoice>rhs<\/codeVoice> that is greater than or equal to the bit width of <codeVoice>lhs<\/codeVoice> is an <emphasis>overshift<\/emphasis>, resulting in zero.<\/Para><\/Item><Item><Para>Using any other value for <codeVoice>rhs<\/codeVoice> performs a left shift on <codeVoice>lhs<\/codeVoice> by that amount.<\/Para><\/Item><\/List-Bullet><Para>The following example defines <codeVoice>x<\/codeVoice> as an instance of <codeVoice>UInt8<\/codeVoice>, an 8-bit, unsigned integer type. If you use <codeVoice>2<\/codeVoice> as the right-hand-side value in an operation on <codeVoice>x<\/codeVoice>, the value is shifted left by two bits.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x: UInt8 = 30                 \/\/ 0b00011110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y = x << 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ y == 120                       \/\/ 0b01111000]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you use <codeVoice>11<\/codeVoice> as <codeVoice>rhs<\/codeVoice>, <codeVoice>x<\/codeVoice> is overshifted such that all of its bits are set to zero.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let z = x << 11]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ z == 0                         \/\/ 0b00000000]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Using a negative value as <codeVoice>rhs<\/codeVoice> is the same as performing a right shift with <codeVoice>abs(rhs)<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let a = x << -3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ a == 3                         \/\/ 0b00000011]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let b = x >> 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ b == 3                         \/\/ 0b00000011]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "<<(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The value to shift."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "The number of bits to shift `lhs` to the left."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt;&lt; <\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Rubicon9ShadowIntV2lloiyA2C_xtSzRzlFZ3RHSL_xmfp\"><decl.generic_type_param.name>RHS<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV2lloiyA2C_xtSzRzlFZ3RHSL_xmfp\">RHS<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV2lloiyA2C_xtSzRzlFZ3RHSL_xmfp\">RHS<\/ref.generic_type_param> : <ref.protocol usr=\"s:Sz\">BinaryInteger<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 135,
          "key.line": 186,
          "key.name": "<<(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 34,
          "key.nameline": 186,
          "key.nameoffset": 11991,
          "key.offset": 11972,
          "key.overrides": [
            {
              "key.usr": "s:Sz2lloiyxx_qd__tSzRd__lFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func << <RHS>(lhs: ShadowInt, rhs: RHS)        -> ShadowInt where RHS: BinaryInteger",
          "key.parsed_scope.end": 186,
          "key.parsed_scope.start": 186,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>RHS<\/Declaration>",
              "key.column": 46,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>RHS<\/decl.generic_type_param.name><\/decl.generic_type_param>",
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 3,
              "key.line": 186,
              "key.name": "RHS",
              "key.namecolumn": 46,
              "key.namelength": 3,
              "key.nameline": 186,
              "key.nameoffset": 11995,
              "key.offset": 11995,
              "key.parsed_declaration": "@inlinable public static        func << <RHS",
              "key.parsed_scope.end": 186,
              "key.parsed_scope.start": 186,
              "key.typename": "RHS.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:7Rubicon9ShadowIntV2lloiyA2C_xtSzRzlFZ3RHSL_xmfp"
            }
          ],
          "key.typename": "<RHS where RHS : BinaryInteger> (ShadowInt.Type) -> (ShadowInt, RHS) -> ShadowInt",
          "key.typeusr": "$sy7Rubicon9ShadowIntVAC_xtcSzRzluD",
          "key.usr": "s:Sz2lloiyxx_qd__tSzRd__lFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public func isMultiple(of other: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 188,
              "key.offset": 12124
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 188,
              "key.offset": 12113
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 188,
          "key.bodyoffset": 12231,
          "key.column": 37,
          "key.doc.declaration": "func isMultiple(of other: Self) -> Bool",
          "key.doc.discussion": [
            {
              "Para": "For two integers  and ,  is a multiple of  if there exists a third integer  such that . For example,  is a multiple of  because . Zero is a multiple of everything because  for any integer ."
            },
            {
              "Para": "Two edge cases are worth particular attention:"
            },
            {
              "List-Bullet": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>isMultiple(of:)<\/Name><USR>s:Sz10isMultiple2ofSbx_tF<\/USR><Declaration>func isMultiple(of other: Self) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Returns <codeVoice>true<\/codeVoice> if this value is a multiple of the given value, and <codeVoice>false<\/codeVoice> otherwise.<\/Para><\/Abstract><Parameters><Parameter><Name>other<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to test.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>For two integers <emphasis>a<\/emphasis> and <emphasis>b<\/emphasis>, <emphasis>a<\/emphasis> is a multiple of <emphasis>b<\/emphasis> if there exists a third integer <emphasis>q<\/emphasis> such that <emphasis>a = q*b<\/emphasis>. For example, <emphasis>6<\/emphasis> is a multiple of <emphasis>3<\/emphasis> because <emphasis>6 = 2*3<\/emphasis>. Zero is a multiple of everything because <emphasis>0 = 0*x<\/emphasis> for any integer <emphasis>x<\/emphasis>.<\/Para><Para>Two edge cases are worth particular attention:<\/Para><List-Bullet><Item><Para><codeVoice>x.isMultiple(of: 0)<\/codeVoice> is <codeVoice>true<\/codeVoice> if <codeVoice>x<\/codeVoice> is zero and <codeVoice>false<\/codeVoice> otherwise.<\/Para><\/Item><Item><Para><codeVoice>T.min.isMultiple(of: -1)<\/codeVoice> is <codeVoice>true<\/codeVoice> for signed integer <codeVoice>T<\/codeVoice>, even though the quotient <codeVoice>T.min \/ -1<\/codeVoice> isn’t representable in type <codeVoice>T<\/codeVoice>.<\/Para><\/Item><\/List-Bullet><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "isMultiple(of:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The value to test."
                }
              ],
              "name": "other"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>isMultiple<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>other<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 122,
          "key.line": 188,
          "key.name": "isMultiple(of:)",
          "key.namecolumn": 42,
          "key.namelength": 31,
          "key.nameline": 188,
          "key.nameoffset": 12150,
          "key.offset": 12145,
          "key.overrides": [
            {
              "key.usr": "s:Sz10isMultiple2ofSbx_tF"
            }
          ],
          "key.parsed_declaration": "@inlinable public               func isMultiple(of other: ShadowInt)           -> Bool",
          "key.parsed_scope.end": 188,
          "key.parsed_scope.start": 188,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV10isMultiple2ofSbSi_tF\">isMultiple(of: Int) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt) -> (ShadowInt) -> Bool",
          "key.typeusr": "$s2ofSb7Rubicon9ShadowIntV_tcD",
          "key.usr": "s:Sz10isMultiple2ofSbx_tF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public func isMultiple(of other: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 190,
              "key.offset": 12284
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 190,
              "key.offset": 12273
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 190,
          "key.bodyoffset": 12391,
          "key.column": 37,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>isMultiple<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>other<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 122,
          "key.line": 190,
          "key.name": "isMultiple(of:)",
          "key.namecolumn": 42,
          "key.namelength": 25,
          "key.nameline": 190,
          "key.nameoffset": 12310,
          "key.offset": 12305,
          "key.parsed_declaration": "@inlinable public               func isMultiple(of other: Int)                 -> Bool",
          "key.parsed_scope.end": 190,
          "key.parsed_scope.start": 190,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV10isMultiple2ofSbAC_tF\">isMultiple(of: ShadowInt) -&gt; Bool<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt) -> (Int) -> Bool",
          "key.typeusr": "$s2ofSbSi_tcD",
          "key.usr": "s:7Rubicon9ShadowIntV10isMultiple2ofSbSi_tF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public func signum() -&gt; <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 192,
              "key.offset": 12444
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 192,
              "key.offset": 12433
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 192,
          "key.bodyoffset": 12551,
          "key.column": 37,
          "key.doc.declaration": "func signum() -> Self",
          "key.doc.discussion": [
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>signum()<\/Name><USR>s:Sz6signumxyF<\/USR><Declaration>func signum() -&gt; Self<\/Declaration><CommentParts><Abstract><Para>Returns <codeVoice>-1<\/codeVoice> if this value is negative and <codeVoice>1<\/codeVoice> if it’s positive; otherwise, <codeVoice>0<\/codeVoice>.<\/Para><\/Abstract><ResultDiscussion><Para>The sign of this number, expressed as an integer of the same type.<\/Para><\/ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "signum()",
          "key.doc.result_discussion": [
            {
              "Para": "The sign of this number, expressed as an integer of the same type."
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>signum<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 122,
          "key.line": 192,
          "key.name": "signum()",
          "key.namecolumn": 42,
          "key.namelength": 8,
          "key.nameline": 192,
          "key.nameoffset": 12470,
          "key.offset": 12465,
          "key.overrides": [
            {
              "key.usr": "s:Sz6signumxyF"
            }
          ],
          "key.parsed_declaration": "@inlinable public               func signum()                                  -> ShadowInt",
          "key.parsed_scope.end": 192,
          "key.parsed_scope.start": 192,
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt) -> () -> ShadowInt",
          "key.typeusr": "$s7Rubicon9ShadowIntVycD",
          "key.usr": "s:Sz6signumxyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func += (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 194,
              "key.offset": 12604
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 194,
              "key.offset": 12593
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 194,
          "key.bodyoffset": 12711,
          "key.column": 23,
          "key.doc.declaration": "override static func += (lhs: inout Self, rhs: Self)",
          "key.doc.discussion": [
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>+=(_:_:)<\/Name><USR>s:Sz2peoiyyxz_xtFZ<\/USR><Declaration>override static func += (lhs: inout Self, rhs: Self)<\/Declaration><CommentParts><Abstract><Para>Adds two values and stores the result in the left-hand-side variable.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The first value to add.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The second value to add.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "+=(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The first value to add."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "The second value to add."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 194,
          "key.name": "+=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 41,
          "key.nameline": 194,
          "key.nameoffset": 12630,
          "key.offset": 12611,
          "key.overrides": [
            {
              "key.usr": "s:Sz2peoiyyxz_xtFZ"
            },
            {
              "key.usr": "s:s18AdditiveArithmeticP2peoiyyxz_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func += (lhs: inout ShadowInt, rhs: ShadowInt)",
          "key.parsed_scope.end": 194,
          "key.parsed_scope.start": 194,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2peoiyySiz_ACtFZ\">+= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2peoiyyACz_SitFZ\">+= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, ShadowInt) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_ACtcD",
          "key.usr": "s:Sz2peoiyyxz_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func -= (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 196,
              "key.offset": 12764
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 196,
              "key.offset": 12753
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 196,
          "key.bodyoffset": 12871,
          "key.column": 23,
          "key.doc.declaration": "override static func -= (lhs: inout Self, rhs: Self)",
          "key.doc.discussion": [
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>-=(_:_:)<\/Name><USR>s:Sz2seoiyyxz_xtFZ<\/USR><Declaration>override static func -= (lhs: inout Self, rhs: Self)<\/Declaration><CommentParts><Abstract><Para>Subtracts the second value from the first and stores the difference in the left-hand-side variable.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A numeric value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to subtract from <codeVoice>lhs<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "-=(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "A numeric value."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "The value to subtract from `lhs`."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>-= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 196,
          "key.name": "-=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 41,
          "key.nameline": 196,
          "key.nameoffset": 12790,
          "key.offset": 12771,
          "key.overrides": [
            {
              "key.usr": "s:Sz2seoiyyxz_xtFZ"
            },
            {
              "key.usr": "s:s18AdditiveArithmeticP2seoiyyxz_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func -= (lhs: inout ShadowInt, rhs: ShadowInt)",
          "key.parsed_scope.end": 196,
          "key.parsed_scope.start": 196,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2seoiyySiz_ACtFZ\">-= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2seoiyyACz_SitFZ\">-= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, ShadowInt) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_ACtcD",
          "key.usr": "s:Sz2seoiyyxz_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func *= (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 198,
              "key.offset": 12924
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 198,
              "key.offset": 12913
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 198,
          "key.bodyoffset": 13031,
          "key.column": 23,
          "key.doc.declaration": "override static func *= (lhs: inout Self, rhs: Self)",
          "key.doc.discussion": [
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>*=(_:_:)<\/Name><USR>s:Sz2meoiyyxz_xtFZ<\/USR><Declaration>override static func *= (lhs: inout Self, rhs: Self)<\/Declaration><CommentParts><Abstract><Para>Multiplies two values and stores the result in the left-hand-side variable.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The first value to multiply.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The second value to multiply.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "*=(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The first value to multiply."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "The second value to multiply."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>*= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 198,
          "key.name": "*=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 41,
          "key.nameline": 198,
          "key.nameoffset": 12950,
          "key.offset": 12931,
          "key.overrides": [
            {
              "key.usr": "s:Sz2meoiyyxz_xtFZ"
            },
            {
              "key.usr": "s:Sj2meoiyyxz_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func *= (lhs: inout ShadowInt, rhs: ShadowInt)",
          "key.parsed_scope.end": 198,
          "key.parsed_scope.start": 198,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2meoiyySiz_ACtFZ\">*= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2meoiyyACz_SitFZ\">*= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, ShadowInt) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_ACtcD",
          "key.usr": "s:Sz2meoiyyxz_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func \/= (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 200,
              "key.offset": 13084
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 200,
              "key.offset": 13073
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 200,
          "key.bodyoffset": 13191,
          "key.column": 23,
          "key.doc.declaration": "static func \/= (lhs: inout Self, rhs: Self)",
          "key.doc.discussion": [
            {
              "Para": "For integer types, any remainder of the division is discarded."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>\/=(_:_:)<\/Name><USR>s:Sz2deoiyyxz_xtFZ<\/USR><Declaration>static func \/= (lhs: inout Self, rhs: Self)<\/Declaration><CommentParts><Abstract><Para>Divides the first value by the second and stores the quotient in the left-hand-side variable.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to divide.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to divide <codeVoice>lhs<\/codeVoice> by. <codeVoice>rhs<\/codeVoice> must not be zero.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>For integer types, any remainder of the division is discarded.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var x = 21]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[x \/= 5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x == 4]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "\/=(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The value to divide."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "The value to divide `lhs` by. `rhs` must not be zero."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 200,
          "key.name": "\/=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 41,
          "key.nameline": 200,
          "key.nameoffset": 13110,
          "key.offset": 13091,
          "key.overrides": [
            {
              "key.usr": "s:Sz2deoiyyxz_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func \/= (lhs: inout ShadowInt, rhs: ShadowInt)",
          "key.parsed_scope.end": 200,
          "key.parsed_scope.start": 200,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2deoiyySiz_ACtFZ\">\/= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2deoiyyACz_SitFZ\">\/= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, ShadowInt) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_ACtcD",
          "key.usr": "s:Sz2deoiyyxz_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func %= (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 202,
              "key.offset": 13244
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 202,
              "key.offset": 13233
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 202,
          "key.bodyoffset": 13351,
          "key.column": 23,
          "key.doc.declaration": "static func %= (lhs: inout Self, rhs: Self)",
          "key.doc.discussion": [
            {
              "Para": "The result has the same sign as `lhs` and has a magnitude less than `rhs.magnitude`."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>%=(_:_:)<\/Name><USR>s:Sz2reoiyyxz_xtFZ<\/USR><Declaration>static func %= (lhs: inout Self, rhs: Self)<\/Declaration><CommentParts><Abstract><Para>Divides the first value by the second and stores the remainder in the left-hand-side variable.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to divide.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to divide <codeVoice>lhs<\/codeVoice> by. <codeVoice>rhs<\/codeVoice> must not be zero.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>The result has the same sign as <codeVoice>lhs<\/codeVoice> and has a magnitude less than <codeVoice>rhs.magnitude<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var x = 22]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[x %= 5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x == 2]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var y = 22]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y %= -5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ y == 2]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var z = -22]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[z %= -5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ z == -2]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "%=(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The value to divide."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "The value to divide `lhs` by. `rhs` must not be zero."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>%= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 202,
          "key.name": "%=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 41,
          "key.nameline": 202,
          "key.nameoffset": 13270,
          "key.offset": 13251,
          "key.overrides": [
            {
              "key.usr": "s:Sz2reoiyyxz_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func %= (lhs: inout ShadowInt, rhs: ShadowInt)",
          "key.parsed_scope.end": 202,
          "key.parsed_scope.start": 202,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2reoiyySiz_ACtFZ\">%= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2reoiyyACz_SitFZ\">%= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, ShadowInt) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_ACtcD",
          "key.usr": "s:Sz2reoiyyxz_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &amp;= (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 204,
              "key.offset": 13404
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 204,
              "key.offset": 13393
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 204,
          "key.bodyoffset": 13511,
          "key.column": 23,
          "key.doc.declaration": "static func &= (lhs: inout Self, rhs: Self)",
          "key.doc.discussion": [
            {
              "Para": "A bitwise AND operation results in a value that has each bit set to `1` where  of its arguments have that bit set to `1`. For example:"
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>&amp;=(_:_:)<\/Name><USR>s:Sz2aeoiyyxz_xtFZ<\/USR><Declaration>static func &amp;= (lhs: inout Self, rhs: Self)<\/Declaration><CommentParts><Abstract><Para>Stores the result of performing a bitwise AND operation on the two given values in the left-hand-side variable.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An integer value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another integer value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>A bitwise AND operation results in a value that has each bit set to <codeVoice>1<\/codeVoice> where <emphasis>both<\/emphasis> of its arguments have that bit set to <codeVoice>1<\/codeVoice>. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var x: UInt8 = 5          \/\/ 0b00000101]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y: UInt8 = 14         \/\/ 0b00001110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[x &= y                    \/\/ 0b00000100]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "&=(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "An integer value."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "Another integer value."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&amp;= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 204,
          "key.name": "&=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 41,
          "key.nameline": 204,
          "key.nameoffset": 13430,
          "key.offset": 13411,
          "key.overrides": [
            {
              "key.usr": "s:Sz2aeoiyyxz_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func &= (lhs: inout ShadowInt, rhs: ShadowInt)",
          "key.parsed_scope.end": 204,
          "key.parsed_scope.start": 204,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2aeoiyySiz_ACtFZ\">&amp;= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2aeoiyyACz_SitFZ\">&amp;= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, ShadowInt) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_ACtcD",
          "key.usr": "s:Sz2aeoiyyxz_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func |= (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 206,
              "key.offset": 13564
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 206,
              "key.offset": 13553
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 206,
          "key.bodyoffset": 13671,
          "key.column": 23,
          "key.doc.declaration": "static func |= (lhs: inout Self, rhs: Self)",
          "key.doc.discussion": [
            {
              "Para": "A bitwise OR operation results in a value that has each bit set to `1` where  of its arguments have that bit set to `1`. For example:"
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>|=(_:_:)<\/Name><USR>s:Sz2oeoiyyxz_xtFZ<\/USR><Declaration>static func |= (lhs: inout Self, rhs: Self)<\/Declaration><CommentParts><Abstract><Para>Stores the result of performing a bitwise OR operation on the two given values in the left-hand-side variable.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An integer value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another integer value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>A bitwise OR operation results in a value that has each bit set to <codeVoice>1<\/codeVoice> where <emphasis>one or both<\/emphasis> of its arguments have that bit set to <codeVoice>1<\/codeVoice>. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var x: UInt8 = 5          \/\/ 0b00000101]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y: UInt8 = 14         \/\/ 0b00001110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[x |= y                    \/\/ 0b00001111]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "|=(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "An integer value."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "Another integer value."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>|= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 206,
          "key.name": "|=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 41,
          "key.nameline": 206,
          "key.nameoffset": 13590,
          "key.offset": 13571,
          "key.overrides": [
            {
              "key.usr": "s:Sz2oeoiyyxz_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func |= (lhs: inout ShadowInt, rhs: ShadowInt)",
          "key.parsed_scope.end": 206,
          "key.parsed_scope.start": 206,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2oeoiyySiz_ACtFZ\">|= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2oeoiyyACz_SitFZ\">|= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, ShadowInt) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_ACtcD",
          "key.usr": "s:Sz2oeoiyyxz_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func ^= (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 208,
              "key.offset": 13724
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 208,
              "key.offset": 13713
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 208,
          "key.bodyoffset": 13831,
          "key.column": 23,
          "key.doc.declaration": "static func ^= (lhs: inout Self, rhs: Self)",
          "key.doc.discussion": [
            {
              "Para": "A bitwise XOR operation, also known as an exclusive OR operation, results in a value that has each bit set to `1` where  of its arguments had that bit set to `1`. For example:"
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>^=(_:_:)<\/Name><USR>s:Sz2xeoiyyxz_xtFZ<\/USR><Declaration>static func ^= (lhs: inout Self, rhs: Self)<\/Declaration><CommentParts><Abstract><Para>Stores the result of performing a bitwise XOR operation on the two given values in the left-hand-side variable.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An integer value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another integer value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>A bitwise XOR operation, also known as an exclusive OR operation, results in a value that has each bit set to <codeVoice>1<\/codeVoice> where <emphasis>one or the other but not both<\/emphasis> of its arguments had that bit set to <codeVoice>1<\/codeVoice>. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var x: UInt8 = 5          \/\/ 0b00000101]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y: UInt8 = 14         \/\/ 0b00001110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[x ^= y                    \/\/ 0b00001011]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "^=(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "An integer value."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "Another integer value."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>^= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 208,
          "key.name": "^=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 41,
          "key.nameline": 208,
          "key.nameoffset": 13750,
          "key.offset": 13731,
          "key.overrides": [
            {
              "key.usr": "s:Sz2xeoiyyxz_xtFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func ^= (lhs: inout ShadowInt, rhs: ShadowInt)",
          "key.parsed_scope.end": 208,
          "key.parsed_scope.start": 208,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2xeoiyySiz_ACtFZ\">^= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2xeoiyyACz_SitFZ\">^= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, ShadowInt) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_ACtcD",
          "key.usr": "s:Sz2xeoiyyxz_xtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func += (lhs: inout <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 210,
              "key.offset": 13884
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 210,
              "key.offset": 13873
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 210,
          "key.bodyoffset": 13991,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 210,
          "key.name": "+=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 210,
          "key.nameoffset": 13910,
          "key.offset": 13891,
          "key.parsed_declaration": "@inlinable public static        func += (lhs: inout Int, rhs: ShadowInt)",
          "key.parsed_scope.end": 210,
          "key.parsed_scope.start": 210,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2peoiyyACz_ACtFZ\">+= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2peoiyyACz_SitFZ\">+= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout Int, ShadowInt) -> ()",
          "key.typeusr": "$syySiz_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV2peoiyySiz_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func -= (lhs: inout <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 212,
              "key.offset": 14044
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 212,
              "key.offset": 14033
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 212,
          "key.bodyoffset": 14151,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>-= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 212,
          "key.name": "-=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 212,
          "key.nameoffset": 14070,
          "key.offset": 14051,
          "key.parsed_declaration": "@inlinable public static        func -= (lhs: inout Int, rhs: ShadowInt)",
          "key.parsed_scope.end": 212,
          "key.parsed_scope.start": 212,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2seoiyyACz_ACtFZ\">-= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2seoiyyACz_SitFZ\">-= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout Int, ShadowInt) -> ()",
          "key.typeusr": "$syySiz_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV2seoiyySiz_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func *= (lhs: inout <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 214,
              "key.offset": 14204
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 214,
              "key.offset": 14193
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 214,
          "key.bodyoffset": 14311,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>*= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 214,
          "key.name": "*=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 214,
          "key.nameoffset": 14230,
          "key.offset": 14211,
          "key.parsed_declaration": "@inlinable public static        func *= (lhs: inout Int, rhs: ShadowInt)",
          "key.parsed_scope.end": 214,
          "key.parsed_scope.start": 214,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2meoiyyACz_ACtFZ\">*= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2meoiyyACz_SitFZ\">*= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout Int, ShadowInt) -> ()",
          "key.typeusr": "$syySiz_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV2meoiyySiz_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func \/= (lhs: inout <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 216,
              "key.offset": 14364
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 216,
              "key.offset": 14353
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 216,
          "key.bodyoffset": 14471,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 216,
          "key.name": "\/=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 216,
          "key.nameoffset": 14390,
          "key.offset": 14371,
          "key.parsed_declaration": "@inlinable public static        func \/= (lhs: inout Int, rhs: ShadowInt)",
          "key.parsed_scope.end": 216,
          "key.parsed_scope.start": 216,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2deoiyyACz_ACtFZ\">\/= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2deoiyyACz_SitFZ\">\/= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout Int, ShadowInt) -> ()",
          "key.typeusr": "$syySiz_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV2deoiyySiz_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func %= (lhs: inout <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 218,
              "key.offset": 14524
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 218,
              "key.offset": 14513
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 218,
          "key.bodyoffset": 14631,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>%= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 218,
          "key.name": "%=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 218,
          "key.nameoffset": 14550,
          "key.offset": 14531,
          "key.parsed_declaration": "@inlinable public static        func %= (lhs: inout Int, rhs: ShadowInt)",
          "key.parsed_scope.end": 218,
          "key.parsed_scope.start": 218,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2reoiyyACz_ACtFZ\">%= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2reoiyyACz_SitFZ\">%= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout Int, ShadowInt) -> ()",
          "key.typeusr": "$syySiz_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV2reoiyySiz_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &amp;= (lhs: inout <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 220,
              "key.offset": 14684
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 220,
              "key.offset": 14673
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 220,
          "key.bodyoffset": 14791,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&amp;= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 220,
          "key.name": "&=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 220,
          "key.nameoffset": 14710,
          "key.offset": 14691,
          "key.parsed_declaration": "@inlinable public static        func &= (lhs: inout Int, rhs: ShadowInt)",
          "key.parsed_scope.end": 220,
          "key.parsed_scope.start": 220,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2aeoiyyACz_ACtFZ\">&amp;= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2aeoiyyACz_SitFZ\">&amp;= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout Int, ShadowInt) -> ()",
          "key.typeusr": "$syySiz_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV2aeoiyySiz_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func |= (lhs: inout <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 222,
              "key.offset": 14844
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 222,
              "key.offset": 14833
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 222,
          "key.bodyoffset": 14951,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>|= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 222,
          "key.name": "|=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 222,
          "key.nameoffset": 14870,
          "key.offset": 14851,
          "key.parsed_declaration": "@inlinable public static        func |= (lhs: inout Int, rhs: ShadowInt)",
          "key.parsed_scope.end": 222,
          "key.parsed_scope.start": 222,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2oeoiyyACz_ACtFZ\">|= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2oeoiyyACz_SitFZ\">|= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout Int, ShadowInt) -> ()",
          "key.typeusr": "$syySiz_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV2oeoiyySiz_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func ^= (lhs: inout <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 224,
              "key.offset": 15004
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 224,
              "key.offset": 14993
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 224,
          "key.bodyoffset": 15111,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>^= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 224,
          "key.name": "^=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 224,
          "key.nameoffset": 15030,
          "key.offset": 15011,
          "key.parsed_declaration": "@inlinable public static        func ^= (lhs: inout Int, rhs: ShadowInt)",
          "key.parsed_scope.end": 224,
          "key.parsed_scope.start": 224,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2xeoiyyACz_ACtFZ\">^= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2xeoiyyACz_SitFZ\">^= (_: inout ShadowInt, _: Int)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout Int, ShadowInt) -> ()",
          "key.typeusr": "$syySiz_7Rubicon9ShadowIntVtcD",
          "key.usr": "s:7Rubicon9ShadowIntV2xeoiyySiz_ACtFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func += (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 226,
              "key.offset": 15164
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 226,
              "key.offset": 15153
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 226,
          "key.bodyoffset": 15271,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 226,
          "key.name": "+=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 226,
          "key.nameoffset": 15190,
          "key.offset": 15171,
          "key.parsed_declaration": "@inlinable public static        func += (lhs: inout ShadowInt, rhs: Int)",
          "key.parsed_scope.end": 226,
          "key.parsed_scope.start": 226,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2peoiyyACz_ACtFZ\">+= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2peoiyySiz_ACtFZ\">+= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, Int) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV2peoiyyACz_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func -= (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 228,
              "key.offset": 15324
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 228,
              "key.offset": 15313
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 228,
          "key.bodyoffset": 15431,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>-= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 228,
          "key.name": "-=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 228,
          "key.nameoffset": 15350,
          "key.offset": 15331,
          "key.parsed_declaration": "@inlinable public static        func -= (lhs: inout ShadowInt, rhs: Int)",
          "key.parsed_scope.end": 228,
          "key.parsed_scope.start": 228,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2seoiyyACz_ACtFZ\">-= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2seoiyySiz_ACtFZ\">-= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, Int) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV2seoiyyACz_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func *= (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 230,
              "key.offset": 15484
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 230,
              "key.offset": 15473
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 230,
          "key.bodyoffset": 15591,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>*= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 230,
          "key.name": "*=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 230,
          "key.nameoffset": 15510,
          "key.offset": 15491,
          "key.parsed_declaration": "@inlinable public static        func *= (lhs: inout ShadowInt, rhs: Int)",
          "key.parsed_scope.end": 230,
          "key.parsed_scope.start": 230,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2meoiyyACz_ACtFZ\">*= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2meoiyySiz_ACtFZ\">*= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, Int) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV2meoiyyACz_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func \/= (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 232,
              "key.offset": 15644
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 232,
              "key.offset": 15633
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 232,
          "key.bodyoffset": 15751,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 232,
          "key.name": "\/=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 232,
          "key.nameoffset": 15670,
          "key.offset": 15651,
          "key.parsed_declaration": "@inlinable public static        func \/= (lhs: inout ShadowInt, rhs: Int)",
          "key.parsed_scope.end": 232,
          "key.parsed_scope.start": 232,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2deoiyyACz_ACtFZ\">\/= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2deoiyySiz_ACtFZ\">\/= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, Int) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV2deoiyyACz_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func %= (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 234,
              "key.offset": 15804
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 234,
              "key.offset": 15793
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 234,
          "key.bodyoffset": 15911,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>%= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 234,
          "key.name": "%=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 234,
          "key.nameoffset": 15830,
          "key.offset": 15811,
          "key.parsed_declaration": "@inlinable public static        func %= (lhs: inout ShadowInt, rhs: Int)",
          "key.parsed_scope.end": 234,
          "key.parsed_scope.start": 234,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2reoiyyACz_ACtFZ\">%= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2reoiyySiz_ACtFZ\">%= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, Int) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV2reoiyyACz_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &amp;= (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 236,
              "key.offset": 15964
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 236,
              "key.offset": 15953
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 236,
          "key.bodyoffset": 16071,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&amp;= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 236,
          "key.name": "&=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 236,
          "key.nameoffset": 15990,
          "key.offset": 15971,
          "key.parsed_declaration": "@inlinable public static        func &= (lhs: inout ShadowInt, rhs: Int)",
          "key.parsed_scope.end": 236,
          "key.parsed_scope.start": 236,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2aeoiyyACz_ACtFZ\">&amp;= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2aeoiyySiz_ACtFZ\">&amp;= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, Int) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV2aeoiyyACz_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func |= (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 238,
              "key.offset": 16124
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 238,
              "key.offset": 16113
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 238,
          "key.bodyoffset": 16231,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>|= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 238,
          "key.name": "|=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 238,
          "key.nameoffset": 16150,
          "key.offset": 16131,
          "key.parsed_declaration": "@inlinable public static        func |= (lhs: inout ShadowInt, rhs: Int)",
          "key.parsed_scope.end": 238,
          "key.parsed_scope.start": 238,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2oeoiyyACz_ACtFZ\">|= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2oeoiyySiz_ACtFZ\">|= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, Int) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV2oeoiyyACz_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func ^= (lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 240,
              "key.offset": 16284
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 240,
              "key.offset": 16273
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 240,
          "key.bodyoffset": 16391,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>^= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 240,
          "key.name": "^=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 35,
          "key.nameline": 240,
          "key.nameoffset": 16310,
          "key.offset": 16291,
          "key.parsed_declaration": "@inlinable public static        func ^= (lhs: inout ShadowInt, rhs: Int)",
          "key.parsed_scope.end": 240,
          "key.parsed_scope.start": 240,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2xeoiyyACz_ACtFZ\">^= (_: inout ShadowInt, _: ShadowInt)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV2xeoiyySiz_ACtFZ\">^= (_: inout Int, _: ShadowInt)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt.Type) -> (inout ShadowInt, Int) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_SitcD",
          "key.usr": "s:7Rubicon9ShadowIntV2xeoiyyACz_SitFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &gt;&gt;= &lt;RHS&gt;(lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV3ggeoiyyACz_xtSzRzlFZ3RHSL_xmfp\">RHS<\/Type>) where <Type usr=\"s:7Rubicon9ShadowIntV3ggeoiyyACz_xtSzRzlFZ3RHSL_xmfp\">RHS<\/Type> : <Type usr=\"s:Sz\">BinaryInteger<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 242,
              "key.offset": 16444
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 242,
              "key.offset": 16433
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 242,
          "key.bodyoffset": 16551,
          "key.column": 23,
          "key.doc.declaration": "static func >>= <RHS>(lhs: inout Self, rhs: RHS) where RHS : BinaryInteger",
          "key.doc.discussion": [
            {
              "Para": "The `>>=` operator performs a , which defines a result for a shift of any value."
            },
            {
              "List-Bullet": ""
            },
            {
              "Para": "The following example defines `x` as an instance of `UInt8`, an 8-bit, unsigned integer type. If you use `2` as the right-hand-side value in an operation on `x`, the value is shifted right by two bits."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If you use `11` as `rhs`, `x` is overshifted such that all of its bits are set to zero."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Using a negative value as `rhs` is the same as performing a left shift using `abs(rhs)`."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Right shift operations on negative values “fill in” the high bits with ones instead of zeros."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>&gt;&gt;=(_:_:)<\/Name><USR>s:Sz3ggeoiyyxz_qd__tSzRd__lFZ<\/USR><Declaration>static func &gt;&gt;= &lt;RHS&gt;(lhs: inout Self, rhs: RHS) where RHS : BinaryInteger<\/Declaration><CommentParts><Abstract><Para>Stores the result of shifting a value’s binary representation the specified number of digits to the right in the left-hand-side variable.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to shift.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The number of bits to shift <codeVoice>lhs<\/codeVoice> to the right.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>The <codeVoice>&gt;&gt;=<\/codeVoice> operator performs a <emphasis>smart shift<\/emphasis>, which defines a result for a shift of any value.<\/Para><List-Bullet><Item><Para>Using a negative value for <codeVoice>rhs<\/codeVoice> performs a left shift using <codeVoice>abs(rhs)<\/codeVoice>.<\/Para><\/Item><Item><Para>Using a value for <codeVoice>rhs<\/codeVoice> that is greater than or equal to the bit width of <codeVoice>lhs<\/codeVoice> is an <emphasis>overshift<\/emphasis>. An overshift results in <codeVoice>-1<\/codeVoice> for a negative value of <codeVoice>lhs<\/codeVoice> or <codeVoice>0<\/codeVoice> for a nonnegative value.<\/Para><\/Item><Item><Para>Using any other value for <codeVoice>rhs<\/codeVoice> performs a right shift on <codeVoice>lhs<\/codeVoice> by that amount.<\/Para><\/Item><\/List-Bullet><Para>The following example defines <codeVoice>x<\/codeVoice> as an instance of <codeVoice>UInt8<\/codeVoice>, an 8-bit, unsigned integer type. If you use <codeVoice>2<\/codeVoice> as the right-hand-side value in an operation on <codeVoice>x<\/codeVoice>, the value is shifted right by two bits.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var x: UInt8 = 30                 \/\/ 0b00011110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[x >>= 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x == 7                         \/\/ 0b00000111]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you use <codeVoice>11<\/codeVoice> as <codeVoice>rhs<\/codeVoice>, <codeVoice>x<\/codeVoice> is overshifted such that all of its bits are set to zero.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var y: UInt8 = 30                 \/\/ 0b00011110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y >>= 11]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ y == 0                         \/\/ 0b00000000]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Using a negative value as <codeVoice>rhs<\/codeVoice> is the same as performing a left shift using <codeVoice>abs(rhs)<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var a: UInt8 = 30                 \/\/ 0b00011110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[a >>= -3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ a == 240                       \/\/ 0b11110000]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var b: UInt8 = 30                 \/\/ 0b00011110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[b <<= 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ b == 240                       \/\/ 0b11110000]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Right shift operations on negative values “fill in” the high bits with ones instead of zeros.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var q: Int8 = -30                 \/\/ 0b11100010]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[q >>= 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ q == -8                        \/\/ 0b11111000]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var r: Int8 = -30                 \/\/ 0b11100010]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[r >>= 11]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ r == -1                        \/\/ 0b11111111]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": ">>=(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The value to shift."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "The number of bits to shift `lhs` to the right."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&gt;&gt;= <\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Rubicon9ShadowIntV3ggeoiyyACz_xtSzRzlFZ3RHSL_xmfp\"><decl.generic_type_param.name>RHS<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV3ggeoiyyACz_xtSzRzlFZ3RHSL_xmfp\">RHS<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV3ggeoiyyACz_xtSzRzlFZ3RHSL_xmfp\">RHS<\/ref.generic_type_param> : <ref.protocol usr=\"s:Sz\">BinaryInteger<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 242,
          "key.name": ">>=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 41,
          "key.nameline": 242,
          "key.nameoffset": 16470,
          "key.offset": 16451,
          "key.overrides": [
            {
              "key.usr": "s:Sz3ggeoiyyxz_qd__tSzRd__lFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func >>= <RHS>(lhs: inout ShadowInt, rhs: RHS) where RHS: BinaryInteger",
          "key.parsed_scope.end": 242,
          "key.parsed_scope.start": 242,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>RHS<\/Declaration>",
              "key.column": 47,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>RHS<\/decl.generic_type_param.name><\/decl.generic_type_param>",
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 3,
              "key.line": 242,
              "key.name": "RHS",
              "key.namecolumn": 47,
              "key.namelength": 3,
              "key.nameline": 242,
              "key.nameoffset": 16475,
              "key.offset": 16475,
              "key.parsed_declaration": "@inlinable public static        func >>= <RHS",
              "key.parsed_scope.end": 242,
              "key.parsed_scope.start": 242,
              "key.typename": "RHS.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:7Rubicon9ShadowIntV3ggeoiyyACz_xtSzRzlFZ3RHSL_xmfp"
            }
          ],
          "key.typename": "<RHS where RHS : BinaryInteger> (ShadowInt.Type) -> (inout ShadowInt, RHS) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_xtcSzRzluD",
          "key.usr": "s:Sz3ggeoiyyxz_qd__tSzRd__lFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public static func &lt;&lt;= &lt;RHS&gt;(lhs: inout <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, rhs: <Type usr=\"s:7Rubicon9ShadowIntV3lleoiyyACz_xtSzRzlFZ3RHSL_xmfp\">RHS<\/Type>) where <Type usr=\"s:7Rubicon9ShadowIntV3lleoiyyACz_xtSzRzlFZ3RHSL_xmfp\">RHS<\/Type> : <Type usr=\"s:Sz\">BinaryInteger<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 244,
              "key.offset": 16604
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 244,
              "key.offset": 16593
            }
          ],
          "key.bodycolumn": 123,
          "key.bodylength": 35,
          "key.bodyline": 244,
          "key.bodyoffset": 16711,
          "key.column": 23,
          "key.doc.declaration": "static func <<= <RHS>(lhs: inout Self, rhs: RHS) where RHS : BinaryInteger",
          "key.doc.discussion": [
            {
              "Para": "The `<<` operator performs a , which defines a result for a shift of any value."
            },
            {
              "List-Bullet": ""
            },
            {
              "Para": "The following example defines `x` as an instance of `UInt8`, an 8-bit, unsigned integer type. If you use `2` as the right-hand-side value in an operation on `x`, the value is shifted left by two bits."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If you use `11` as `rhs`, `x` is overshifted such that all of its bits are set to zero."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Using a negative value as `rhs` is the same as performing a right shift with `abs(rhs)`."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>&lt;&lt;=(_:_:)<\/Name><USR>s:Sz3lleoiyyxz_qd__tSzRd__lFZ<\/USR><Declaration>static func &lt;&lt;= &lt;RHS&gt;(lhs: inout Self, rhs: RHS) where RHS : BinaryInteger<\/Declaration><CommentParts><Abstract><Para>Stores the result of shifting a value’s binary representation the specified number of digits to the left in the left-hand-side variable.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to shift.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The number of bits to shift <codeVoice>lhs<\/codeVoice> to the left.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>The <codeVoice>&lt;&lt;<\/codeVoice> operator performs a <emphasis>smart shift<\/emphasis>, which defines a result for a shift of any value.<\/Para><List-Bullet><Item><Para>Using a negative value for <codeVoice>rhs<\/codeVoice> performs a right shift using <codeVoice>abs(rhs)<\/codeVoice>.<\/Para><\/Item><Item><Para>Using a value for <codeVoice>rhs<\/codeVoice> that is greater than or equal to the bit width of <codeVoice>lhs<\/codeVoice> is an <emphasis>overshift<\/emphasis>, resulting in zero.<\/Para><\/Item><Item><Para>Using any other value for <codeVoice>rhs<\/codeVoice> performs a left shift on <codeVoice>lhs<\/codeVoice> by that amount.<\/Para><\/Item><\/List-Bullet><Para>The following example defines <codeVoice>x<\/codeVoice> as an instance of <codeVoice>UInt8<\/codeVoice>, an 8-bit, unsigned integer type. If you use <codeVoice>2<\/codeVoice> as the right-hand-side value in an operation on <codeVoice>x<\/codeVoice>, the value is shifted left by two bits.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var x: UInt8 = 30                 \/\/ 0b00011110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[x <<= 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ x == 120                       \/\/ 0b01111000]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you use <codeVoice>11<\/codeVoice> as <codeVoice>rhs<\/codeVoice>, <codeVoice>x<\/codeVoice> is overshifted such that all of its bits are set to zero.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var y: UInt8 = 30                 \/\/ 0b00011110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y <<= 11]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ y == 0                         \/\/ 0b00000000]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Using a negative value as <codeVoice>rhs<\/codeVoice> is the same as performing a right shift with <codeVoice>abs(rhs)<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var a: UInt8 = 30                 \/\/ 0b00011110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[a <<= -3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ a == 3                         \/\/ 0b00000011]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var b: UInt8 = 30                 \/\/ 0b00011110]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[b >>= 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ b == 3                         \/\/ 0b00000011]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "<<=(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The value to shift."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "The number of bits to shift `lhs` to the left."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt;&lt;= <\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Rubicon9ShadowIntV3lleoiyyACz_xtSzRzlFZ3RHSL_xmfp\"><decl.generic_type_param.name>RHS<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV3lleoiyyACz_xtSzRzlFZ3RHSL_xmfp\">RHS<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon9ShadowIntV3lleoiyyACz_xtSzRzlFZ3RHSL_xmfp\">RHS<\/ref.generic_type_param> : <ref.protocol usr=\"s:Sz\">BinaryInteger<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 136,
          "key.line": 244,
          "key.name": "<<=(_:_:)",
          "key.namecolumn": 42,
          "key.namelength": 41,
          "key.nameline": 244,
          "key.nameoffset": 16630,
          "key.offset": 16611,
          "key.overrides": [
            {
              "key.usr": "s:Sz3lleoiyyxz_qd__tSzRd__lFZ"
            }
          ],
          "key.parsed_declaration": "@inlinable public static        func <<= <RHS>(lhs: inout ShadowInt, rhs: RHS) where RHS: BinaryInteger",
          "key.parsed_scope.end": 244,
          "key.parsed_scope.start": 244,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>RHS<\/Declaration>",
              "key.column": 47,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>RHS<\/decl.generic_type_param.name><\/decl.generic_type_param>",
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 3,
              "key.line": 244,
              "key.name": "RHS",
              "key.namecolumn": 47,
              "key.namelength": 3,
              "key.nameline": 244,
              "key.nameoffset": 16635,
              "key.offset": 16635,
              "key.parsed_declaration": "@inlinable public static        func <<= <RHS",
              "key.parsed_scope.end": 244,
              "key.parsed_scope.start": 244,
              "key.typename": "RHS.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:7Rubicon9ShadowIntV3lleoiyyACz_xtSzRzlFZ3RHSL_xmfp"
            }
          ],
          "key.typename": "<RHS where RHS : BinaryInteger> (ShadowInt.Type) -> (inout ShadowInt, RHS) -> ()",
          "key.typeusr": "$syy7Rubicon9ShadowIntVz_xtcSzRzluD",
          "key.usr": "s:Sz3lleoiyyxz_qd__tSzRd__lFZ"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public func quotientAndRemainder(dividingBy rhs: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>) -&gt; (quotient: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, remainder: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 246,
              "key.offset": 16764
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 246,
              "key.offset": 16753
            }
          ],
          "key.bodycolumn": 124,
          "key.bodylength": 137,
          "key.bodyline": 246,
          "key.bodyoffset": 16872,
          "key.column": 23,
          "key.doc.declaration": "func quotientAndRemainder(dividingBy rhs: Self) -> (quotient: Self, remainder: Self)",
          "key.doc.discussion": [
            {
              "Para": "Use this method to calculate the quotient and remainder of a division at the same time."
            },
            {
              "CodeListing": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>quotientAndRemainder(dividingBy:)<\/Name><USR>s:Sz20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF<\/USR><Declaration>func quotientAndRemainder(dividingBy rhs: Self) -&gt; (quotient: Self, remainder: Self)<\/Declaration><CommentParts><Abstract><Para>Returns the quotient and remainder of this value divided by the given value.<\/Para><\/Abstract><Parameters><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to divide this value by.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A tuple containing the quotient and remainder of this value divided by <codeVoice>rhs<\/codeVoice>. The remainder has the same sign as <codeVoice>lhs<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><Para>Use this method to calculate the quotient and remainder of a division at the same time.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x = 1_000_000]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let (q, r) = x.quotientAndRemainder(dividingBy: 933)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ q == 1071]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ r == 757]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>BinaryInteger<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "quotientAndRemainder(dividingBy:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The value to divide this value by."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.result_discussion": [
            {
              "Para": "A tuple containing the quotient and remainder of this value divided by `rhs`. The remainder has the same sign as `lhs`."
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>quotientAndRemainder<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>dividingBy<\/decl.var.parameter.argument_label> <decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.argument_label>quotient<\/tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.argument_label>remainder<\/tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 239,
          "key.line": 246,
          "key.name": "quotientAndRemainder(dividingBy:)",
          "key.namecolumn": 28,
          "key.namelength": 47,
          "key.nameline": 246,
          "key.nameoffset": 16776,
          "key.offset": 16771,
          "key.overrides": [
            {
              "key.usr": "s:Sz20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"
            }
          ],
          "key.parsed_declaration": "@inlinable public func quotientAndRemainder(dividingBy rhs: ShadowInt) -> (quotient: ShadowInt, remainder: ShadowInt)",
          "key.parsed_scope.end": 249,
          "key.parsed_scope.start": 246,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV20quotientAndRemainder10dividingByAC0D0_AC9remaindertSi_tF\">quotientAndRemainder(dividingBy: Int) -&gt; (quotient: ShadowInt, remainder: ShadowInt)<\/RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>let qr: (quotient: <Type usr=\"s:Si\">Int<\/Type>, remainder: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
              "key.column": 9,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>qr<\/decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.argument_label>quotient<\/tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.argument_label>remainder<\/tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.var.type><\/decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 58,
              "key.line": 247,
              "key.name": "qr",
              "key.namecolumn": 13,
              "key.namelength": 2,
              "key.nameline": 247,
              "key.nameoffset": 16885,
              "key.offset": 16881,
              "key.parsed_declaration": "let qr = value.quotientAndRemainder(dividingBy: rhs.value)",
              "key.parsed_scope.end": 247,
              "key.parsed_scope.start": 247,
              "key.typename": "(quotient: Int, remainder: Int)",
              "key.typeusr": "$sSi8quotient_Si9remaindertD",
              "key.usr": "s:7Rubicon9ShadowIntV20quotientAndRemainder10dividingByAC0D0_AC9remaindertAC_tF2qrL_SiAF_SiAGtvp"
            }
          ],
          "key.typename": "(ShadowInt) -> (ShadowInt) -> (quotient: ShadowInt, remainder: ShadowInt)",
          "key.typeusr": "$s10dividingBy7Rubicon9ShadowIntV8quotient_AD9remaindertAD_tcD",
          "key.usr": "s:Sz20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public func quotientAndRemainder(dividingBy rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; (quotient: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>, remainder: <Type usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 251,
              "key.offset": 17027
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 251,
              "key.offset": 17016
            }
          ],
          "key.bodycolumn": 118,
          "key.bodylength": 131,
          "key.bodyline": 251,
          "key.bodyoffset": 17129,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>quotientAndRemainder<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>dividingBy<\/decl.var.parameter.argument_label> <decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.argument_label>quotient<\/tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.argument_label>remainder<\/tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:7Rubicon9ShadowIntV\">ShadowInt<\/ref.struct><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 227,
          "key.line": 251,
          "key.name": "quotientAndRemainder(dividingBy:)",
          "key.namecolumn": 28,
          "key.namelength": 41,
          "key.nameline": 251,
          "key.nameoffset": 17039,
          "key.offset": 17034,
          "key.parsed_declaration": "@inlinable public func quotientAndRemainder(dividingBy rhs: Int) -> (quotient: ShadowInt, remainder: ShadowInt)",
          "key.parsed_scope.end": 254,
          "key.parsed_scope.start": 251,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon9ShadowIntV20quotientAndRemainder10dividingByAC0D0_AC9remaindertAC_tF\">quotientAndRemainder(dividingBy: ShadowInt) -&gt; (quotient: ShadowInt, remainder: ShadowInt)<\/RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>let qr: (quotient: <Type usr=\"s:Si\">Int<\/Type>, remainder: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
              "key.column": 9,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>qr<\/decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.argument_label>quotient<\/tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.argument_label>remainder<\/tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.var.type><\/decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 52,
              "key.line": 252,
              "key.name": "qr",
              "key.namecolumn": 13,
              "key.namelength": 2,
              "key.nameline": 252,
              "key.nameoffset": 17142,
              "key.offset": 17138,
              "key.parsed_declaration": "let qr = value.quotientAndRemainder(dividingBy: rhs)",
              "key.parsed_scope.end": 252,
              "key.parsed_scope.start": 252,
              "key.typename": "(quotient: Int, remainder: Int)",
              "key.typeusr": "$sSi8quotient_Si9remaindertD",
              "key.usr": "s:7Rubicon9ShadowIntV20quotientAndRemainder10dividingByAC0D0_AC9remaindertSi_tF2qrL_SiAF_SiAGtvp"
            }
          ],
          "key.typename": "(ShadowInt) -> (Int) -> (quotient: ShadowInt, remainder: ShadowInt)",
          "key.typeusr": "$s10dividingBy7Rubicon9ShadowIntV8quotient_AD9remaindertSi_tcD",
          "key.usr": "s:7Rubicon9ShadowIntV20quotientAndRemainder10dividingByAC0D0_AC9remaindertSi_tF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public func hash(into hasher: inout <Type usr=\"s:s6HasherV\">Hasher<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 256,
              "key.offset": 17278
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 256,
              "key.offset": 17267
            }
          ],
          "key.bodycolumn": 61,
          "key.bodylength": 23,
          "key.bodyline": 256,
          "key.bodyoffset": 17323,
          "key.column": 23,
          "key.doc.declaration": "func hash(into hasher: inout Hasher)",
          "key.doc.discussion": [
            {
              "Para": "Implement this method to conform to the `Hashable` protocol. The components used for hashing must be the same as the components compared in your type’s `==` operator implementation. Call `hasher.combine(_:)` with each of these components."
            },
            {
              "Important": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>hash(into:)<\/Name><USR>s:SH4hash4intoys6HasherVz_tF<\/USR><Declaration>func hash(into hasher: inout Hasher)<\/Declaration><CommentParts><Abstract><Para>Hashes the essential components of this value by feeding them into the given hasher.<\/Para><\/Abstract><Parameters><Parameter><Name>hasher<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The hasher to use when combining the components of this instance.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Implement this method to conform to the <codeVoice>Hashable<\/codeVoice> protocol. The components used for hashing must be the same as the components compared in your type’s <codeVoice>==<\/codeVoice> operator implementation. Call <codeVoice>hasher.combine(_:)<\/codeVoice> with each of these components.<\/Para><Important><Para>Never call <codeVoice>finalize()<\/codeVoice> on <codeVoice>hasher<\/codeVoice>. Doing so may become a compile-time error in the future.<\/Para><\/Important><Note><Para>This documentation comment was inherited from <codeVoice>Hashable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "hash(into:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The hasher to use when combining the components of this instance."
                }
              ],
              "name": "hasher"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Collections\/ShadowInt.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hash<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>into<\/decl.var.parameter.argument_label> <decl.var.parameter.name>hasher<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:s6HasherV\">Hasher<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 62,
          "key.line": 256,
          "key.name": "hash(into:)",
          "key.namecolumn": 28,
          "key.namelength": 31,
          "key.nameline": 256,
          "key.nameoffset": 17290,
          "key.offset": 17285,
          "key.overrides": [
            {
              "key.usr": "s:SH4hash4intoys6HasherVz_tF"
            }
          ],
          "key.parsed_declaration": "@inlinable public func hash(into hasher: inout Hasher)",
          "key.parsed_scope.end": 256,
          "key.parsed_scope.start": 256,
          "key.substructure": [
          ],
          "key.typename": "(ShadowInt) -> (inout Hasher) -> ()",
          "key.typeusr": "$s4intoys6HasherVz_tcD",
          "key.usr": "s:SH4hash4intoys6HasherVz_tF"
        }
      ],
      "key.typename": "ShadowInt.Type",
      "key.typeusr": "$s7Rubicon9ShadowIntVmD",
      "key.usr": "s:7Rubicon9ShadowIntV"
    }
  ]
}
