{
  "key.column": 1,
  "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
  "key.length": 25331,
  "key.line": 1,
  "key.offset": 0,
  "key.substructure": [
    {
      "key.accessibility": "source.lang.swift.accessibility.internal",
      "key.annotated_decl": "<Declaration>@usableFromInline let InputBufferSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
      "key.attributes": [
        {
          "key.attribute": "source.decl.attribute.usableFromInline",
          "key.column": 1,
          "key.length": 17,
          "key.line": 26,
          "key.offset": 1133
        }
      ],
      "key.column": 19,
      "key.doc.comment": "",
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
      "key.fully_annotated_decl": "<decl.var.global><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>InputBufferSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.global>",
      "key.kind": "source.lang.swift.decl.var.global",
      "key.length": 35,
      "key.line": 26,
      "key.name": "InputBufferSize",
      "key.namecolumn": 23,
      "key.namelength": 15,
      "key.nameline": 26,
      "key.nameoffset": 1155,
      "key.offset": 1151,
      "key.parsed_declaration": "@usableFromInline let InputBufferSize:    Int = 1_024",
      "key.parsed_scope.end": 26,
      "key.parsed_scope.start": 26,
      "key.typename": "Int",
      "key.typeusr": "$sSiD",
      "key.usr": "s:7Rubicon15InputBufferSizeSivp"
    },
    {
      "key.accessibility": "source.lang.swift.accessibility.internal",
      "key.annotated_decl": "<Declaration>@usableFromInline let MaxInputBufferSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
      "key.attributes": [
        {
          "key.attribute": "source.decl.attribute.usableFromInline",
          "key.column": 1,
          "key.length": 17,
          "key.line": 27,
          "key.offset": 1196
        }
      ],
      "key.column": 19,
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
      "key.fully_annotated_decl": "<decl.var.global><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>MaxInputBufferSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.global>",
      "key.kind": "source.lang.swift.decl.var.global",
      "key.length": 36,
      "key.line": 27,
      "key.name": "MaxInputBufferSize",
      "key.namecolumn": 23,
      "key.namelength": 18,
      "key.nameline": 27,
      "key.nameoffset": 1218,
      "key.offset": 1214,
      "key.parsed_declaration": "@usableFromInline let MaxInputBufferSize: Int = 65_536",
      "key.parsed_scope.end": 27,
      "key.parsed_scope.start": 27,
      "key.typename": "Int",
      "key.typeusr": "$sSiD",
      "key.usr": "s:7Rubicon18MaxInputBufferSizeSivp"
    },
    {
      "key.accessibility": "source.lang.swift.accessibility.internal",
      "key.annotated_decl": "<Declaration>@usableFromInline let ReadBufferSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
      "key.attributes": [
        {
          "key.attribute": "source.decl.attribute.usableFromInline",
          "key.column": 1,
          "key.length": 17,
          "key.line": 28,
          "key.offset": 1259
        }
      ],
      "key.column": 19,
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
      "key.fully_annotated_decl": "<decl.var.global><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>ReadBufferSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.global>",
      "key.kind": "source.lang.swift.decl.var.global",
      "key.length": 35,
      "key.line": 28,
      "key.name": "ReadBufferSize",
      "key.namecolumn": 23,
      "key.namelength": 14,
      "key.nameline": 28,
      "key.nameoffset": 1281,
      "key.offset": 1277,
      "key.parsed_declaration": "@usableFromInline let ReadBufferSize:     Int = 4_096",
      "key.parsed_scope.end": 28,
      "key.parsed_scope.start": 28,
      "key.typename": "Int",
      "key.typeusr": "$sSiD",
      "key.usr": "s:7Rubicon14ReadBufferSizeSivp"
    },
    {
      "key.accessibility": "source.lang.swift.accessibility.open",
      "key.annotated_decl": "<Declaration>open class MarkInputStream : <Type usr=\"c:objc(cs)NSInputStream\">InputStream<\/Type><\/Declaration>",
      "key.attributes": [
        {
          "key.attribute": "source.decl.attribute.open",
          "key.column": 1,
          "key.length": 4,
          "key.line": 34,
          "key.offset": 1651
        }
      ],
      "key.bodycolumn": 42,
      "key.bodylength": 23637,
      "key.bodyline": 34,
      "key.bodyoffset": 1692,
      "key.column": 6,
      "key.doc.column": 12,
      "key.doc.comment": "An <code>[input stream](https:\/\/developer.apple.com\/documentation\/foundation\/inputstream)<\/code> that you can\nmark places in with a call to `markSet()` and to return to with a call to `markRelease()`.",
      "key.doc.declaration": "open class MarkInputStream : InputStream",
      "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
      "key.doc.full_as_xml": "<Class file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"34\" column=\"12\"><Name>MarkInputStream<\/Name><USR>c:@M@Rubicon@objc(cs)MarkInputStream<\/USR><Declaration>open class MarkInputStream : InputStream<\/Declaration><CommentParts><Abstract><Para>An <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/developer.apple.com\/documentation\/foundation\/inputstream\">input stream<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> that you can mark places in with a call to <codeVoice>markSet()<\/codeVoice> and to return to with a call to <codeVoice>markRelease()<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
      "key.doc.line": 34,
      "key.doc.name": "MarkInputStream",
      "key.doc.type": "Class",
      "key.doccolumn": 1,
      "key.doclength": 213,
      "key.docline": 31,
      "key.docoffset": 1438,
      "key.elements": [
        {
          "key.column": 29,
          "key.kind": "source.lang.swift.structure.elem.typeref",
          "key.length": 11,
          "key.line": 34,
          "key.offset": 1679
        }
      ],
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
      "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>MarkInputStream<\/decl.name> : <ref.class usr=\"c:objc(cs)NSInputStream\">InputStream<\/ref.class><\/decl.class>",
      "key.inheritedtypes": [
        {
          "key.name": "InputStream"
        }
      ],
      "key.kind": "source.lang.swift.decl.class",
      "key.length": 23674,
      "key.line": 34,
      "key.name": "MarkInputStream",
      "key.namecolumn": 12,
      "key.namelength": 15,
      "key.nameline": 34,
      "key.nameoffset": 1662,
      "key.offset": 1656,
      "key.parsed_declaration": "open class MarkInputStream: InputStream",
      "key.parsed_scope.end": 490,
      "key.parsed_scope.start": 34,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open override var hasBytesAvailable: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.override",
              "key.column": 10,
              "key.length": 8,
              "key.line": 41,
              "key.offset": 2112
            },
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 41,
              "key.offset": 2107
            }
          ],
          "key.bodycolumn": 76,
          "key.bodylength": 57,
          "key.bodyline": 41,
          "key.bodyoffset": 2178,
          "key.column": 23,
          "key.doc.column": 27,
          "key.doc.comment": "A Boolean value that indicates whether the receiver has bytes available to read. `true` if the receiver\nhas bytes available to read, otherwise `false`. May also return `true` if a read must be attempted in\norder to determine the availability of bytes.",
          "key.doc.declaration": "open override var hasBytesAvailable: Bool { get }",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Other file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"41\" column=\"27\"><Name>hasBytesAvailable<\/Name><USR>c:@M@Rubicon@objc(cs)MarkInputStream(py)hasBytesAvailable<\/USR><Declaration>open override var hasBytesAvailable: Bool { get }<\/Declaration><CommentParts><Abstract><Para>A Boolean value that indicates whether the receiver has bytes available to read. <codeVoice>true<\/codeVoice> if the receiver has bytes available to read, otherwise <codeVoice>false<\/codeVoice>. May also return <codeVoice>true<\/codeVoice> if a read must be attempted in order to determine the availability of bytes.<\/Para><\/Abstract><\/CommentParts><\/Other>",
          "key.doc.line": 41,
          "key.doc.name": "hasBytesAvailable",
          "key.doc.type": "Other",
          "key.doccolumn": 5,
          "key.doclength": 280,
          "key.docline": 37,
          "key.docoffset": 1823,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>hasBytesAvailable<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 111,
          "key.line": 41,
          "key.name": "hasBytesAvailable",
          "key.namecolumn": 27,
          "key.namelength": 17,
          "key.nameline": 41,
          "key.nameoffset": 2129,
          "key.offset": 2125,
          "key.overrides": [
            {
              "key.usr": "c:objc(cs)NSInputStream(py)hasBytesAvailable"
            }
          ],
          "key.parsed_declaration": "open override     var hasBytesAvailable: Bool",
          "key.parsed_scope.end": 41,
          "key.parsed_scope.start": 41,
          "key.typename": "Bool",
          "key.typeusr": "$sSbD",
          "key.usr": "c:@M@Rubicon@objc(cs)MarkInputStream(py)hasBytesAvailable"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open override var streamStatus: <Type usr=\"c:objc(cs)NSStream\">Stream<\/Type>.<Type usr=\"c:@E@NSStreamStatus\">Status<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.override",
              "key.column": 10,
              "key.length": 8,
              "key.line": 45,
              "key.offset": 2410
            },
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 45,
              "key.offset": 2405
            }
          ],
          "key.bodycolumn": 76,
          "key.bodylength": 57,
          "key.bodyline": 45,
          "key.bodyoffset": 2476,
          "key.column": 23,
          "key.doc.column": 27,
          "key.doc.comment": "Returns the receiver’s status.",
          "key.doc.declaration": "open override var streamStatus: Stream.Status { get }",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Other file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"45\" column=\"27\"><Name>streamStatus<\/Name><USR>c:@M@Rubicon@objc(cs)MarkInputStream(py)streamStatus<\/USR><Declaration>open override var streamStatus: Stream.Status { get }<\/Declaration><CommentParts><Abstract><Para>Returns the receiver’s status.<\/Para><\/Abstract><\/CommentParts><\/Other>",
          "key.doc.line": 45,
          "key.doc.name": "streamStatus",
          "key.doc.type": "Other",
          "key.doccolumn": 5,
          "key.doclength": 45,
          "key.docline": 43,
          "key.docoffset": 2356,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>streamStatus<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSStream\">Stream<\/ref.class>.<ref.enum usr=\"c:@E@NSStreamStatus\">Status<\/ref.enum><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 111,
          "key.line": 45,
          "key.name": "streamStatus",
          "key.namecolumn": 27,
          "key.namelength": 12,
          "key.nameline": 45,
          "key.nameoffset": 2427,
          "key.offset": 2423,
          "key.overrides": [
            {
              "key.usr": "c:objc(cs)NSStream(py)streamStatus"
            }
          ],
          "key.parsed_declaration": "open override     var streamStatus:      Stream.Status",
          "key.parsed_scope.end": 45,
          "key.parsed_scope.start": 45,
          "key.typename": "Stream.Status",
          "key.typeusr": "$sSo14NSStreamStatusVD",
          "key.usr": "c:@M@Rubicon@objc(cs)MarkInputStream(py)streamStatus"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open override var streamError: <Type usr=\"s:s5ErrorP\">Error<\/Type>? { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.override",
              "key.column": 10,
              "key.length": 8,
              "key.line": 49,
              "key.offset": 2732
            },
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 49,
              "key.offset": 2727
            }
          ],
          "key.bodycolumn": 76,
          "key.bodylength": 57,
          "key.bodyline": 49,
          "key.bodyoffset": 2798,
          "key.column": 23,
          "key.doc.column": 27,
          "key.doc.comment": "Returns an NSError object representing the stream error.",
          "key.doc.declaration": "open override var streamError: Error? { get }",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Other file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"49\" column=\"27\"><Name>streamError<\/Name><USR>c:@M@Rubicon@objc(cs)MarkInputStream(py)streamError<\/USR><Declaration>open override var streamError: Error? { get }<\/Declaration><CommentParts><Abstract><Para>Returns an NSError object representing the stream error.<\/Para><\/Abstract><\/CommentParts><\/Other>",
          "key.doc.line": 49,
          "key.doc.name": "streamError",
          "key.doc.type": "Other",
          "key.doccolumn": 5,
          "key.doclength": 69,
          "key.docline": 47,
          "key.docoffset": 2654,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>streamError<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 111,
          "key.line": 49,
          "key.name": "streamError",
          "key.namecolumn": 27,
          "key.namelength": 11,
          "key.nameline": 49,
          "key.nameoffset": 2749,
          "key.offset": 2745,
          "key.overrides": [
            {
              "key.usr": "c:objc(cs)NSStream(py)streamError"
            }
          ],
          "key.parsed_declaration": "open override     var streamError:       Error?",
          "key.parsed_scope.end": 49,
          "key.parsed_scope.start": 49,
          "key.typename": "Error?",
          "key.typeusr": "$ss5Error_pSgD",
          "key.usr": "c:@M@Rubicon@objc(cs)MarkInputStream(py)streamError"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open var markCount: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 53,
              "key.offset": 3040
            }
          ],
          "key.bodycolumn": 76,
          "key.bodylength": 57,
          "key.bodyline": 53,
          "key.bodyoffset": 3111,
          "key.column": 23,
          "key.doc.column": 27,
          "key.doc.comment": "The number of marked positions for this stream.",
          "key.doc.declaration": "open var markCount: Int { get }",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Other file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"53\" column=\"27\"><Name>markCount<\/Name><USR>s:7Rubicon15MarkInputStreamC9markCountSivp<\/USR><Declaration>open var markCount: Int { get }<\/Declaration><CommentParts><Abstract><Para>The number of marked positions for this stream.<\/Para><\/Abstract><\/CommentParts><\/Other>",
          "key.doc.line": 53,
          "key.doc.name": "markCount",
          "key.doc.type": "Other",
          "key.doccolumn": 5,
          "key.doclength": 60,
          "key.docline": 51,
          "key.docoffset": 2976,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>markCount<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 111,
          "key.line": 53,
          "key.name": "markCount",
          "key.namecolumn": 27,
          "key.namelength": 9,
          "key.nameline": 53,
          "key.nameoffset": 3062,
          "key.offset": 3058,
          "key.parsed_declaration": "open              var markCount:         Int",
          "key.parsed_scope.end": 53,
          "key.parsed_scope.start": 53,
          "key.typename": "Int",
          "key.typeusr": "$sSiD",
          "key.usr": "s:7Rubicon15MarkInputStreamC9markCountSivp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline var buffer: <Type usr=\"s:7Rubicon14RingByteBufferC\">RingByteBuffer<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.column": 5,
              "key.length": 17,
              "key.line": 55,
              "key.offset": 3175
            }
          ],
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>buffer<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Rubicon14RingByteBufferC\">RingByteBuffer<\/ref.class><\/decl.var.type><\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 102,
          "key.line": 55,
          "key.name": "buffer",
          "key.namecolumn": 27,
          "key.namelength": 6,
          "key.nameline": 55,
          "key.nameoffset": 3197,
          "key.offset": 3193,
          "key.parsed_declaration": "@usableFromInline var buffer:            RingByteBuffer               = RingByteBuffer(initialCapacity: InputBufferSize)",
          "key.parsed_scope.end": 55,
          "key.parsed_scope.start": 55,
          "key.setter_accessibility": "source.lang.swift.accessibility.internal",
          "key.typename": "RingByteBuffer",
          "key.typeusr": "$s7Rubicon14RingByteBufferCD",
          "key.usr": "s:7Rubicon15MarkInputStreamC6bufferAA14RingByteBufferCvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline var lock: <Type usr=\"s:7Rubicon11ConditionalC\">Conditional<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.column": 5,
              "key.length": 17,
              "key.line": 56,
              "key.offset": 3300
            }
          ],
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>lock<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Rubicon11ConditionalC\">Conditional<\/ref.class><\/decl.var.type><\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 67,
          "key.line": 56,
          "key.name": "lock",
          "key.namecolumn": 27,
          "key.namelength": 4,
          "key.nameline": 56,
          "key.nameoffset": 3322,
          "key.offset": 3318,
          "key.parsed_declaration": "@usableFromInline var lock:              Conditional                  = Conditional()",
          "key.parsed_scope.end": 56,
          "key.parsed_scope.start": 56,
          "key.setter_accessibility": "source.lang.swift.accessibility.internal",
          "key.typename": "Conditional",
          "key.typeusr": "$s7Rubicon11ConditionalCD",
          "key.usr": "s:7Rubicon15MarkInputStreamC4lockAA11ConditionalCvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline var mstk: [<Type usr=\"s:7Rubicon14RingByteBufferC\">RingByteBuffer<\/Type>]<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.column": 5,
              "key.length": 17,
              "key.line": 57,
              "key.offset": 3390
            }
          ],
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>mstk<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:7Rubicon14RingByteBufferC\">RingByteBuffer<\/ref.class>]<\/decl.var.type><\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 56,
          "key.line": 57,
          "key.name": "mstk",
          "key.namecolumn": 27,
          "key.namelength": 4,
          "key.nameline": 57,
          "key.nameoffset": 3412,
          "key.offset": 3408,
          "key.parsed_declaration": "@usableFromInline var mstk:              [RingByteBuffer]             = []",
          "key.parsed_scope.end": 57,
          "key.parsed_scope.start": 57,
          "key.setter_accessibility": "source.lang.swift.accessibility.internal",
          "key.typename": "[RingByteBuffer]",
          "key.typeusr": "$sSay7Rubicon14RingByteBufferCGD",
          "key.usr": "s:7Rubicon15MarkInputStreamC4mstkSayAA14RingByteBufferCGvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline var thread: <Type usr=\"c:objc(cs)NSThread\">Thread<\/Type>?<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.column": 5,
              "key.length": 17,
              "key.line": 58,
              "key.offset": 3469
            }
          ],
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>thread<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSThread\">Thread<\/ref.class>?<\/decl.var.type><\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 57,
          "key.line": 58,
          "key.name": "thread",
          "key.namecolumn": 27,
          "key.namelength": 6,
          "key.nameline": 58,
          "key.nameoffset": 3491,
          "key.offset": 3487,
          "key.parsed_declaration": "@usableFromInline var thread:            Thread?                      = nil",
          "key.parsed_scope.end": 58,
          "key.parsed_scope.start": 58,
          "key.setter_accessibility": "source.lang.swift.accessibility.internal",
          "key.typename": "Thread?",
          "key.typeusr": "$sSo8NSThreadCSgD",
          "key.usr": "s:7Rubicon15MarkInputStreamC6threadSo8NSThreadCSgvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline var error: <Type usr=\"s:s5ErrorP\">Error<\/Type>?<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.column": 5,
              "key.length": 17,
              "key.line": 59,
              "key.offset": 3549
            }
          ],
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>error<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>?<\/decl.var.type><\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 57,
          "key.line": 59,
          "key.name": "error",
          "key.namecolumn": 27,
          "key.namelength": 5,
          "key.nameline": 59,
          "key.nameoffset": 3571,
          "key.offset": 3567,
          "key.parsed_declaration": "@usableFromInline var error:             Error?                       = nil",
          "key.parsed_scope.end": 59,
          "key.parsed_scope.start": 59,
          "key.setter_accessibility": "source.lang.swift.accessibility.internal",
          "key.typename": "Error?",
          "key.typeusr": "$ss5Error_pSgD",
          "key.usr": "s:7Rubicon15MarkInputStreamC5errors5Error_pSgvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline var readBuffer: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;?<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.column": 5,
              "key.length": 17,
              "key.line": 60,
              "key.offset": 3629
            }
          ],
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>readBuffer<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;?<\/decl.var.type><\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 57,
          "key.line": 60,
          "key.name": "readBuffer",
          "key.namecolumn": 27,
          "key.namelength": 10,
          "key.nameline": 60,
          "key.nameoffset": 3651,
          "key.offset": 3647,
          "key.parsed_declaration": "@usableFromInline var readBuffer:        UnsafeMutablePointer<UInt8>? = nil",
          "key.parsed_scope.end": 60,
          "key.parsed_scope.start": 60,
          "key.setter_accessibility": "source.lang.swift.accessibility.internal",
          "key.typename": "UnsafeMutablePointer<UInt8>?",
          "key.typeusr": "$sSpys5UInt8VGSgD",
          "key.usr": "s:7Rubicon15MarkInputStreamC10readBufferSpys5UInt8VGSgvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline var status: <Type usr=\"c:objc(cs)NSStream\">Stream<\/Type>.<Type usr=\"c:@E@NSStreamStatus\">Status<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.column": 5,
              "key.length": 17,
              "key.line": 61,
              "key.offset": 3709
            }
          ],
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>status<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSStream\">Stream<\/ref.class>.<ref.enum usr=\"c:@E@NSStreamStatus\">Status<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 62,
          "key.line": 61,
          "key.name": "status",
          "key.namecolumn": 27,
          "key.namelength": 6,
          "key.nameline": 61,
          "key.nameoffset": 3731,
          "key.offset": 3727,
          "key.parsed_declaration": "@usableFromInline var status:            Stream.Status                = .notOpen",
          "key.parsed_scope.end": 61,
          "key.parsed_scope.start": 61,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:So8NSStreamC7RubiconE6status2inSbSo0A6StatusVd_tF\">status(in:)<\/RelatedName>"
            }
          ],
          "key.setter_accessibility": "source.lang.swift.accessibility.internal",
          "key.typename": "Stream.Status",
          "key.typeusr": "$sSo14NSStreamStatusVD",
          "key.usr": "s:7Rubicon15MarkInputStreamC6statusSo14NSStreamStatusVvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline var isRunning: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.column": 5,
              "key.length": 17,
              "key.line": 62,
              "key.offset": 3794
            }
          ],
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isRunning<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 59,
          "key.line": 62,
          "key.name": "isRunning",
          "key.namecolumn": 27,
          "key.namelength": 9,
          "key.nameline": 62,
          "key.nameoffset": 3816,
          "key.offset": 3812,
          "key.parsed_declaration": "@usableFromInline var isRunning:         Bool                         = false",
          "key.parsed_scope.end": 62,
          "key.parsed_scope.start": 62,
          "key.setter_accessibility": "source.lang.swift.accessibility.internal",
          "key.typename": "Bool",
          "key.typeusr": "$sSbD",
          "key.usr": "s:7Rubicon15MarkInputStreamC9isRunningSbvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline let autoClose: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.column": 5,
              "key.length": 17,
              "key.line": 63,
              "key.offset": 3876
            }
          ],
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>autoClose<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 27,
          "key.line": 63,
          "key.name": "autoClose",
          "key.namecolumn": 27,
          "key.namelength": 9,
          "key.nameline": 63,
          "key.nameoffset": 3898,
          "key.offset": 3894,
          "key.parsed_declaration": "@usableFromInline let autoClose:         Bool",
          "key.parsed_scope.end": 63,
          "key.parsed_scope.start": 63,
          "key.typename": "Bool",
          "key.typeusr": "$sSbD",
          "key.usr": "s:7Rubicon15MarkInputStreamC9autoCloseSbvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline let inputStream: <Type usr=\"c:objc(cs)NSInputStream\">InputStream<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.column": 5,
              "key.length": 17,
              "key.line": 64,
              "key.offset": 3926
            }
          ],
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>inputStream<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSInputStream\">InputStream<\/ref.class><\/decl.var.type><\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 34,
          "key.line": 64,
          "key.name": "inputStream",
          "key.namecolumn": 27,
          "key.namelength": 11,
          "key.nameline": 64,
          "key.nameoffset": 3948,
          "key.offset": 3944,
          "key.parsed_declaration": "@usableFromInline let inputStream:       InputStream",
          "key.parsed_scope.end": 64,
          "key.parsed_scope.start": 64,
          "key.typename": "InputStream",
          "key.typeusr": "$sSo13NSInputStreamCD",
          "key.usr": "s:7Rubicon15MarkInputStreamC05inputD0So07NSInputD0Cvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable var isOpen: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 66,
              "key.offset": 3984
            }
          ],
          "key.bodycolumn": 76,
          "key.bodylength": 106,
          "key.bodyline": 66,
          "key.bodyoffset": 4055,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isOpen<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 160,
          "key.line": 66,
          "key.name": "isOpen",
          "key.namecolumn": 27,
          "key.namelength": 6,
          "key.nameline": 66,
          "key.nameoffset": 4006,
          "key.offset": 4002,
          "key.parsed_declaration": "@inlinable        var isOpen:            Bool",
          "key.parsed_scope.end": 66,
          "key.parsed_scope.start": 66,
          "key.typename": "Bool",
          "key.typeusr": "$sSbD",
          "key.usr": "s:7Rubicon15MarkInputStreamC6isOpenSbvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable var effStatus: <Type usr=\"c:objc(cs)NSStream\">Stream<\/Type>.<Type usr=\"c:@E@NSStreamStatus\">Status<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 67,
              "key.offset": 4167
            }
          ],
          "key.bodycolumn": 76,
          "key.bodylength": 106,
          "key.bodyline": 67,
          "key.bodyoffset": 4238,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>effStatus<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSStream\">Stream<\/ref.class>.<ref.enum usr=\"c:@E@NSStreamStatus\">Status<\/ref.enum><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 160,
          "key.line": 67,
          "key.name": "effStatus",
          "key.namecolumn": 27,
          "key.namelength": 9,
          "key.nameline": 67,
          "key.nameoffset": 4189,
          "key.offset": 4185,
          "key.parsed_declaration": "@inlinable        var effStatus:         Stream.Status",
          "key.parsed_scope.end": 67,
          "key.parsed_scope.start": 67,
          "key.typename": "Stream.Status",
          "key.typeusr": "$sSo14NSStreamStatusVD",
          "key.usr": "s:7Rubicon15MarkInputStreamC9effStatusSo08NSStreamF0Vvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable var inputStreamIsOpen: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 68,
              "key.offset": 4350
            }
          ],
          "key.bodycolumn": 76,
          "key.bodylength": 106,
          "key.bodyline": 68,
          "key.bodyoffset": 4421,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>inputStreamIsOpen<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 160,
          "key.line": 68,
          "key.name": "inputStreamIsOpen",
          "key.namecolumn": 27,
          "key.namelength": 17,
          "key.nameline": 68,
          "key.nameoffset": 4372,
          "key.offset": 4368,
          "key.parsed_declaration": "@inlinable        var inputStreamIsOpen: Bool",
          "key.parsed_scope.end": 68,
          "key.parsed_scope.start": 68,
          "key.typename": "Bool",
          "key.typeusr": "$sSbD",
          "key.usr": "s:7Rubicon15MarkInputStreamC05inputD6IsOpenSbvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public init(inputStream: <Type usr=\"c:objc(cs)NSInputStream\">InputStream<\/Type>, autoClose: <Type usr=\"s:Sb\">Bool<\/Type> = true)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 82,
              "key.offset": 5263
            }
          ],
          "key.bodycolumn": 68,
          "key.bodylength": 112,
          "key.bodyline": 82,
          "key.bodyoffset": 5326,
          "key.column": 12,
          "key.doc.column": 12,
          "key.doc.comment": "Main initializer. Initializes this stream with the backing stream.\n\n- Parameters:\n  - inputStream: The backing input stream.\n  - maxMarkLength: The maximum distance the read pointer will be allowed to get from the mark pointer.\n                   Once the read pointer moves this many bytes past the mark pointer then the mark pointer\n                   will be moved to keep up.\n  - autoClose: If `false` the backing stream will NOT be closed when this stream is closed or destroyed.\n               The default is `true`.",
          "key.doc.declaration": "public init(inputStream: InputStream, autoClose: Bool = true)",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"82\" column=\"12\"><Name>init(inputStream:autoClose:)<\/Name><USR>s:7Rubicon15MarkInputStreamC05inputD09autoCloseACSo07NSInputD0C_Sbtcfc<\/USR><Declaration>public init(inputStream: InputStream, autoClose: Bool = true)<\/Declaration><CommentParts><Abstract><Para>Main initializer. Initializes this stream with the backing stream.<\/Para><\/Abstract><Parameters><Parameter><Name>inputStream<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The backing input stream.<\/Para><\/Discussion><\/Parameter><Parameter><Name>maxMarkLength<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The maximum distance the read pointer will be allowed to get from the mark pointer. Once the read pointer moves this many bytes past the mark pointer then the mark pointer will be moved to keep up.<\/Para><\/Discussion><\/Parameter><Parameter><Name>autoClose<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>If <codeVoice>false<\/codeVoice> the backing stream will NOT be closed when this stream is closed or destroyed. The default is <codeVoice>true<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
          "key.doc.line": 82,
          "key.doc.name": "init(inputStream:autoClose:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The backing input stream."
                }
              ],
              "name": "inputStream"
            },
            {
              "discussion": [
                {
                  "Para": "The maximum distance the read pointer will be allowed to get from the mark pointer. Once the read pointer moves this many bytes past the mark pointer then the mark pointer will be moved to keep up."
                }
              ],
              "name": "maxMarkLength"
            },
            {
              "discussion": [
                {
                  "Para": "If `false` the backing stream will NOT be closed when this stream is closed or destroyed. The default is `true`."
                }
              ],
              "name": "autoClose"
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 599,
          "key.docline": 72,
          "key.docoffset": 4660,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>inputStream<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSInputStream\">InputStream<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>autoClose<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = true<\/decl.var.parameter>)<\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 169,
          "key.line": 82,
          "key.name": "init(inputStream:autoClose:)",
          "key.namecolumn": 12,
          "key.namelength": 54,
          "key.nameline": 82,
          "key.nameoffset": 5270,
          "key.offset": 5270,
          "key.parsed_declaration": "public init(inputStream: InputStream, autoClose: Bool = true)",
          "key.parsed_scope.end": 86,
          "key.parsed_scope.start": 82,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithData:\">init(data:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC4data03maxB6LengthAC10Foundation4DataV_Sitcfc\">init(data:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithURL:\">init(url:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC3url03maxB6LengthACSg10Foundation3URLV_Sitcfc\">init(url:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithFileAtPath:\">init(fileAtPath:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC10fileAtPath03maxB6LengthACSgSS_Sitcfc\">init(fileAtPath:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream.Type) -> (InputStream, Bool) -> MarkInputStream",
          "key.typeusr": "$s11inputStream9autoClose7Rubicon09MarkInputB0CSo07NSInputB0C_SbtcD",
          "key.usr": "s:7Rubicon15MarkInputStreamC05inputD09autoCloseACSo07NSInputD0C_Sbtcfc"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public override convenience init(data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.convenience",
              "key.column": 21,
              "key.length": 11,
              "key.line": 95,
              "key.offset": 5926
            },
            {
              "key.attribute": "source.decl.attribute.override",
              "key.column": 12,
              "key.length": 8,
              "key.line": 95,
              "key.offset": 5917
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 95,
              "key.offset": 5910
            }
          ],
          "key.bodycolumn": 51,
          "key.bodylength": 78,
          "key.bodyline": 95,
          "key.bodyoffset": 5956,
          "key.column": 33,
          "key.doc.column": 33,
          "key.doc.comment": "Initializes and returns an `MarkInputStream` object for reading from a given\n<code>[Data](https:\/\/developer.apple.com\/documentation\/foundation\/data\/)<\/code> object. The stream must be\nopened before it can be used.\n\n- Parameter data: The data object from which to read. The contents of data are copied.",
          "key.doc.declaration": "public override convenience init(data: Data)",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"95\" column=\"33\"><Name>init(data:)<\/Name><USR>c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithData:<\/USR><Declaration>public override convenience init(data: Data)<\/Declaration><CommentParts><Abstract><Para>Initializes and returns an <codeVoice>MarkInputStream<\/codeVoice> object for reading from a given <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/developer.apple.com\/documentation\/foundation\/data\/\">Data<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> object. The stream must be opened before it can be used.<\/Para><\/Abstract><Parameters><Parameter><Name>data<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The data object from which to read. The contents of data are copied.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
          "key.doc.line": 95,
          "key.doc.name": "init(data:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The data object from which to read. The contents of data are copied."
                }
              ],
              "name": "data"
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 346,
          "key.docline": 89,
          "key.docoffset": 5560,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>data<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 97,
          "key.line": 95,
          "key.name": "init(data:)",
          "key.namecolumn": 33,
          "key.namelength": 16,
          "key.nameline": 95,
          "key.nameoffset": 5938,
          "key.offset": 5938,
          "key.overrides": [
            {
              "key.usr": "c:objc(cs)NSInputStream(im)initWithData:"
            }
          ],
          "key.parsed_declaration": "public override convenience init(data: Data)",
          "key.parsed_scope.end": 97,
          "key.parsed_scope.start": 95,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC05inputD09autoCloseACSo07NSInputD0C_Sbtcfc\">init(inputStream:autoClose:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC4data03maxB6LengthAC10Foundation4DataV_Sitcfc\">init(data:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithURL:\">init(url:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC3url03maxB6LengthACSg10Foundation3URLV_Sitcfc\">init(url:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithFileAtPath:\">init(fileAtPath:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC10fileAtPath03maxB6LengthACSgSS_Sitcfc\">init(fileAtPath:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream.Type) -> (Data) -> MarkInputStream",
          "key.typeusr": "$s4data7Rubicon15MarkInputStreamC10Foundation4DataV_tcD",
          "key.usr": "c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithData:"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public convenience init(data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>, maxMarkLength: <Type usr=\"s:Si\">Int<\/Type> = Int.max)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.convenience",
              "key.column": 12,
              "key.length": 11,
              "key.line": 110,
              "key.offset": 6806
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 110,
              "key.offset": 6799
            }
          ],
          "key.bodycolumn": 72,
          "key.bodylength": 78,
          "key.bodyline": 110,
          "key.bodyoffset": 6866,
          "key.column": 24,
          "key.doc.column": 24,
          "key.doc.comment": "Initializes and returns an `MarkInputStream` object for reading from a given\n<code>[Data](https:\/\/developer.apple.com\/documentation\/foundation\/data\/)<\/code> object. The stream must be\nopened before it can be used.\n\n- Parameters:\n  - data: The data object from which to read. The contents of data are copied.\n  - maxMarkLength: The maximum distance the read pointer will be allowed to get from the mark pointer.\n                   Once the read pointer moves this many bytes past the mark pointer then the mark pointer\n                   will be moved to keep up.",
          "key.doc.declaration": "public convenience init(data: Data, maxMarkLength: Int = Int.max)",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"110\" column=\"24\"><Name>init(data:maxMarkLength:)<\/Name><USR>s:7Rubicon15MarkInputStreamC4data03maxB6LengthAC10Foundation4DataV_Sitcfc<\/USR><Declaration>public convenience init(data: Data, maxMarkLength: Int = Int.max)<\/Declaration><CommentParts><Abstract><Para>Initializes and returns an <codeVoice>MarkInputStream<\/codeVoice> object for reading from a given <rawHTML><![CDATA[<code>]]><\/rawHTML><Link href=\"https:\/\/developer.apple.com\/documentation\/foundation\/data\/\">Data<\/Link><rawHTML><![CDATA[<\/code>]]><\/rawHTML> object. The stream must be opened before it can be used.<\/Para><\/Abstract><Parameters><Parameter><Name>data<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The data object from which to read. The contents of data are copied.<\/Para><\/Discussion><\/Parameter><Parameter><Name>maxMarkLength<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The maximum distance the read pointer will be allowed to get from the mark pointer. Once the read pointer moves this many bytes past the mark pointer then the mark pointer will be moved to keep up.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
          "key.doc.line": 110,
          "key.doc.name": "init(data:maxMarkLength:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The data object from which to read. The contents of data are copied."
                }
              ],
              "name": "data"
            },
            {
              "discussion": [
                {
                  "Para": "The maximum distance the read pointer will be allowed to get from the mark pointer. Once the read pointer moves this many bytes past the mark pointer then the mark pointer will be moved to keep up."
                }
              ],
              "name": "maxMarkLength"
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 639,
          "key.docline": 100,
          "key.docoffset": 6156,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>data<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxMarkLength<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = Int.max<\/decl.var.parameter>)<\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 127,
          "key.line": 110,
          "key.name": "init(data:maxMarkLength:)",
          "key.namecolumn": 24,
          "key.namelength": 46,
          "key.nameline": 110,
          "key.nameoffset": 6818,
          "key.offset": 6818,
          "key.parsed_declaration": "public convenience init(data: Data, maxMarkLength: Int = Int.max)",
          "key.parsed_scope.end": 112,
          "key.parsed_scope.start": 110,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC05inputD09autoCloseACSo07NSInputD0C_Sbtcfc\">init(inputStream:autoClose:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithData:\">init(data:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithURL:\">init(url:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC3url03maxB6LengthACSg10Foundation3URLV_Sitcfc\">init(url:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithFileAtPath:\">init(fileAtPath:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC10fileAtPath03maxB6LengthACSgSS_Sitcfc\">init(fileAtPath:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream.Type) -> (Data, Int) -> MarkInputStream",
          "key.typeusr": "$s4data13maxMarkLength7Rubicon0C11InputStreamC10Foundation4DataV_SitcD",
          "key.usr": "s:7Rubicon15MarkInputStreamC4data03maxB6LengthAC10Foundation4DataV_Sitcfc"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public override convenience init?(url: <Type usr=\"s:10Foundation3URLV\">URL<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.convenience",
              "key.column": 21,
              "key.length": 11,
              "key.line": 119,
              "key.offset": 7247
            },
            {
              "key.attribute": "source.decl.attribute.override",
              "key.column": 12,
              "key.length": 8,
              "key.line": 119,
              "key.offset": 7238
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 119,
              "key.offset": 7231
            }
          ],
          "key.bodycolumn": 50,
          "key.bodylength": 130,
          "key.bodyline": 119,
          "key.bodyoffset": 7276,
          "key.column": 33,
          "key.doc.column": 33,
          "key.doc.comment": "Initializes and returns an NSInputStream object that reads data from the file at a given URL.\n\n- Parameter url: The URL to the file.",
          "key.doc.declaration": "public override convenience init?(url: URL)",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"119\" column=\"33\"><Name>init(url:)<\/Name><USR>c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithURL:<\/USR><Declaration>public override convenience init?(url: URL)<\/Declaration><CommentParts><Abstract><Para>Initializes and returns an NSInputStream object that reads data from the file at a given URL.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The URL to the file.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
          "key.doc.line": 119,
          "key.doc.name": "init(url:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The URL to the file."
                }
              ],
              "name": "url"
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 161,
          "key.docline": 115,
          "key.docoffset": 7066,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 148,
          "key.line": 119,
          "key.name": "init(url:)",
          "key.namecolumn": 33,
          "key.namelength": 15,
          "key.nameline": 119,
          "key.nameoffset": 7259,
          "key.offset": 7259,
          "key.overrides": [
            {
              "key.usr": "c:objc(cs)NSInputStream(im)initWithURL:"
            }
          ],
          "key.parsed_declaration": "public override convenience init?(url: URL)",
          "key.parsed_scope.end": 122,
          "key.parsed_scope.start": 119,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC05inputD09autoCloseACSo07NSInputD0C_Sbtcfc\">init(inputStream:autoClose:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithData:\">init(data:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC4data03maxB6LengthAC10Foundation4DataV_Sitcfc\">init(data:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC3url03maxB6LengthACSg10Foundation3URLV_Sitcfc\">init(url:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithFileAtPath:\">init(fileAtPath:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC10fileAtPath03maxB6LengthACSgSS_Sitcfc\">init(fileAtPath:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream.Type) -> (URL) -> MarkInputStream?",
          "key.typeusr": "$s3url7Rubicon15MarkInputStreamCSg10Foundation3URLV_tcD",
          "key.usr": "c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithURL:"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public convenience init?(url: <Type usr=\"s:10Foundation3URLV\">URL<\/Type>, maxMarkLength: <Type usr=\"s:Si\">Int<\/Type> = Int.max)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.convenience",
              "key.column": 12,
              "key.length": 11,
              "key.line": 133,
              "key.offset": 7993
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 133,
              "key.offset": 7986
            }
          ],
          "key.bodycolumn": 71,
          "key.bodylength": 130,
          "key.bodyline": 133,
          "key.bodyoffset": 8052,
          "key.column": 24,
          "key.doc.column": 24,
          "key.doc.comment": "Initializes and returns an NSInputStream object that reads data from the file at a given URL.\n\n- Parameters:\n  - url: The URL to the file.\n  - maxMarkLength: The maximum distance the read pointer will be allowed to get from the mark pointer.\n                   Once the read pointer moves this many bytes past the mark pointer then the mark pointer\n                   will be moved to keep up.",
          "key.doc.declaration": "public convenience init?(url: URL, maxMarkLength: Int = Int.max)",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"133\" column=\"24\"><Name>init(url:maxMarkLength:)<\/Name><USR>s:7Rubicon15MarkInputStreamC3url03maxB6LengthACSg10Foundation3URLV_Sitcfc<\/USR><Declaration>public convenience init?(url: URL, maxMarkLength: Int = Int.max)<\/Declaration><CommentParts><Abstract><Para>Initializes and returns an NSInputStream object that reads data from the file at a given URL.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The URL to the file.<\/Para><\/Discussion><\/Parameter><Parameter><Name>maxMarkLength<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The maximum distance the read pointer will be allowed to get from the mark pointer. Once the read pointer moves this many bytes past the mark pointer then the mark pointer will be moved to keep up.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
          "key.doc.line": 133,
          "key.doc.name": "init(url:maxMarkLength:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The URL to the file."
                }
              ],
              "name": "url"
            },
            {
              "discussion": [
                {
                  "Para": "The maximum distance the read pointer will be allowed to get from the mark pointer. Once the read pointer moves this many bytes past the mark pointer then the mark pointer will be moved to keep up."
                }
              ],
              "name": "maxMarkLength"
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 454,
          "key.docline": 125,
          "key.docoffset": 7528,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>url<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxMarkLength<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = Int.max<\/decl.var.parameter>)<\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 178,
          "key.line": 133,
          "key.name": "init(url:maxMarkLength:)",
          "key.namecolumn": 24,
          "key.namelength": 45,
          "key.nameline": 133,
          "key.nameoffset": 8005,
          "key.offset": 8005,
          "key.parsed_declaration": "public convenience init?(url: URL, maxMarkLength: Int = Int.max)",
          "key.parsed_scope.end": 136,
          "key.parsed_scope.start": 133,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC05inputD09autoCloseACSo07NSInputD0C_Sbtcfc\">init(inputStream:autoClose:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithData:\">init(data:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC4data03maxB6LengthAC10Foundation4DataV_Sitcfc\">init(data:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithURL:\">init(url:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithFileAtPath:\">init(fileAtPath:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC10fileAtPath03maxB6LengthACSgSS_Sitcfc\">init(fileAtPath:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream.Type) -> (URL, Int) -> MarkInputStream?",
          "key.typeusr": "$s3url13maxMarkLength7Rubicon0C11InputStreamCSg10Foundation3URLV_SitcD",
          "key.usr": "s:7Rubicon15MarkInputStreamC3url03maxB6LengthACSg10Foundation3URLV_Sitcfc"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public convenience init?(fileAtPath path: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.convenience",
              "key.column": 12,
              "key.length": 11,
              "key.line": 143,
              "key.offset": 8479
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 143,
              "key.offset": 8472
            }
          ],
          "key.bodycolumn": 56,
          "key.bodylength": 138,
          "key.bodyline": 143,
          "key.bodyoffset": 8523,
          "key.column": 24,
          "key.doc.column": 24,
          "key.doc.comment": "Initializes and returns an NSInputStream object that reads data from the file at a given path.\n\n- Parameter path: The path to the file.",
          "key.doc.declaration": "public convenience init?(fileAtPath path: String)",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"143\" column=\"24\"><Name>init(fileAtPath:)<\/Name><USR>c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithFileAtPath:<\/USR><Declaration>public convenience init?(fileAtPath path: String)<\/Declaration><CommentParts><Abstract><Para>Initializes and returns an NSInputStream object that reads data from the file at a given path.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The path to the file.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
          "key.doc.line": 143,
          "key.doc.name": "init(fileAtPath:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The path to the file."
                }
              ],
              "name": "path"
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 164,
          "key.docline": 139,
          "key.docoffset": 8304,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>fileAtPath<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 171,
          "key.line": 143,
          "key.name": "init(fileAtPath:)",
          "key.namecolumn": 24,
          "key.namelength": 30,
          "key.nameline": 143,
          "key.nameoffset": 8491,
          "key.offset": 8491,
          "key.overrides": [
            {
              "key.usr": "c:objc(cs)NSInputStream(im)initWithFileAtPath:"
            }
          ],
          "key.parsed_declaration": "public convenience init?(fileAtPath path: String)",
          "key.parsed_scope.end": 146,
          "key.parsed_scope.start": 143,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC05inputD09autoCloseACSo07NSInputD0C_Sbtcfc\">init(inputStream:autoClose:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithData:\">init(data:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC4data03maxB6LengthAC10Foundation4DataV_Sitcfc\">init(data:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithURL:\">init(url:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC3url03maxB6LengthACSg10Foundation3URLV_Sitcfc\">init(url:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC10fileAtPath03maxB6LengthACSgSS_Sitcfc\">init(fileAtPath:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream.Type) -> (String) -> MarkInputStream?",
          "key.typeusr": "$s10fileAtPath7Rubicon15MarkInputStreamCSgSS_tcD",
          "key.usr": "c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithFileAtPath:"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public convenience init?(fileAtPath path: <Type usr=\"s:SS\">String<\/Type>, maxMarkLength: <Type usr=\"s:Si\">Int<\/Type> = Int.max)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.convenience",
              "key.column": 12,
              "key.length": 11,
              "key.line": 157,
              "key.offset": 9251
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 157,
              "key.offset": 9244
            }
          ],
          "key.bodycolumn": 86,
          "key.bodylength": 138,
          "key.bodyline": 157,
          "key.bodyoffset": 9325,
          "key.column": 24,
          "key.doc.column": 24,
          "key.doc.comment": "Initializes and returns an NSInputStream object that reads data from the file at a given path.\n\n- Parameters:\n  - path: The path to the file.\n  - maxMarkLength: The maximum distance the read pointer will be allowed to get from the mark pointer.\n                   Once the read pointer moves this many bytes past the mark pointer then the mark pointer\n                   will be moved to keep up.",
          "key.doc.declaration": "public convenience init?(fileAtPath path: String, maxMarkLength: Int = Int.max)",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"157\" column=\"24\"><Name>init(fileAtPath:maxMarkLength:)<\/Name><USR>s:7Rubicon15MarkInputStreamC10fileAtPath03maxB6LengthACSgSS_Sitcfc<\/USR><Declaration>public convenience init?(fileAtPath path: String, maxMarkLength: Int = Int.max)<\/Declaration><CommentParts><Abstract><Para>Initializes and returns an NSInputStream object that reads data from the file at a given path.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The path to the file.<\/Para><\/Discussion><\/Parameter><Parameter><Name>maxMarkLength<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The maximum distance the read pointer will be allowed to get from the mark pointer. Once the read pointer moves this many bytes past the mark pointer then the mark pointer will be moved to keep up.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
          "key.doc.line": 157,
          "key.doc.name": "init(fileAtPath:maxMarkLength:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The path to the file."
                }
              ],
              "name": "path"
            },
            {
              "discussion": [
                {
                  "Para": "The maximum distance the read pointer will be allowed to get from the mark pointer. Once the read pointer moves this many bytes past the mark pointer then the mark pointer will be moved to keep up."
                }
              ],
              "name": "maxMarkLength"
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 457,
          "key.docline": 149,
          "key.docoffset": 8783,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>fileAtPath<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxMarkLength<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = Int.max<\/decl.var.parameter>)<\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 201,
          "key.line": 157,
          "key.name": "init(fileAtPath:maxMarkLength:)",
          "key.namecolumn": 24,
          "key.namelength": 60,
          "key.nameline": 157,
          "key.nameoffset": 9263,
          "key.offset": 9263,
          "key.parsed_declaration": "public convenience init?(fileAtPath path: String, maxMarkLength: Int = Int.max)",
          "key.parsed_scope.end": 160,
          "key.parsed_scope.start": 157,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC05inputD09autoCloseACSo07NSInputD0C_Sbtcfc\">init(inputStream:autoClose:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithData:\">init(data:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC4data03maxB6LengthAC10Foundation4DataV_Sitcfc\">init(data:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithURL:\">init(url:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC3url03maxB6LengthACSg10Foundation3URLV_Sitcfc\">init(url:maxMarkLength:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:@M@Rubicon@objc(cs)MarkInputStream(im)initWithFileAtPath:\">init(fileAtPath:)<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream.Type) -> (String, Int) -> MarkInputStream?",
          "key.typeusr": "$s10fileAtPath13maxMarkLength7Rubicon0E11InputStreamCSgSS_SitcD",
          "key.usr": "s:7Rubicon15MarkInputStreamC10fileAtPath03maxB6LengthACSgSS_Sitcfc"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open override func read(_ inputBuffer: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;, maxLength: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.override",
              "key.column": 10,
              "key.length": 8,
              "key.line": 176,
              "key.offset": 10557
            },
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 176,
              "key.offset": 10552
            }
          ],
          "key.bodycolumn": 97,
          "key.bodylength": 96,
          "key.bodyline": 176,
          "key.bodyoffset": 10644,
          "key.column": 19,
          "key.doc.column": 24,
          "key.doc.comment": "Reads up to a given number of bytes into a given buffer.\n\n- Parameters:\n  - inputBuffer: A data buffer. The buffer must be large enough to contain the number of bytes specified\n                 by len.\n  - maxLength: The maximum number of bytes to read.\n- Returns: A number indicating the outcome of the operation: <ul><li>A positive number indicates the\n                                                             number of bytes read.<\/li><li>0 indicates\n                                                             that the end of the buffer was\n                                                             reached.<\/li><li>-1 means that the operation\n                                                             failed; more information about the error can\n                                                             be obtained with streamError.<\/li><\/ul>",
          "key.doc.declaration": "open override func read(_ inputBuffer: UnsafeMutablePointer<UInt8>, maxLength: Int) -> Int",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"176\" column=\"24\"><Name>read(_:maxLength:)<\/Name><USR>c:@M@Rubicon@objc(cs)MarkInputStream(im)read:maxLength:<\/USR><Declaration>open override func read(_ inputBuffer: UnsafeMutablePointer&lt;UInt8&gt;, maxLength: Int) -&gt; Int<\/Declaration><CommentParts><Abstract><Para>Reads up to a given number of bytes into a given buffer.<\/Para><\/Abstract><Parameters><Parameter><Name>inputBuffer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A data buffer. The buffer must be large enough to contain the number of bytes specified by len.<\/Para><\/Discussion><\/Parameter><Parameter><Name>maxLength<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The maximum number of bytes to read.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A number indicating the outcome of the operation: <rawHTML><![CDATA[<ul>]]><\/rawHTML><rawHTML><![CDATA[<li>]]><\/rawHTML>A positive number indicates the number of bytes read.<rawHTML><![CDATA[<\/li>]]><\/rawHTML><rawHTML><![CDATA[<li>]]><\/rawHTML>0 indicates that the end of the buffer was reached.<rawHTML><![CDATA[<\/li>]]><\/rawHTML><rawHTML><![CDATA[<li>]]><\/rawHTML>-1 means that the operation failed; more information about the error can be obtained with streamError.<rawHTML><![CDATA[<\/li>]]><\/rawHTML><rawHTML><![CDATA[<\/ul>]]><\/rawHTML><\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
          "key.doc.line": 176,
          "key.doc.name": "read(_:maxLength:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "A data buffer. The buffer must be large enough to contain the number of bytes specified by len."
                }
              ],
              "name": "inputBuffer"
            },
            {
              "discussion": [
                {
                  "Para": "The maximum number of bytes to read."
                }
              ],
              "name": "maxLength"
            }
          ],
          "key.doc.result_discussion": [
            {
              "Para": "A number indicating the outcome of the operation: <ul><li>A positive number indicates the number of bytes read.<\/li><li>0 indicates that the end of the buffer was reached.<\/li><li>-1 means that the operation failed; more information about the error can be obtained with streamError.<\/li><\/ul>"
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 963,
          "key.docline": 163,
          "key.docoffset": 9585,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>read<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inputBuffer<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxLength<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 175,
          "key.line": 176,
          "key.name": "read(_:maxLength:)",
          "key.namecolumn": 24,
          "key.namelength": 64,
          "key.nameline": 176,
          "key.nameoffset": 10571,
          "key.offset": 10566,
          "key.overrides": [
            {
              "key.usr": "c:objc(cs)NSInputStream(im)read:maxLength:"
            }
          ],
          "key.parsed_declaration": "open override func read(_ inputBuffer: UnsafeMutablePointer<UInt8>, maxLength: Int) -> Int",
          "key.parsed_scope.end": 180,
          "key.parsed_scope.start": 176,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:So13NSInputStreamC7RubiconE4read2to9maxLengthSiSpys4Int8VG_SitKF\">read(to: CCharPointer, maxLength: Int) throws -&gt; Int<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:So13NSInputStreamC7RubiconE4read2to9maxLengthSiSv_SitKF\">read(to: UnsafeMutableRawPointer, maxLength: Int) throws -&gt; Int<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:So13NSInputStreamC7RubiconE4read2to9maxLength8truncateSi10Foundation4DataVz_SiSbtKF\">read(to: inout Data, maxLength: Int, truncate: Bool = true) throws -&gt; Int<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:So13NSInputStreamC7RubiconE4read2toSiAC24MutableManagedByteBuffer_p_tKF\">read(to: MutableManagedByteBuffer) throws -&gt; Int<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:So13NSInputStreamC7RubiconE4read2to9maxLength8truncateSiSays5UInt8VGz_SiSbtKF\">read(to: inout [UInt8], maxLength: Int, truncate: Bool = true) throws -&gt; Int<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:So13NSInputStreamC7RubiconE4read2toSiSw_tKF\">read(to: UnsafeMutableRawBufferPointer) throws -&gt; Int<\/RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:So13NSInputStreamC7RubiconE4reads5UInt8VSgyKF\">read()<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> (UnsafeMutablePointer<UInt8>, Int) -> Int",
          "key.typeusr": "$s_9maxLengthSiSpys5UInt8VG_SitcD",
          "key.usr": "c:@M@Rubicon@objc(cs)MarkInputStream(im)read:maxLength:"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open override func getBuffer(_ bufferPtr: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;?&gt;, length lengthPtr: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.override",
              "key.column": 10,
              "key.length": 8,
              "key.line": 192,
              "key.offset": 11412
            },
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 192,
              "key.offset": 11407
            }
          ],
          "key.bodycolumn": 153,
          "key.bodylength": 498,
          "key.bodyline": 192,
          "key.bodyoffset": 11555,
          "key.column": 19,
          "key.doc.column": 24,
          "key.doc.comment": "Returns by reference a pointer to a read buffer and, by reference, the number of bytes available, and\nreturns a Boolean value that indicates whether the buffer is available.\n\n- Parameters:\n  - bufferPtr: Upon return, contains a pointer to a read buffer. The buffer is only valid until the next\n               stream operation is performed.\n  - lengthPtr: Upon return, contains the number of bytes available.\n- Returns: `true` if the buffer is available, otherwise `false`.",
          "key.doc.declaration": "open override func getBuffer(_ bufferPtr: UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>, length lengthPtr: UnsafeMutablePointer<Int>) -> Bool",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"192\" column=\"24\"><Name>getBuffer(_:length:)<\/Name><USR>c:@M@Rubicon@objc(cs)MarkInputStream(im)getBuffer:length:<\/USR><Declaration>open override func getBuffer(_ bufferPtr: UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;UInt8&gt;?&gt;, length lengthPtr: UnsafeMutablePointer&lt;Int&gt;) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Returns by reference a pointer to a read buffer and, by reference, the number of bytes available, and returns a Boolean value that indicates whether the buffer is available.<\/Para><\/Abstract><Parameters><Parameter><Name>bufferPtr<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Upon return, contains a pointer to a read buffer. The buffer is only valid until the next stream operation is performed.<\/Para><\/Discussion><\/Parameter><Parameter><Name>lengthPtr<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Upon return, contains the number of bytes available.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the buffer is available, otherwise <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
          "key.doc.line": 192,
          "key.doc.name": "getBuffer(_:length:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "Upon return, contains a pointer to a read buffer. The buffer is only valid until the next stream operation is performed."
                }
              ],
              "name": "bufferPtr"
            },
            {
              "discussion": [
                {
                  "Para": "Upon return, contains the number of bytes available."
                }
              ],
              "name": "lengthPtr"
            }
          ],
          "key.doc.result_discussion": [
            {
              "Para": "`true` if the buffer is available, otherwise `false`."
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 541,
          "key.docline": 183,
          "key.docoffset": 10862,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getBuffer<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>bufferPtr<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;?&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>length<\/decl.var.parameter.argument_label> <decl.var.parameter.name>lengthPtr<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 633,
          "key.line": 192,
          "key.name": "getBuffer(_:length:)",
          "key.namecolumn": 24,
          "key.namelength": 119,
          "key.nameline": 192,
          "key.nameoffset": 11426,
          "key.offset": 11421,
          "key.overrides": [
            {
              "key.usr": "c:objc(cs)NSInputStream(im)getBuffer:length:"
            }
          ],
          "key.parsed_declaration": "open override func getBuffer(_ bufferPtr: UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>, length lengthPtr: UnsafeMutablePointer<Int>) -> Bool",
          "key.parsed_scope.end": 207,
          "key.parsed_scope.start": 192,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> (UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>, UnsafeMutablePointer<Int>) -> Bool",
          "key.typeusr": "$s_6lengthSbSpySpys5UInt8VGSgG_SpySiGtcD",
          "key.usr": "c:@M@Rubicon@objc(cs)MarkInputStream(im)getBuffer:length:"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open override func open()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.override",
              "key.column": 10,
              "key.length": 8,
              "key.line": 213,
              "key.offset": 12335
            },
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 213,
              "key.offset": 12330
            }
          ],
          "key.bodycolumn": 32,
          "key.bodylength": 636,
          "key.bodyline": 213,
          "key.bodyoffset": 12357,
          "key.column": 19,
          "key.doc.column": 24,
          "key.doc.comment": "Opens the receiving stream. A stream must be created before it can be opened. Once opened, a stream cannot\nbe closed and reopened.",
          "key.doc.declaration": "open override func open()",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"213\" column=\"24\"><Name>open()<\/Name><USR>c:@M@Rubicon@objc(cs)MarkInputStream(im)open<\/USR><Declaration>open override func open()<\/Declaration><CommentParts><Abstract><Para>Opens the receiving stream. A stream must be created before it can be opened. Once opened, a stream cannot be closed and reopened.<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line": 213,
          "key.doc.name": "open()",
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 151,
          "key.docline": 210,
          "key.docoffset": 12175,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>open<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 650,
          "key.line": 213,
          "key.name": "open()",
          "key.namecolumn": 24,
          "key.namelength": 6,
          "key.nameline": 213,
          "key.nameoffset": 12349,
          "key.offset": 12344,
          "key.overrides": [
            {
              "key.usr": "c:objc(cs)NSStream(im)open"
            }
          ],
          "key.parsed_declaration": "open override func open()",
          "key.parsed_scope.end": 228,
          "key.parsed_scope.start": 213,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "c:@M@Rubicon@objc(cs)MarkInputStream(im)open"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open override func close()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.override",
              "key.column": 10,
              "key.length": 8,
              "key.line": 236,
              "key.offset": 13494
            },
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 236,
              "key.offset": 13489
            }
          ],
          "key.bodycolumn": 33,
          "key.bodylength": 511,
          "key.bodyline": 236,
          "key.bodyoffset": 13517,
          "key.column": 19,
          "key.doc.column": 24,
          "key.doc.comment": "Closes the receiver. Closing the stream terminates the flow of bytes and releases system resources that\nwere reserved for the stream when it was opened. If the stream has been scheduled on a run loop, closing\nthe stream implicitly removes the stream from the run loop. A stream that is closed can still be queried\nfor its properties.",
          "key.doc.declaration": "open override func close()",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"236\" column=\"24\"><Name>close()<\/Name><USR>c:@M@Rubicon@objc(cs)MarkInputStream(im)close<\/USR><Declaration>open override func close()<\/Declaration><CommentParts><Abstract><Para>Closes the receiver. Closing the stream terminates the flow of bytes and releases system resources that were reserved for the stream when it was opened. If the stream has been scheduled on a run loop, closing the stream implicitly removes the stream from the run loop. A stream that is closed can still be queried for its properties.<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line": 236,
          "key.doc.name": "close()",
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 370,
          "key.docline": 231,
          "key.docoffset": 13115,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>close<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 526,
          "key.line": 236,
          "key.name": "close()",
          "key.namecolumn": 24,
          "key.namelength": 7,
          "key.nameline": 236,
          "key.nameoffset": 13508,
          "key.offset": 13503,
          "key.overrides": [
            {
              "key.usr": "c:objc(cs)NSStream(im)close"
            }
          ],
          "key.parsed_declaration": "open override func close()",
          "key.parsed_scope.end": 250,
          "key.parsed_scope.start": 236,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "c:@M@Rubicon@objc(cs)MarkInputStream(im)close"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open func markSet()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 255,
              "key.offset": 14208
            }
          ],
          "key.bodycolumn": 26,
          "key.bodylength": 44,
          "key.bodyline": 255,
          "key.bodyoffset": 14229,
          "key.column": 10,
          "key.doc.column": 15,
          "key.doc.comment": "Marks the current position in the stream.",
          "key.doc.declaration": "open func markSet()",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"255\" column=\"15\"><Name>markSet()<\/Name><USR>s:7Rubicon15MarkInputStreamC7markSetyyF<\/USR><Declaration>open func markSet()<\/Declaration><CommentParts><Abstract><Para>Marks the current position in the stream.<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line": 255,
          "key.doc.name": "markSet()",
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 54,
          "key.docline": 253,
          "key.docoffset": 14150,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>markSet<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 61,
          "key.line": 255,
          "key.name": "markSet()",
          "key.namecolumn": 15,
          "key.namelength": 9,
          "key.nameline": 255,
          "key.nameoffset": 14218,
          "key.offset": 14213,
          "key.parsed_declaration": "open func markSet()",
          "key.parsed_scope.end": 255,
          "key.parsed_scope.start": 255,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "s:7Rubicon15MarkInputStreamC7markSetyyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open func markReturn()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 260,
              "key.offset": 14462
            }
          ],
          "key.bodycolumn": 29,
          "key.bodylength": 47,
          "key.bodyline": 260,
          "key.bodyoffset": 14486,
          "key.column": 10,
          "key.doc.column": 15,
          "key.doc.comment": "Returns to the last marked position in the stream.",
          "key.doc.declaration": "open func markReturn()",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"260\" column=\"15\"><Name>markReturn()<\/Name><USR>s:7Rubicon15MarkInputStreamC10markReturnyyF<\/USR><Declaration>open func markReturn()<\/Declaration><CommentParts><Abstract><Para>Returns to the last marked position in the stream.<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line": 260,
          "key.doc.name": "markReturn()",
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 63,
          "key.docline": 258,
          "key.docoffset": 14395,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>markReturn<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 67,
          "key.line": 260,
          "key.name": "markReturn()",
          "key.namecolumn": 15,
          "key.namelength": 12,
          "key.nameline": 260,
          "key.nameoffset": 14472,
          "key.offset": 14467,
          "key.parsed_declaration": "open func markReturn()",
          "key.parsed_scope.end": 260,
          "key.parsed_scope.start": 260,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "s:7Rubicon15MarkInputStreamC10markReturnyyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open func markDelete()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 265,
              "key.offset": 14719
            }
          ],
          "key.bodycolumn": 29,
          "key.bodylength": 47,
          "key.bodyline": 265,
          "key.bodyoffset": 14743,
          "key.column": 10,
          "key.doc.column": 15,
          "key.doc.comment": "Deletes the last marked position in the stream.",
          "key.doc.declaration": "open func markDelete()",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"265\" column=\"15\"><Name>markDelete()<\/Name><USR>s:7Rubicon15MarkInputStreamC10markDeleteyyF<\/USR><Declaration>open func markDelete()<\/Declaration><CommentParts><Abstract><Para>Deletes the last marked position in the stream.<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line": 265,
          "key.doc.name": "markDelete()",
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 60,
          "key.docline": 263,
          "key.docoffset": 14655,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>markDelete<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 67,
          "key.line": 265,
          "key.name": "markDelete()",
          "key.namecolumn": 15,
          "key.namelength": 12,
          "key.nameline": 265,
          "key.nameoffset": 14729,
          "key.offset": 14724,
          "key.parsed_declaration": "open func markDelete()",
          "key.parsed_scope.end": 265,
          "key.parsed_scope.start": 265,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "s:7Rubicon15MarkInputStreamC10markDeleteyyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open func markReset()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 270,
              "key.offset": 15007
            }
          ],
          "key.bodycolumn": 28,
          "key.bodylength": 65,
          "key.bodyline": 270,
          "key.bodyoffset": 15030,
          "key.column": 10,
          "key.doc.column": 15,
          "key.doc.comment": "Effectively the same as performing a `markReturn()` followed by a `markSet()`.",
          "key.doc.declaration": "open func markReset()",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"270\" column=\"15\"><Name>markReset()<\/Name><USR>s:7Rubicon15MarkInputStreamC9markResetyyF<\/USR><Declaration>open func markReset()<\/Declaration><CommentParts><Abstract><Para>Effectively the same as performing a <codeVoice>markReturn()<\/codeVoice> followed by a <codeVoice>markSet()<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line": 270,
          "key.doc.name": "markReset()",
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 91,
          "key.docline": 268,
          "key.docoffset": 14912,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>markReset<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 84,
          "key.line": 270,
          "key.name": "markReset()",
          "key.namecolumn": 15,
          "key.namelength": 11,
          "key.nameline": 270,
          "key.nameoffset": 15017,
          "key.offset": 15012,
          "key.parsed_declaration": "open func markReset()",
          "key.parsed_scope.end": 270,
          "key.parsed_scope.start": 270,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "s:7Rubicon15MarkInputStreamC9markResetyyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open func markUpdate()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 276,
              "key.offset": 15364
            },
            {
              "key.attribute": "source.decl.attribute.available",
              "key.column": 5,
              "key.length": 47,
              "key.line": 275,
              "key.offset": 15312
            }
          ],
          "key.bodycolumn": 29,
          "key.bodylength": 66,
          "key.bodyline": 276,
          "key.bodyoffset": 15388,
          "key.column": 10,
          "key.doc.column": 15,
          "key.doc.comment": "Effectively the same as performing a `markDelete()` followed by a `markSet()`.",
          "key.doc.declaration": "@available(*, deprecated, renamed: \"markClear\")\nopen func markUpdate()",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"276\" column=\"15\"><Name>markUpdate()<\/Name><USR>s:7Rubicon15MarkInputStreamC10markUpdateyyF<\/USR><Declaration>@available(*, deprecated, renamed: &quot;markClear&quot;)\nopen func markUpdate()<\/Declaration><CommentParts><Abstract><Para>Effectively the same as performing a <codeVoice>markDelete()<\/codeVoice> followed by a <codeVoice>markSet()<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line": 276,
          "key.doc.name": "markUpdate()",
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 91,
          "key.docline": 273,
          "key.docoffset": 15217,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>markUpdate<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 86,
          "key.line": 276,
          "key.name": "markUpdate()",
          "key.namecolumn": 15,
          "key.namelength": 12,
          "key.nameline": 276,
          "key.nameoffset": 15374,
          "key.offset": 15369,
          "key.parsed_declaration": "open func markUpdate()",
          "key.parsed_scope.end": 276,
          "key.parsed_scope.start": 276,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "s:7Rubicon15MarkInputStreamC10markUpdateyyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open func markClear()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 281,
              "key.offset": 15671
            }
          ],
          "key.bodycolumn": 28,
          "key.bodylength": 66,
          "key.bodyline": 281,
          "key.bodyoffset": 15694,
          "key.column": 10,
          "key.doc.column": 15,
          "key.doc.comment": "Effectively the same as performing a `markDelete()` followed by a `markSet()`.",
          "key.doc.declaration": "open func markClear()",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"281\" column=\"15\"><Name>markClear()<\/Name><USR>s:7Rubicon15MarkInputStreamC9markClearyyF<\/USR><Declaration>open func markClear()<\/Declaration><CommentParts><Abstract><Para>Effectively the same as performing a <codeVoice>markDelete()<\/codeVoice> followed by a <codeVoice>markSet()<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line": 281,
          "key.doc.name": "markClear()",
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 91,
          "key.docline": 279,
          "key.docoffset": 15576,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>markClear<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 85,
          "key.line": 281,
          "key.name": "markClear()",
          "key.namecolumn": 15,
          "key.namelength": 11,
          "key.nameline": 281,
          "key.nameoffset": 15681,
          "key.offset": 15676,
          "key.parsed_declaration": "open func markClear()",
          "key.parsed_scope.end": 281,
          "key.parsed_scope.start": 281,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "s:7Rubicon15MarkInputStreamC9markClearyyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>open func markBackup(count: <Type usr=\"s:Si\">Int<\/Type> = 1) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.open",
              "key.column": 5,
              "key.length": 4,
              "key.line": 290,
              "key.offset": 16292
            }
          ],
          "key.bodycolumn": 50,
          "key.bodylength": 84,
          "key.bodyline": 290,
          "key.bodyoffset": 16337,
          "key.column": 10,
          "key.doc.column": 15,
          "key.doc.comment": "Backs out the last `count` characters from the most recently set mark without actually removing the entire\nmark. You have to have previously called `markSet()` otherwise this method does nothing.\n\n- Parameter count: the number of characters to back out.\n- Returns: The number of characters actually backed out in case there weren't `count` characters available.",
          "key.doc.declaration": "open func markBackup(count: Int = 1) -> Int",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"290\" column=\"15\"><Name>markBackup(count:)<\/Name><USR>s:7Rubicon15MarkInputStreamC10markBackup5countS2i_tF<\/USR><Declaration>open func markBackup(count: Int = 1) -&gt; Int<\/Declaration><CommentParts><Abstract><Para>Backs out the last <codeVoice>count<\/codeVoice> characters from the most recently set mark without actually removing the entire mark. You have to have previously called <codeVoice>markSet()<\/codeVoice> otherwise this method does nothing.<\/Para><\/Abstract><Parameters><Parameter><Name>count<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the number of characters to back out.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>The number of characters actually backed out in case there weren’t <codeVoice>count<\/codeVoice> characters available.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
          "key.doc.line": 290,
          "key.doc.name": "markBackup(count:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "the number of characters to back out."
                }
              ],
              "name": "count"
            }
          ],
          "key.doc.result_discussion": [
            {
              "Para": "The number of characters actually backed out in case there weren’t `count` characters available."
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 406,
          "key.docline": 284,
          "key.docoffset": 15882,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>markBackup<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>count<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = 1<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 125,
          "key.line": 290,
          "key.name": "markBackup(count:)",
          "key.namecolumn": 15,
          "key.namelength": 26,
          "key.nameline": 290,
          "key.nameoffset": 16302,
          "key.offset": 16297,
          "key.parsed_declaration": "open func markBackup(count: Int = 1) -> Int",
          "key.parsed_scope.end": 290,
          "key.parsed_scope.start": 290,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> (Int) -> Int",
          "key.typeusr": "$s5countS2i_tcD",
          "key.usr": "s:7Rubicon15MarkInputStreamC10markBackup5countS2i_tF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable final func _markSet()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.column": 16,
              "key.length": 5,
              "key.line": 295,
              "key.offset": 16612
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 295,
              "key.offset": 16601
            }
          ],
          "key.bodycolumn": 39,
          "key.bodylength": 58,
          "key.bodyline": 295,
          "key.bodyoffset": 16635,
          "key.column": 22,
          "key.doc.column": 27,
          "key.doc.comment": "Marks the current position in the stream.",
          "key.doc.declaration": "@inlinable final func _markSet()",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"295\" column=\"27\"><Name>_markSet()<\/Name><USR>s:7Rubicon15MarkInputStreamC8_markSetyyF<\/USR><Declaration>@inlinable final func _markSet()<\/Declaration><CommentParts><Abstract><Para>Marks the current position in the stream.<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line": 295,
          "key.doc.name": "_markSet()",
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 54,
          "key.docline": 293,
          "key.docoffset": 16543,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_markSet<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 76,
          "key.line": 295,
          "key.name": "_markSet()",
          "key.namecolumn": 27,
          "key.namelength": 10,
          "key.nameline": 295,
          "key.nameoffset": 16623,
          "key.offset": 16618,
          "key.parsed_declaration": "@inlinable final func _markSet()",
          "key.parsed_scope.end": 295,
          "key.parsed_scope.start": 295,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "s:7Rubicon15MarkInputStreamC8_markSetyyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable final func _markDelete()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.column": 16,
              "key.length": 5,
              "key.line": 302,
              "key.offset": 17115
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 302,
              "key.offset": 17104
            }
          ],
          "key.bodycolumn": 42,
          "key.bodylength": 71,
          "key.bodyline": 302,
          "key.bodyoffset": 17141,
          "key.column": 22,
          "key.doc.column": 27,
          "key.doc.comment": "Deletes the last marked position in the stream. When a mark is deleted and there is a previous mark still\non the stack then the contents of the deleted mark are appended to the previous mark. If there is no\nprevious mark then the contents are just deleted.",
          "key.doc.declaration": "@inlinable final func _markDelete()",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"302\" column=\"27\"><Name>_markDelete()<\/Name><USR>s:7Rubicon15MarkInputStreamC11_markDeleteyyF<\/USR><Declaration>@inlinable final func _markDelete()<\/Declaration><CommentParts><Abstract><Para>Deletes the last marked position in the stream. When a mark is deleted and there is a previous mark still on the stack then the contents of the deleted mark are appended to the previous mark. If there is no previous mark then the contents are just deleted.<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line": 302,
          "key.doc.name": "_markDelete()",
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 285,
          "key.docline": 298,
          "key.docoffset": 16815,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_markDelete<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 92,
          "key.line": 302,
          "key.name": "_markDelete()",
          "key.namecolumn": 27,
          "key.namelength": 13,
          "key.nameline": 302,
          "key.nameoffset": 17126,
          "key.offset": 17121,
          "key.parsed_declaration": "@inlinable final func _markDelete()",
          "key.parsed_scope.end": 302,
          "key.parsed_scope.start": 302,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "s:7Rubicon15MarkInputStreamC11_markDeleteyyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable final func _markReturn()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.column": 16,
              "key.length": 5,
              "key.line": 307,
              "key.offset": 17412
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 307,
              "key.offset": 17401
            }
          ],
          "key.bodycolumn": 42,
          "key.bodylength": 54,
          "key.bodyline": 307,
          "key.bodyoffset": 17438,
          "key.column": 22,
          "key.doc.column": 27,
          "key.doc.comment": "Returns to the last marked position in the stream.",
          "key.doc.declaration": "@inlinable final func _markReturn()",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"307\" column=\"27\"><Name>_markReturn()<\/Name><USR>s:7Rubicon15MarkInputStreamC11_markReturnyyF<\/USR><Declaration>@inlinable final func _markReturn()<\/Declaration><CommentParts><Abstract><Para>Returns to the last marked position in the stream.<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line": 307,
          "key.doc.name": "_markReturn()",
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 63,
          "key.docline": 305,
          "key.docoffset": 17334,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_markReturn<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 75,
          "key.line": 307,
          "key.name": "_markReturn()",
          "key.namecolumn": 27,
          "key.namelength": 13,
          "key.nameline": 307,
          "key.nameoffset": 17423,
          "key.offset": 17418,
          "key.parsed_declaration": "@inlinable final func _markReturn()",
          "key.parsed_scope.end": 307,
          "key.parsed_scope.start": 307,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "s:7Rubicon15MarkInputStreamC11_markReturnyyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable final func _markReset() -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.column": 16,
              "key.length": 5,
              "key.line": 312,
              "key.offset": 17720
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 312,
              "key.offset": 17709
            }
          ],
          "key.bodycolumn": 49,
          "key.bodylength": 169,
          "key.bodyline": 312,
          "key.bodyoffset": 17753,
          "key.column": 22,
          "key.doc.column": 27,
          "key.doc.comment": "Effectively the same as performing a `markReturn()` followed by a `markSet()`.",
          "key.doc.declaration": "@inlinable final func _markReset() -> Bool",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"312\" column=\"27\"><Name>_markReset()<\/Name><USR>s:7Rubicon15MarkInputStreamC10_markResetSbyF<\/USR><Declaration>@inlinable final func _markReset() -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Effectively the same as performing a <codeVoice>markReturn()<\/codeVoice> followed by a <codeVoice>markSet()<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line": 312,
          "key.doc.name": "_markReset()",
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 91,
          "key.docline": 310,
          "key.docoffset": 17614,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_markReset<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 197,
          "key.line": 312,
          "key.name": "_markReset()",
          "key.namecolumn": 27,
          "key.namelength": 12,
          "key.nameline": 312,
          "key.nameoffset": 17731,
          "key.offset": 17726,
          "key.parsed_declaration": "@inlinable final func _markReset() -> Bool",
          "key.parsed_scope.end": 319,
          "key.parsed_scope.start": 312,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> Bool",
          "key.typeusr": "$sSbycD",
          "key.usr": "s:7Rubicon15MarkInputStreamC10_markResetSbyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable final func _markUpdate() -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.column": 16,
              "key.length": 5,
              "key.line": 324,
              "key.offset": 18150
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 324,
              "key.offset": 18139
            }
          ],
          "key.bodycolumn": 50,
          "key.bodylength": 266,
          "key.bodyline": 324,
          "key.bodyoffset": 18184,
          "key.column": 22,
          "key.doc.column": 27,
          "key.doc.comment": "Effectively the same as performing a `markDelete()` followed by a `markSet()`.",
          "key.doc.declaration": "@inlinable final func _markUpdate() -> Bool",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"324\" column=\"27\"><Name>_markUpdate()<\/Name><USR>s:7Rubicon15MarkInputStreamC11_markUpdateSbyF<\/USR><Declaration>@inlinable final func _markUpdate() -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Effectively the same as performing a <codeVoice>markDelete()<\/codeVoice> followed by a <codeVoice>markSet()<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line": 324,
          "key.doc.name": "_markUpdate()",
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 91,
          "key.docline": 322,
          "key.docoffset": 18044,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_markUpdate<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 295,
          "key.line": 324,
          "key.name": "_markUpdate()",
          "key.namecolumn": 27,
          "key.namelength": 13,
          "key.nameline": 324,
          "key.nameoffset": 18161,
          "key.offset": 18156,
          "key.parsed_declaration": "@inlinable final func _markUpdate() -> Bool",
          "key.parsed_scope.end": 333,
          "key.parsed_scope.start": 324,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> Bool",
          "key.typeusr": "$sSbycD",
          "key.usr": "s:7Rubicon15MarkInputStreamC11_markUpdateSbyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable final func _markBackup(count: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.column": 16,
              "key.length": 5,
              "key.line": 342,
              "key.offset": 18993
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 342,
              "key.offset": 18982
            }
          ],
          "key.bodycolumn": 59,
          "key.bodylength": 89,
          "key.bodyline": 342,
          "key.bodyoffset": 19036,
          "key.column": 22,
          "key.doc.column": 27,
          "key.doc.comment": "Backs out the last `count` characters from the most recently set mark without actually removing the entire\nmark. You have to have previously called `markSet()` otherwise this method does nothing.\n\n- Parameter count: the number of characters to back out.\n- Returns: The number of characters actually backed out in case there weren't `count` characters available.",
          "key.doc.declaration": "@inlinable final func _markBackup(count: Int) -> Int",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"342\" column=\"27\"><Name>_markBackup(count:)<\/Name><USR>s:7Rubicon15MarkInputStreamC11_markBackup5countS2i_tF<\/USR><Declaration>@inlinable final func _markBackup(count: Int) -&gt; Int<\/Declaration><CommentParts><Abstract><Para>Backs out the last <codeVoice>count<\/codeVoice> characters from the most recently set mark without actually removing the entire mark. You have to have previously called <codeVoice>markSet()<\/codeVoice> otherwise this method does nothing.<\/Para><\/Abstract><Parameters><Parameter><Name>count<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the number of characters to back out.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>The number of characters actually backed out in case there weren’t <codeVoice>count<\/codeVoice> characters available.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
          "key.doc.line": 342,
          "key.doc.name": "_markBackup(count:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "the number of characters to back out."
                }
              ],
              "name": "count"
            }
          ],
          "key.doc.result_discussion": [
            {
              "Para": "The number of characters actually backed out in case there weren’t `count` characters available."
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 406,
          "key.docline": 336,
          "key.docoffset": 18572,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_markBackup<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>count<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 127,
          "key.line": 342,
          "key.name": "_markBackup(count:)",
          "key.namecolumn": 27,
          "key.namelength": 23,
          "key.nameline": 342,
          "key.nameoffset": 19004,
          "key.offset": 18999,
          "key.parsed_declaration": "@inlinable final func _markBackup(count: Int) -> Int",
          "key.parsed_scope.end": 342,
          "key.parsed_scope.start": 342,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC11_markBackup_5countSiAA14RingByteBufferC_SitF\">_markBackup(_:count:)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> (Int) -> Int",
          "key.typeusr": "$s5countS2i_tcD",
          "key.usr": "s:7Rubicon15MarkInputStreamC11_markBackup5countS2i_tF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable final func _markBackup(_ rb: <Type usr=\"s:7Rubicon14RingByteBufferC\">RingByteBuffer<\/Type>, count: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.column": 16,
              "key.length": 5,
              "key.line": 353,
              "key.offset": 19733
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 353,
              "key.offset": 19722
            }
          ],
          "key.bodycolumn": 81,
          "key.bodylength": 262,
          "key.bodyline": 353,
          "key.bodyoffset": 19798,
          "key.column": 22,
          "key.doc.column": 27,
          "key.doc.comment": "Backs out the last `count` characters from the most recently set mark without actually removing the entire\nmark. You have to have previously called `markSet()` otherwise this method does nothing.\n\n- Parameters:\n  - rb: The mark off the top of the stack.\n  - count: The number of characters to back out.\n- Returns: The number of characters actually backed out in case there weren't `count` characters available.",
          "key.doc.declaration": "@inlinable final func _markBackup(_ rb: RingByteBuffer, count: Int) -> Int",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"353\" column=\"27\"><Name>_markBackup(_:count:)<\/Name><USR>s:7Rubicon15MarkInputStreamC11_markBackup_5countSiAA14RingByteBufferC_SitF<\/USR><Declaration>@inlinable final func _markBackup(_ rb: RingByteBuffer, count: Int) -&gt; Int<\/Declaration><CommentParts><Abstract><Para>Backs out the last <codeVoice>count<\/codeVoice> characters from the most recently set mark without actually removing the entire mark. You have to have previously called <codeVoice>markSet()<\/codeVoice> otherwise this method does nothing.<\/Para><\/Abstract><Parameters><Parameter><Name>rb<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The mark off the top of the stack.<\/Para><\/Discussion><\/Parameter><Parameter><Name>count<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The number of characters to back out.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>The number of characters actually backed out in case there weren’t <codeVoice>count<\/codeVoice> characters available.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
          "key.doc.line": 353,
          "key.doc.name": "_markBackup(_:count:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The mark off the top of the stack."
                }
              ],
              "name": "rb"
            },
            {
              "discussion": [
                {
                  "Para": "The number of characters to back out."
                }
              ],
              "name": "count"
            }
          ],
          "key.doc.result_discussion": [
            {
              "Para": "The number of characters actually backed out in case there weren’t `count` characters available."
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 471,
          "key.docline": 345,
          "key.docoffset": 19247,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_markBackup<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>rb<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon14RingByteBufferC\">RingByteBuffer<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>count<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 322,
          "key.line": 353,
          "key.name": "_markBackup(_:count:)",
          "key.namecolumn": 27,
          "key.namelength": 45,
          "key.nameline": 353,
          "key.nameoffset": 19744,
          "key.offset": 19739,
          "key.parsed_declaration": "@inlinable final func _markBackup(_ rb: RingByteBuffer, count: Int) -> Int",
          "key.parsed_scope.end": 359,
          "key.parsed_scope.start": 353,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC11_markBackup5countS2i_tF\">_markBackup(count:)<\/RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>var bytes: [<Type usr=\"s:s5UInt8V\">UInt8<\/Type>]<\/Declaration>",
              "key.column": 9,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>bytes<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 61,
              "key.line": 355,
              "key.name": "bytes",
              "key.namecolumn": 13,
              "key.namelength": 5,
              "key.nameline": 355,
              "key.nameoffset": 19857,
              "key.offset": 19853,
              "key.parsed_declaration": "var bytes: [UInt8] = Array<UInt8>(repeating: 0, count: count)",
              "key.parsed_scope.end": 355,
              "key.parsed_scope.start": 355,
              "key.typename": "[UInt8]",
              "key.typeusr": "$sSays5UInt8VGD",
              "key.usr": "s:7Rubicon15MarkInputStreamC11_markBackup_5countSiAA14RingByteBufferC_SitF5bytesL_Says5UInt8VGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let ac: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
              "key.column": 9,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>ac<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 66,
              "key.line": 356,
              "key.name": "ac",
              "key.namecolumn": 13,
              "key.namelength": 2,
              "key.nameline": 356,
              "key.nameoffset": 19927,
              "key.offset": 19923,
              "key.parsed_declaration": "let ac:    Int     = rb.getFromEnd(dest: &bytes, maxLength: count)",
              "key.parsed_scope.end": 356,
              "key.parsed_scope.start": 356,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:7Rubicon15MarkInputStreamC11_markBackup_5countSiAA14RingByteBufferC_SitF2acL_Sivp"
            }
          ],
          "key.typename": "(MarkInputStream) -> (RingByteBuffer, Int) -> Int",
          "key.typeusr": "$s_5countSi7Rubicon14RingByteBufferC_SitcD",
          "key.usr": "s:7Rubicon15MarkInputStreamC11_markBackup_5countSiAA14RingByteBufferC_SitF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable final func _read(to buf: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;, maxLength len: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.column": 16,
              "key.length": 5,
              "key.line": 369,
              "key.offset": 20408
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 369,
              "key.offset": 20397
            }
          ],
          "key.bodycolumn": 98,
          "key.bodylength": 728,
          "key.bodyline": 369,
          "key.bodyoffset": 20490,
          "key.column": 22,
          "key.doc.column": 27,
          "key.doc.comment": "Perform a read.\n\n- Parameters:\n  - buf: The receiving byte buffer.\n  - len: The maximum number of bytes to read.\n- Returns: The number of bytes actually read.",
          "key.doc.declaration": "@inlinable final func _read(to buf: UnsafeMutablePointer<UInt8>, maxLength len: Int) -> Int",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"369\" column=\"27\"><Name>_read(to:maxLength:)<\/Name><USR>s:7Rubicon15MarkInputStreamC5_read2to9maxLengthSiSpys5UInt8VG_SitF<\/USR><Declaration>@inlinable final func _read(to buf: UnsafeMutablePointer&lt;UInt8&gt;, maxLength len: Int) -&gt; Int<\/Declaration><CommentParts><Abstract><Para>Perform a read.<\/Para><\/Abstract><Parameters><Parameter><Name>buf<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The receiving byte buffer.<\/Para><\/Discussion><\/Parameter><Parameter><Name>len<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The maximum number of bytes to read.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>The number of bytes actually read.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
          "key.doc.line": 369,
          "key.doc.name": "_read(to:maxLength:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The receiving byte buffer."
                }
              ],
              "name": "buf"
            },
            {
              "discussion": [
                {
                  "Para": "The maximum number of bytes to read."
                }
              ],
              "name": "len"
            }
          ],
          "key.doc.result_discussion": [
            {
              "Para": "The number of bytes actually read."
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 211,
          "key.docline": 362,
          "key.docoffset": 20182,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_read<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>buf<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxLength<\/decl.var.parameter.argument_label> <decl.var.parameter.name>len<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 805,
          "key.line": 369,
          "key.name": "_read(to:maxLength:)",
          "key.namecolumn": 27,
          "key.namelength": 62,
          "key.nameline": 369,
          "key.nameoffset": 20419,
          "key.offset": 20414,
          "key.parsed_declaration": "@inlinable final func _read(to buf: UnsafeMutablePointer<UInt8>, maxLength len: Int) -> Int",
          "key.parsed_scope.end": 392,
          "key.parsed_scope.start": 369,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>var cc: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
              "key.column": 9,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>cc<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 10,
              "key.line": 370,
              "key.name": "cc",
              "key.namecolumn": 13,
              "key.namelength": 2,
              "key.nameline": 370,
              "key.nameoffset": 20503,
              "key.offset": 20499,
              "key.parsed_declaration": "var cc = 0",
              "key.parsed_scope.end": 370,
              "key.parsed_scope.start": 370,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:7Rubicon15MarkInputStreamC5_read2to9maxLengthSiSpys5UInt8VG_SitF2ccL_Sivp"
            }
          ],
          "key.typename": "(MarkInputStream) -> (UnsafeMutablePointer<UInt8>, Int) -> Int",
          "key.typeusr": "$s2to9maxLengthSiSpys5UInt8VG_SitcD",
          "key.usr": "s:7Rubicon15MarkInputStreamC5_read2to9maxLengthSiSpys5UInt8VG_SitF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable final func _resetReadBuffer()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.column": 16,
              "key.length": 5,
              "key.line": 397,
              "key.offset": 21461
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 397,
              "key.offset": 21450
            }
          ],
          "key.bodycolumn": 47,
          "key.bodylength": 103,
          "key.bodyline": 397,
          "key.bodyoffset": 21492,
          "key.column": 22,
          "key.doc.column": 27,
          "key.doc.comment": "Remove the current read buffer, created by a call to `getBuffer(_:length:)`, if there is one.",
          "key.doc.declaration": "@inlinable final func _resetReadBuffer()",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"397\" column=\"27\"><Name>_resetReadBuffer()<\/Name><USR>s:7Rubicon15MarkInputStreamC16_resetReadBufferyyF<\/USR><Declaration>@inlinable final func _resetReadBuffer()<\/Declaration><CommentParts><Abstract><Para>Remove the current read buffer, created by a call to <codeVoice>getBuffer(_:length:)<\/codeVoice>, if there is one.<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line": 397,
          "key.doc.name": "_resetReadBuffer()",
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 106,
          "key.docline": 395,
          "key.docoffset": 21340,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_resetReadBuffer<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 129,
          "key.line": 397,
          "key.name": "_resetReadBuffer()",
          "key.namecolumn": 27,
          "key.namelength": 18,
          "key.nameline": 397,
          "key.nameoffset": 21472,
          "key.offset": 21467,
          "key.parsed_declaration": "@inlinable final func _resetReadBuffer()",
          "key.parsed_scope.end": 402,
          "key.parsed_scope.start": 397,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC16_resetReadBufferyySpySpys5UInt8VGSgG_SpySiGtF\">_resetReadBuffer(_:_:)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "s:7Rubicon15MarkInputStreamC16_resetReadBufferyyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable final func _resetReadBuffer(_ bufferPtr: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;?&gt;, _ lengthPtr: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.column": 16,
              "key.length": 5,
              "key.line": 411,
              "key.offset": 21994
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 411,
              "key.offset": 21983
            }
          ],
          "key.bodycolumn": 150,
          "key.bodylength": 94,
          "key.bodyline": 411,
          "key.bodyoffset": 22128,
          "key.column": 22,
          "key.doc.column": 27,
          "key.doc.comment": "Remove the current read buffer, created by a call to `getBuffer(_:length:)`, if there is one.\n\n- Parameters:\n  - bufferPtr: The pointer to a buffer to be nullified.\n  - lengthPtr: The pointer to a length to be zeroed.",
          "key.doc.declaration": "@inlinable final func _resetReadBuffer(_ bufferPtr: UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>, _ lengthPtr: UnsafeMutablePointer<Int>)",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"411\" column=\"27\"><Name>_resetReadBuffer(_:_:)<\/Name><USR>s:7Rubicon15MarkInputStreamC16_resetReadBufferyySpySpys5UInt8VGSgG_SpySiGtF<\/USR><Declaration>@inlinable final func _resetReadBuffer(_ bufferPtr: UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;UInt8&gt;?&gt;, _ lengthPtr: UnsafeMutablePointer&lt;Int&gt;)<\/Declaration><CommentParts><Abstract><Para>Remove the current read buffer, created by a call to <codeVoice>getBuffer(_:length:)<\/codeVoice>, if there is one.<\/Para><\/Abstract><Parameters><Parameter><Name>bufferPtr<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The pointer to a buffer to be nullified.<\/Para><\/Discussion><\/Parameter><Parameter><Name>lengthPtr<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The pointer to a length to be zeroed.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
          "key.doc.line": 411,
          "key.doc.name": "_resetReadBuffer(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The pointer to a buffer to be nullified."
                }
              ],
              "name": "bufferPtr"
            },
            {
              "discussion": [
                {
                  "Para": "The pointer to a length to be zeroed."
                }
              ],
              "name": "lengthPtr"
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 262,
          "key.docline": 405,
          "key.docoffset": 21717,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_resetReadBuffer<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>bufferPtr<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;?&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>lengthPtr<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 223,
          "key.line": 411,
          "key.name": "_resetReadBuffer(_:_:)",
          "key.namecolumn": 27,
          "key.namelength": 121,
          "key.nameline": 411,
          "key.nameoffset": 22005,
          "key.offset": 22000,
          "key.parsed_declaration": "@inlinable final func _resetReadBuffer(_ bufferPtr: UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>, _ lengthPtr: UnsafeMutablePointer<Int>)",
          "key.parsed_scope.end": 415,
          "key.parsed_scope.start": 411,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon15MarkInputStreamC16_resetReadBufferyyF\">_resetReadBuffer()<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> (UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>, UnsafeMutablePointer<Int>) -> ()",
          "key.typeusr": "$syySpySpys5UInt8VGSgG_SpySiGtcD",
          "key.usr": "s:7Rubicon15MarkInputStreamC16_resetReadBufferyySpySpys5UInt8VGSgG_SpySiGtF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable final func _setReadBuffer(_ inputBuffer: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;, _ count: <Type usr=\"s:Si\">Int<\/Type>, _ bufferPtr: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;?&gt;, _ lengthPtr: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.column": 16,
              "key.length": 5,
              "key.line": 426,
              "key.offset": 22613
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 426,
              "key.offset": 22602
            }
          ],
          "key.bodycolumn": 206,
          "key.bodylength": 112,
          "key.bodyline": 426,
          "key.bodyoffset": 22803,
          "key.column": 22,
          "key.doc.column": 27,
          "key.doc.comment": "Set the read buffer.\n\n- Parameters:\n  - inputBuffer: The new buffer.\n  - count The number of bytes in the buffer.\n  - bufferPtr: The pointer to a buffer.\n  - lengthPtr: The pointer to a length.",
          "key.doc.declaration": "@inlinable final func _setReadBuffer(_ inputBuffer: UnsafeMutablePointer<UInt8>, _ count: Int, _ bufferPtr: UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>, _ lengthPtr: UnsafeMutablePointer<Int>)",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"426\" column=\"27\"><Name>_setReadBuffer(_:_:_:_:)<\/Name><USR>s:7Rubicon15MarkInputStreamC14_setReadBufferyySpys5UInt8VG_SiSpyAGSgGSpySiGtF<\/USR><Declaration>@inlinable final func _setReadBuffer(_ inputBuffer: UnsafeMutablePointer&lt;UInt8&gt;, _ count: Int, _ bufferPtr: UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;UInt8&gt;?&gt;, _ lengthPtr: UnsafeMutablePointer&lt;Int&gt;)<\/Declaration><CommentParts><Abstract><Para>Set the read buffer.<\/Para><\/Abstract><Parameters><Parameter><Name>inputBuffer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The new buffer.<\/Para><\/Discussion><\/Parameter><Parameter><Name>count The number of bytes in the buffer.<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><\/Para><\/Discussion><\/Parameter><Parameter><Name>bufferPtr<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The pointer to a buffer.<\/Para><\/Discussion><\/Parameter><Parameter><Name>lengthPtr<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The pointer to a length.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
          "key.doc.line": 426,
          "key.doc.name": "_setReadBuffer(_:_:_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The new buffer."
                }
              ],
              "name": "inputBuffer"
            },
            {
              "discussion": [
                {
                  "Para": ""
                }
              ],
              "name": "count The number of bytes in the buffer."
            },
            {
              "discussion": [
                {
                  "Para": "The pointer to a buffer."
                }
              ],
              "name": "bufferPtr"
            },
            {
              "discussion": [
                {
                  "Para": "The pointer to a length."
                }
              ],
              "name": "lengthPtr"
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 254,
          "key.docline": 418,
          "key.docoffset": 22344,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_setReadBuffer<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inputBuffer<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>count<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>bufferPtr<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;?&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>lengthPtr<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 297,
          "key.line": 426,
          "key.name": "_setReadBuffer(_:_:_:_:)",
          "key.namecolumn": 27,
          "key.namelength": 177,
          "key.nameline": 426,
          "key.nameoffset": 22624,
          "key.offset": 22619,
          "key.parsed_declaration": "@inlinable final func _setReadBuffer(_ inputBuffer: UnsafeMutablePointer<UInt8>, _ count: Int, _ bufferPtr: UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>, _ lengthPtr: UnsafeMutablePointer<Int>)",
          "key.parsed_scope.end": 430,
          "key.parsed_scope.start": 426,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> (UnsafeMutablePointer<UInt8>, Int, UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>, UnsafeMutablePointer<Int>) -> ()",
          "key.typeusr": "$syySpys5UInt8VG_SiSpyACSgGSpySiGtcD",
          "key.usr": "s:7Rubicon15MarkInputStreamC14_setReadBufferyySpys5UInt8VG_SiSpyAGSgGSpySiGtF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable final func _doBackground(buffer bytes: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;, size: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.column": 16,
              "key.length": 5,
              "key.line": 440,
              "key.offset": 23276
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 440,
              "key.offset": 23265
            }
          ],
          "key.bodycolumn": 104,
          "key.bodylength": 221,
          "key.bodyline": 440,
          "key.bodyoffset": 23364,
          "key.column": 22,
          "key.doc.column": 27,
          "key.doc.comment": "Start a background read.\n\n- Parameters:\n  - bytes: The buffer to use for the input.\n  - size: The size of the buffer.\n- Returns: `true` if this method can be called again.",
          "key.doc.declaration": "@inlinable final func _doBackground(buffer bytes: UnsafeMutablePointer<UInt8>, size: Int) -> Bool",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"440\" column=\"27\"><Name>_doBackground(buffer:size:)<\/Name><USR>s:7Rubicon15MarkInputStreamC13_doBackground6buffer4sizeSbSpys5UInt8VG_SitF<\/USR><Declaration>@inlinable final func _doBackground(buffer bytes: UnsafeMutablePointer&lt;UInt8&gt;, size: Int) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Start a background read.<\/Para><\/Abstract><Parameters><Parameter><Name>bytes<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The buffer to use for the input.<\/Para><\/Discussion><\/Parameter><Parameter><Name>size<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The size of the buffer.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if this method can be called again.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
          "key.doc.line": 440,
          "key.doc.name": "_doBackground(buffer:size:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The buffer to use for the input."
                }
              ],
              "name": "bytes"
            },
            {
              "discussion": [
                {
                  "Para": "The size of the buffer."
                }
              ],
              "name": "size"
            }
          ],
          "key.doc.result_discussion": [
            {
              "Para": "`true` if this method can be called again."
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 224,
          "key.docline": 433,
          "key.docoffset": 23037,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_doBackground<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>buffer<\/decl.var.parameter.argument_label> <decl.var.parameter.name>bytes<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>size<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 304,
          "key.line": 440,
          "key.name": "_doBackground(buffer:size:)",
          "key.namecolumn": 27,
          "key.namelength": 67,
          "key.nameline": 440,
          "key.nameoffset": 23287,
          "key.offset": 23282,
          "key.parsed_declaration": "@inlinable final func _doBackground(buffer bytes: UnsafeMutablePointer<UInt8>, size: Int) -> Bool",
          "key.parsed_scope.end": 446,
          "key.parsed_scope.start": 440,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> (UnsafeMutablePointer<UInt8>, Int) -> Bool",
          "key.typeusr": "$s6buffer4sizeSbSpys5UInt8VG_SitcD",
          "key.usr": "s:7Rubicon15MarkInputStreamC13_doBackground6buffer4sizeSbSpys5UInt8VG_SitF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable final func _doBackgroundRead(buffer bytes: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;, size: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.column": 16,
              "key.length": 5,
              "key.line": 456,
              "key.offset": 23965
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 456,
              "key.offset": 23954
            }
          ],
          "key.bodycolumn": 108,
          "key.bodylength": 1157,
          "key.bodyline": 456,
          "key.bodyoffset": 24057,
          "key.column": 22,
          "key.doc.column": 27,
          "key.doc.comment": "Read a chunk of data from the input stream.\n\n- Parameters:\n  - bytes: The buffer to use for the input.\n  - size: The size of the buffer.\n- Returns: `true` if this method can be called again.",
          "key.doc.declaration": "@inlinable final func _doBackgroundRead(buffer bytes: UnsafeMutablePointer<UInt8>, size: Int) -> Bool",
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift\" line=\"456\" column=\"27\"><Name>_doBackgroundRead(buffer:size:)<\/Name><USR>s:7Rubicon15MarkInputStreamC17_doBackgroundRead6buffer4sizeSbSpys5UInt8VG_SitF<\/USR><Declaration>@inlinable final func _doBackgroundRead(buffer bytes: UnsafeMutablePointer&lt;UInt8&gt;, size: Int) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Read a chunk of data from the input stream.<\/Para><\/Abstract><Parameters><Parameter><Name>bytes<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The buffer to use for the input.<\/Para><\/Discussion><\/Parameter><Parameter><Name>size<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The size of the buffer.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if this method can be called again.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
          "key.doc.line": 456,
          "key.doc.name": "_doBackgroundRead(buffer:size:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The buffer to use for the input."
                }
              ],
              "name": "bytes"
            },
            {
              "discussion": [
                {
                  "Para": "The size of the buffer."
                }
              ],
              "name": "size"
            }
          ],
          "key.doc.result_discussion": [
            {
              "Para": "`true` if this method can be called again."
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 243,
          "key.docline": 449,
          "key.docoffset": 23707,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_doBackgroundRead<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>buffer<\/decl.var.parameter.argument_label> <decl.var.parameter.name>bytes<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>size<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 1244,
          "key.line": 456,
          "key.name": "_doBackgroundRead(buffer:size:)",
          "key.namecolumn": 27,
          "key.namelength": 71,
          "key.nameline": 456,
          "key.nameoffset": 23976,
          "key.offset": 23971,
          "key.parsed_declaration": "@inlinable final func _doBackgroundRead(buffer bytes: UnsafeMutablePointer<UInt8>, size: Int) -> Bool",
          "key.parsed_scope.end": 484,
          "key.parsed_scope.start": 456,
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> (UnsafeMutablePointer<UInt8>, Int) -> Bool",
          "key.typeusr": "$s6buffer4sizeSbSpys5UInt8VG_SitcD",
          "key.usr": "s:7Rubicon15MarkInputStreamC17_doBackgroundRead6buffer4sizeSbSpys5UInt8VG_SitF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>deinit<\/Declaration>",
          "key.bodycolumn": 13,
          "key.bodylength": 98,
          "key.bodyline": 486,
          "key.bodyoffset": 25229,
          "key.column": 5,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/Streams\/MarkInputStream.swift",
          "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit<\/syntaxtype.keyword><\/decl.function.destructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 107,
          "key.line": 486,
          "key.name": "deinit",
          "key.namecolumn": 5,
          "key.namelength": 6,
          "key.nameline": 486,
          "key.nameoffset": 25221,
          "key.offset": 25221,
          "key.parsed_declaration": "deinit",
          "key.parsed_scope.end": 489,
          "key.parsed_scope.start": 486,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSInputStream(im)dealloc\">deinit<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "(MarkInputStream) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "c:@M@Rubicon@objc(cs)MarkInputStream(im)dealloc"
        }
      ],
      "key.typename": "MarkInputStream.Type",
      "key.typeusr": "$s7Rubicon15MarkInputStreamCmD",
      "key.usr": "c:@M@Rubicon@objc(cs)MarkInputStream"
    }
  ]
}
