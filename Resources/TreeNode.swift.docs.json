{
  "key.column": 1,
  "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
  "key.length": 12244,
  "key.line": 1,
  "key.offset": 0,
  "key.substructure": [
    {
      "key.accessibility": "source.lang.swift.accessibility.fileprivate",
      "key.annotated_decl": "<Declaration>fileprivate let ErrorInconsistentState: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
      "key.attributes": [
        {
          "key.attribute": "source.decl.attribute.fileprivate",
          "key.column": 1,
          "key.length": 11,
          "key.line": 26,
          "key.offset": 1119
        }
      ],
      "key.column": 13,
      "key.doc.comment": "",
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>ErrorInconsistentState<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.global>",
      "key.kind": "source.lang.swift.decl.var.global",
      "key.length": 79,
      "key.line": 26,
      "key.name": "ErrorInconsistentState",
      "key.namecolumn": 17,
      "key.namelength": 22,
      "key.nameline": 26,
      "key.nameoffset": 1135,
      "key.offset": 1131,
      "key.parsed_declaration": "fileprivate let ErrorInconsistentState: String = \"Binary tree is in an inconsistent state:\"",
      "key.parsed_scope.end": 26,
      "key.parsed_scope.start": 26,
      "key.typename": "String",
      "key.typeusr": "$sSSD",
      "key.usr": "s:7Rubicon22ErrorInconsistentState33_74472ED349219B09CB7FD93FFDC8867DLLSSvp"
    },
    {
      "key.accessibility": "source.lang.swift.accessibility.fileprivate",
      "key.annotated_decl": "<Declaration>fileprivate let ErrorMustHaveSibling: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
      "key.attributes": [
        {
          "key.attribute": "source.decl.attribute.fileprivate",
          "key.column": 1,
          "key.length": 11,
          "key.line": 27,
          "key.offset": 1211
        }
      ],
      "key.column": 13,
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>ErrorMustHaveSibling<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.global>",
      "key.kind": "source.lang.swift.decl.var.global",
      "key.length": 81,
      "key.line": 27,
      "key.name": "ErrorMustHaveSibling",
      "key.namecolumn": 17,
      "key.namelength": 20,
      "key.nameline": 27,
      "key.nameoffset": 1227,
      "key.offset": 1223,
      "key.parsed_declaration": "fileprivate let ErrorMustHaveSibling:   String = \"A black non-root node must have a sibling.\"",
      "key.parsed_scope.end": 27,
      "key.parsed_scope.start": 27,
      "key.typename": "String",
      "key.typeusr": "$sSSD",
      "key.usr": "s:7Rubicon20ErrorMustHaveSibling33_74472ED349219B09CB7FD93FFDC8867DLLSSvp"
    },
    {
      "key.accessibility": "source.lang.swift.accessibility.fileprivate",
      "key.annotated_decl": "<Declaration>fileprivate let ErrorCannotRotateLeft: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
      "key.attributes": [
        {
          "key.attribute": "source.decl.attribute.fileprivate",
          "key.column": 1,
          "key.length": 11,
          "key.line": 28,
          "key.offset": 1305
        }
      ],
      "key.column": 13,
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>ErrorCannotRotateLeft<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.global>",
      "key.kind": "source.lang.swift.decl.var.global",
      "key.length": 99,
      "key.line": 28,
      "key.name": "ErrorCannotRotateLeft",
      "key.namecolumn": 17,
      "key.namelength": 21,
      "key.nameline": 28,
      "key.nameoffset": 1321,
      "key.offset": 1317,
      "key.parsed_declaration": "fileprivate let ErrorCannotRotateLeft:  String = \"Cannot rotate node to the left. Right child node is missing.\"",
      "key.parsed_scope.end": 28,
      "key.parsed_scope.start": 28,
      "key.typename": "String",
      "key.typeusr": "$sSSD",
      "key.usr": "s:7Rubicon21ErrorCannotRotateLeft33_74472ED349219B09CB7FD93FFDC8867DLLSSvp"
    },
    {
      "key.accessibility": "source.lang.swift.accessibility.fileprivate",
      "key.annotated_decl": "<Declaration>fileprivate let ErrorCannotRotateRight: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
      "key.attributes": [
        {
          "key.attribute": "source.decl.attribute.fileprivate",
          "key.column": 1,
          "key.length": 11,
          "key.line": 29,
          "key.offset": 1417
        }
      ],
      "key.column": 13,
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>ErrorCannotRotateRight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.global>",
      "key.kind": "source.lang.swift.decl.var.global",
      "key.length": 99,
      "key.line": 29,
      "key.name": "ErrorCannotRotateRight",
      "key.namecolumn": 17,
      "key.namelength": 22,
      "key.nameline": 29,
      "key.nameoffset": 1433,
      "key.offset": 1429,
      "key.parsed_declaration": "fileprivate let ErrorCannotRotateRight: String = \"Cannot rotate node to the right. Left child node is missing.\"",
      "key.parsed_scope.end": 29,
      "key.parsed_scope.start": 29,
      "key.typename": "String",
      "key.typeusr": "$sSSD",
      "key.usr": "s:7Rubicon22ErrorCannotRotateRight33_74472ED349219B09CB7FD93FFDC8867DLLSSvp"
    },
    {
      "key.accessibility": "source.lang.swift.accessibility.open",
      "key.annotated_decl": "<Declaration>open class TreeNode&lt;K, V&gt; where <Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type> : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type> : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
      "key.attributes": [
        {
          "key.attribute": "source.decl.attribute.open",
          "key.column": 1,
          "key.length": 4,
          "key.line": 34,
          "key.offset": 1715
        }
      ],
      "key.bodycolumn": 51,
      "key.bodylength": 8701,
      "key.bodyline": 34,
      "key.bodyoffset": 1765,
      "key.column": 6,
      "key.doc.column": 12,
      "key.doc.comment": "Implements a single node for a classic Red\/Black Binary Tree.",
      "key.doc.declaration": "open class TreeNode<K, V> where K : Comparable, K : Hashable",
      "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.doc.full_as_xml": "<Class file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift\" line=\"34\" column=\"12\"><Name>TreeNode<\/Name><USR>s:7Rubicon8TreeNodeC<\/USR><Declaration>open class TreeNode&lt;K, V&gt; where K : Comparable, K : Hashable<\/Declaration><CommentParts><Abstract><Para>Implements a single node for a classic Red\/Black Binary Tree.<\/Para><\/Abstract><\/CommentParts><\/Class>",
      "key.doc.line": 34,
      "key.doc.name": "TreeNode",
      "key.doc.type": "Class",
      "key.doccolumn": 1,
      "key.doclength": 70,
      "key.docline": 32,
      "key.docoffset": 1645,
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TreeNode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\"><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
      "key.kind": "source.lang.swift.decl.class",
      "key.length": 8747,
      "key.line": 34,
      "key.name": "TreeNode",
      "key.namecolumn": 12,
      "key.namelength": 8,
      "key.nameline": 34,
      "key.nameoffset": 1726,
      "key.offset": 1720,
      "key.parsed_declaration": "open class TreeNode<K: Comparable & Hashable, V>",
      "key.parsed_scope.end": 253,
      "key.parsed_scope.start": 34,
      "key.substructure": [
        {
          "key.annotated_decl": "<Declaration>K : <Type usr=\"s:SL\">Comparable<\/Type> &amp; <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
          "key.column": 21,
          "key.elements": [
            {
              "key.column": 24,
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 21,
              "key.line": 34,
              "key.offset": 1738
            }
          ],
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol> &amp; <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
          "key.inheritedtypes": [
            {
              "key.name": "Comparable & Hashable"
            }
          ],
          "key.kind": "source.lang.swift.decl.generic_type_param",
          "key.length": 24,
          "key.line": 34,
          "key.name": "K",
          "key.namecolumn": 21,
          "key.namelength": 1,
          "key.nameline": 34,
          "key.nameoffset": 1735,
          "key.offset": 1735,
          "key.parsed_declaration": "open class TreeNode<K: Comparable & Hashable",
          "key.parsed_scope.end": 34,
          "key.parsed_scope.start": 34,
          "key.typename": "K.Type",
          "key.typeusr": "$sxmD",
          "key.usr": "s:7Rubicon8TreeNodeC1Kxmfp"
        },
        {
          "key.annotated_decl": "<Declaration>V<\/Declaration>",
          "key.column": 47,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>",
          "key.kind": "source.lang.swift.decl.generic_type_param",
          "key.length": 1,
          "key.line": 34,
          "key.name": "V",
          "key.namecolumn": 47,
          "key.namelength": 1,
          "key.nameline": 34,
          "key.nameoffset": 1761,
          "key.offset": 1761,
          "key.parsed_declaration": "open class TreeNode<K: Comparable & Hashable, V",
          "key.parsed_scope.end": 34,
          "key.parsed_scope.start": 34,
          "key.typename": "V.Type",
          "key.typeusr": "$sq_mD",
          "key.usr": "s:7Rubicon8TreeNodeC1Vq_mfp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;.Color<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 36,
              "key.offset": 1781
            }
          ],
          "key.bodycolumn": 24,
          "key.bodylength": 17,
          "key.bodyline": 36,
          "key.bodyoffset": 1800,
          "key.column": 12,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;.<decl.name>Color<\/decl.name><\/decl.enum>",
          "key.kind": "source.lang.swift.decl.enum",
          "key.length": 30,
          "key.line": 36,
          "key.name": "Color",
          "key.namecolumn": 17,
          "key.namelength": 5,
          "key.nameline": 36,
          "key.nameoffset": 1793,
          "key.offset": 1788,
          "key.parsed_declaration": "public enum Color",
          "key.parsed_scope.end": 36,
          "key.parsed_scope.start": 36,
          "key.substructure": [
            {
              "key.column": 25,
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 15,
              "key.line": 36,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 1801,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case Black<\/Declaration>",
                  "key.column": 30,
                  "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>Black<\/decl.name><\/decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 5,
                  "key.line": 36,
                  "key.name": "Black",
                  "key.namecolumn": 30,
                  "key.namelength": 5,
                  "key.nameline": 36,
                  "key.nameoffset": 1806,
                  "key.offset": 1806,
                  "key.parsed_declaration": "public enum Color { case Black",
                  "key.parsed_scope.end": 36,
                  "key.parsed_scope.start": 36,
                  "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>.Color.Type) -> TreeNode<K, V>.Color",
                  "key.typeusr": "$sy7Rubicon8TreeNodeC5ColorOyxq__GAFmcSLRzSHRzr0_luD",
                  "key.usr": "s:7Rubicon8TreeNodeC5ColorO5BlackyAEyxq__GAGmSLRzSHRzr0_lF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case Red<\/Declaration>",
                  "key.column": 37,
                  "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>Red<\/decl.name><\/decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 3,
                  "key.line": 36,
                  "key.name": "Red",
                  "key.namecolumn": 37,
                  "key.namelength": 3,
                  "key.nameline": 36,
                  "key.nameoffset": 1813,
                  "key.offset": 1813,
                  "key.parsed_declaration": "public enum Color { case Black, Red",
                  "key.parsed_scope.end": 36,
                  "key.parsed_scope.start": 36,
                  "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>.Color.Type) -> TreeNode<K, V>.Color",
                  "key.typeusr": "$sy7Rubicon8TreeNodeC5ColorOyxq__GAFmcSLRzSHRzr0_luD",
                  "key.usr": "s:7Rubicon8TreeNodeC5ColorO3RedyAEyxq__GAGmSLRzSHRzr0_lF"
                }
              ]
            }
          ],
          "key.typename": "TreeNode<K, V>.Color.Type",
          "key.typeusr": "$s7Rubicon8TreeNodeC5ColorOyxq__GmD",
          "key.usr": "s:7Rubicon8TreeNodeC5ColorO"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;.Side<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 37,
              "key.offset": 1823
            }
          ],
          "key.bodycolumn": 24,
          "key.bodylength": 26,
          "key.bodyline": 37,
          "key.bodyoffset": 1842,
          "key.column": 12,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;.<decl.name>Side<\/decl.name><\/decl.enum>",
          "key.kind": "source.lang.swift.decl.enum",
          "key.length": 39,
          "key.line": 37,
          "key.name": "Side",
          "key.namecolumn": 17,
          "key.namelength": 4,
          "key.nameline": 37,
          "key.nameoffset": 1835,
          "key.offset": 1830,
          "key.parsed_declaration": "public enum Side",
          "key.parsed_scope.end": 37,
          "key.parsed_scope.start": 37,
          "key.substructure": [
            {
              "key.column": 25,
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 24,
              "key.line": 37,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 1843,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case Orphan<\/Declaration>",
                  "key.column": 30,
                  "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>Orphan<\/decl.name><\/decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 6,
                  "key.line": 37,
                  "key.name": "Orphan",
                  "key.namecolumn": 30,
                  "key.namelength": 6,
                  "key.nameline": 37,
                  "key.nameoffset": 1848,
                  "key.offset": 1848,
                  "key.parsed_declaration": "public enum Side  { case Orphan",
                  "key.parsed_scope.end": 37,
                  "key.parsed_scope.start": 37,
                  "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>.Side.Type) -> TreeNode<K, V>.Side",
                  "key.typeusr": "$sy7Rubicon8TreeNodeC4SideOyxq__GAFmcSLRzSHRzr0_luD",
                  "key.usr": "s:7Rubicon8TreeNodeC4SideO6OrphanyAEyxq__GAGmSLRzSHRzr0_lF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case Left<\/Declaration>",
                  "key.column": 38,
                  "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>Left<\/decl.name><\/decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 4,
                  "key.line": 37,
                  "key.name": "Left",
                  "key.namecolumn": 38,
                  "key.namelength": 4,
                  "key.nameline": 37,
                  "key.nameoffset": 1856,
                  "key.offset": 1856,
                  "key.parsed_declaration": "public enum Side  { case Orphan, Left",
                  "key.parsed_scope.end": 37,
                  "key.parsed_scope.start": 37,
                  "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>.Side.Type) -> TreeNode<K, V>.Side",
                  "key.typeusr": "$sy7Rubicon8TreeNodeC4SideOyxq__GAFmcSLRzSHRzr0_luD",
                  "key.usr": "s:7Rubicon8TreeNodeC4SideO4LeftyAEyxq__GAGmSLRzSHRzr0_lF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case Right<\/Declaration>",
                  "key.column": 44,
                  "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>Right<\/decl.name><\/decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 5,
                  "key.line": 37,
                  "key.name": "Right",
                  "key.namecolumn": 44,
                  "key.namelength": 5,
                  "key.nameline": 37,
                  "key.nameoffset": 1862,
                  "key.offset": 1862,
                  "key.parsed_declaration": "public enum Side  { case Orphan, Left, Right",
                  "key.parsed_scope.end": 37,
                  "key.parsed_scope.start": 37,
                  "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>.Side.Type) -> TreeNode<K, V>.Side",
                  "key.typeusr": "$sy7Rubicon8TreeNodeC4SideOyxq__GAFmcSLRzSHRzr0_luD",
                  "key.usr": "s:7Rubicon8TreeNodeC4SideO5RightyAEyxq__GAGmSLRzSHRzr0_lF"
                }
              ]
            }
          ],
          "key.typename": "TreeNode<K, V>.Side.Type",
          "key.typeusr": "$s7Rubicon8TreeNodeC4SideOyxq__GmD",
          "key.usr": "s:7Rubicon8TreeNodeC4SideO"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public fileprivate(set) var count: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.setter_access.fileprivate",
              "key.column": 12,
              "key.length": 16,
              "key.line": 39,
              "key.offset": 1882
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 39,
              "key.offset": 1875
            }
          ],
          "key.column": 34,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>fileprivate<\/syntaxtype.keyword>(set) <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>count<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { get }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 35,
          "key.line": 39,
          "key.name": "count",
          "key.namecolumn": 38,
          "key.namelength": 5,
          "key.nameline": 39,
          "key.nameoffset": 1908,
          "key.offset": 1904,
          "key.parsed_declaration": "public fileprivate(set)      var count:      Int             = 1",
          "key.parsed_scope.end": 39,
          "key.parsed_scope.start": 39,
          "key.setter_accessibility": "source.lang.swift.accessibility.fileprivate",
          "key.typename": "Int",
          "key.typeusr": "$sSiD",
          "key.usr": "s:7Rubicon8TreeNodeC5countSivp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public fileprivate(set) var color: <Type usr=\"s:7Rubicon8TreeNodeC5ColorO\">Color<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.setter_access.fileprivate",
              "key.column": 12,
              "key.length": 16,
              "key.line": 40,
              "key.offset": 1951
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 40,
              "key.offset": 1944
            }
          ],
          "key.column": 34,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>fileprivate<\/syntaxtype.keyword>(set) <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>color<\/decl.name>: <decl.var.type><ref.enum usr=\"s:7Rubicon8TreeNodeC5ColorO\">Color<\/ref.enum><\/decl.var.type> { get }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 38,
          "key.line": 40,
          "key.name": "color",
          "key.namecolumn": 38,
          "key.namelength": 5,
          "key.nameline": 40,
          "key.nameoffset": 1977,
          "key.offset": 1973,
          "key.parsed_declaration": "public fileprivate(set)      var color:      Color           = .Red",
          "key.parsed_scope.end": 40,
          "key.parsed_scope.start": 40,
          "key.setter_accessibility": "source.lang.swift.accessibility.fileprivate",
          "key.typename": "TreeNode<K, V>.Color",
          "key.typeusr": "$s7Rubicon8TreeNodeC5ColorOyxq__GD",
          "key.usr": "s:7Rubicon8TreeNodeC5colorAC5ColorOyxq__Gvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public fileprivate(set) weak var parent: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;? { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.weak",
              "key.column": 29,
              "key.length": 4,
              "key.line": 41,
              "key.offset": 2040
            },
            {
              "key.attribute": "source.decl.attribute.setter_access.fileprivate",
              "key.column": 12,
              "key.length": 16,
              "key.line": 41,
              "key.offset": 2023
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 41,
              "key.offset": 2016
            }
          ],
          "key.column": 34,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>fileprivate<\/syntaxtype.keyword>(set) <syntaxtype.keyword>weak<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>parent<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.var.type> { get }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 37,
          "key.line": 41,
          "key.name": "parent",
          "key.namecolumn": 38,
          "key.namelength": 6,
          "key.nameline": 41,
          "key.nameoffset": 2049,
          "key.offset": 2045,
          "key.parsed_declaration": "public fileprivate(set) weak var parent:     TreeNode<K, V>? = nil",
          "key.parsed_scope.end": 41,
          "key.parsed_scope.start": 41,
          "key.setter_accessibility": "source.lang.swift.accessibility.fileprivate",
          "key.typename": "TreeNode<K, V>?",
          "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GSgD",
          "key.usr": "s:7Rubicon8TreeNodeC6parentACyxq_GSgvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public fileprivate(set) var leftChild: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;? { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.setter_access.fileprivate",
              "key.column": 12,
              "key.length": 16,
              "key.line": 42,
              "key.offset": 2094
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 42,
              "key.offset": 2087
            }
          ],
          "key.column": 34,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>fileprivate<\/syntaxtype.keyword>(set) <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>leftChild<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.var.type> { get }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 37,
          "key.line": 42,
          "key.name": "leftChild",
          "key.namecolumn": 38,
          "key.namelength": 9,
          "key.nameline": 42,
          "key.nameoffset": 2120,
          "key.offset": 2116,
          "key.parsed_declaration": "public fileprivate(set)      var leftChild:  TreeNode<K, V>? = nil",
          "key.parsed_scope.end": 42,
          "key.parsed_scope.start": 42,
          "key.setter_accessibility": "source.lang.swift.accessibility.fileprivate",
          "key.typename": "TreeNode<K, V>?",
          "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GSgD",
          "key.usr": "s:7Rubicon8TreeNodeC9leftChildACyxq_GSgvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public fileprivate(set) var rightChild: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;? { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.setter_access.fileprivate",
              "key.column": 12,
              "key.length": 16,
              "key.line": 43,
              "key.offset": 2165
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 43,
              "key.offset": 2158
            }
          ],
          "key.column": 34,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>fileprivate<\/syntaxtype.keyword>(set) <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>rightChild<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.var.type> { get }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 37,
          "key.line": 43,
          "key.name": "rightChild",
          "key.namecolumn": 38,
          "key.namelength": 10,
          "key.nameline": 43,
          "key.nameoffset": 2191,
          "key.offset": 2187,
          "key.parsed_declaration": "public fileprivate(set)      var rightChild: TreeNode<K, V>? = nil",
          "key.parsed_scope.end": 43,
          "key.parsed_scope.start": 43,
          "key.setter_accessibility": "source.lang.swift.accessibility.fileprivate",
          "key.typename": "TreeNode<K, V>?",
          "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GSgD",
          "key.usr": "s:7Rubicon8TreeNodeC10rightChildACyxq_GSgvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public fileprivate(set) var key: <Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.setter_access.fileprivate",
              "key.column": 12,
              "key.length": 16,
              "key.line": 44,
              "key.offset": 2236
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 44,
              "key.offset": 2229
            }
          ],
          "key.column": 34,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>fileprivate<\/syntaxtype.keyword>(set) <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>key<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param><\/decl.var.type> { get }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 17,
          "key.line": 44,
          "key.name": "key",
          "key.namecolumn": 38,
          "key.namelength": 3,
          "key.nameline": 44,
          "key.nameoffset": 2262,
          "key.offset": 2258,
          "key.parsed_declaration": "public fileprivate(set)      var key:        K",
          "key.parsed_scope.end": 44,
          "key.parsed_scope.start": 44,
          "key.setter_accessibility": "source.lang.swift.accessibility.fileprivate",
          "key.typename": "K",
          "key.typeusr": "$sxD",
          "key.usr": "s:7Rubicon8TreeNodeC3keyxvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public var value: <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 45,
              "key.offset": 2280
            }
          ],
          "key.column": 34,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param><\/decl.var.type><\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 17,
          "key.line": 45,
          "key.name": "value",
          "key.namecolumn": 38,
          "key.namelength": 5,
          "key.nameline": 45,
          "key.nameoffset": 2313,
          "key.offset": 2309,
          "key.parsed_declaration": "public                       var value:      V",
          "key.parsed_scope.end": 45,
          "key.parsed_scope.start": 45,
          "key.setter_accessibility": "source.lang.swift.accessibility.public",
          "key.typename": "V",
          "key.typeusr": "$sq_D",
          "key.usr": "s:7Rubicon8TreeNodeC5valueq_vp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var sibling: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;? { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 47,
              "key.offset": 2343
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 47,
              "key.offset": 2332
            }
          ],
          "key.bodycolumn": 57,
          "key.bodylength": 53,
          "key.bodyline": 47,
          "key.bodyoffset": 2384,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>sibling<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 88,
          "key.line": 47,
          "key.name": "sibling",
          "key.namecolumn": 27,
          "key.namelength": 7,
          "key.nameline": 47,
          "key.nameoffset": 2354,
          "key.offset": 2350,
          "key.parsed_declaration": "@inlinable public var sibling:     TreeNode<K, V>?",
          "key.parsed_scope.end": 47,
          "key.parsed_scope.start": 47,
          "key.typename": "TreeNode<K, V>?",
          "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GSgD",
          "key.usr": "s:7Rubicon8TreeNodeC7siblingACyxq_GSgvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var grandfather: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;? { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 48,
              "key.offset": 2454
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 48,
              "key.offset": 2443
            }
          ],
          "key.bodycolumn": 57,
          "key.bodylength": 53,
          "key.bodyline": 48,
          "key.bodyoffset": 2495,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>grandfather<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 88,
          "key.line": 48,
          "key.name": "grandfather",
          "key.namecolumn": 27,
          "key.namelength": 11,
          "key.nameline": 48,
          "key.nameoffset": 2465,
          "key.offset": 2461,
          "key.parsed_declaration": "@inlinable public var grandfather: TreeNode<K, V>?",
          "key.parsed_scope.end": 48,
          "key.parsed_scope.start": 48,
          "key.typename": "TreeNode<K, V>?",
          "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GSgD",
          "key.usr": "s:7Rubicon8TreeNodeC11grandfatherACyxq_GSgvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var uncle: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;? { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 49,
              "key.offset": 2565
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 49,
              "key.offset": 2554
            }
          ],
          "key.bodycolumn": 57,
          "key.bodylength": 53,
          "key.bodyline": 49,
          "key.bodyoffset": 2606,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>uncle<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 88,
          "key.line": 49,
          "key.name": "uncle",
          "key.namecolumn": 27,
          "key.namelength": 5,
          "key.nameline": 49,
          "key.nameoffset": 2576,
          "key.offset": 2572,
          "key.parsed_declaration": "@inlinable public var uncle:       TreeNode<K, V>?",
          "key.parsed_scope.end": 49,
          "key.parsed_scope.start": 49,
          "key.typename": "TreeNode<K, V>?",
          "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GSgD",
          "key.usr": "s:7Rubicon8TreeNodeC5uncleACyxq_GSgvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var rootNode: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt; { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 50,
              "key.offset": 2676
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 50,
              "key.offset": 2665
            }
          ],
          "key.bodycolumn": 57,
          "key.bodylength": 53,
          "key.bodyline": 50,
          "key.bodyoffset": 2717,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>rootNode<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 88,
          "key.line": 50,
          "key.name": "rootNode",
          "key.namecolumn": 27,
          "key.namelength": 8,
          "key.nameline": 50,
          "key.nameoffset": 2687,
          "key.offset": 2683,
          "key.parsed_declaration": "@inlinable public var rootNode:    TreeNode<K, V>",
          "key.parsed_scope.end": 50,
          "key.parsed_scope.start": 50,
          "key.typename": "TreeNode<K, V>",
          "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GD",
          "key.usr": "s:7Rubicon8TreeNodeC04rootC0ACyxq_Gvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var first: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt; { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 51,
              "key.offset": 2787
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 51,
              "key.offset": 2776
            }
          ],
          "key.bodycolumn": 57,
          "key.bodylength": 53,
          "key.bodyline": 51,
          "key.bodyoffset": 2828,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>first<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 88,
          "key.line": 51,
          "key.name": "first",
          "key.namecolumn": 27,
          "key.namelength": 5,
          "key.nameline": 51,
          "key.nameoffset": 2798,
          "key.offset": 2794,
          "key.parsed_declaration": "@inlinable public var first:       TreeNode<K, V>",
          "key.parsed_scope.end": 51,
          "key.parsed_scope.start": 51,
          "key.typename": "TreeNode<K, V>",
          "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GD",
          "key.usr": "s:7Rubicon8TreeNodeC5firstACyxq_Gvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var last: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt; { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 52,
              "key.offset": 2898
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 52,
              "key.offset": 2887
            }
          ],
          "key.bodycolumn": 57,
          "key.bodylength": 53,
          "key.bodyline": 52,
          "key.bodyoffset": 2939,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>last<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 88,
          "key.line": 52,
          "key.name": "last",
          "key.namecolumn": 27,
          "key.namelength": 4,
          "key.nameline": 52,
          "key.nameoffset": 2909,
          "key.offset": 2905,
          "key.parsed_declaration": "@inlinable public var last:        TreeNode<K, V>",
          "key.parsed_scope.end": 52,
          "key.parsed_scope.start": 52,
          "key.typename": "TreeNode<K, V>",
          "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GD",
          "key.usr": "s:7Rubicon8TreeNodeC4lastACyxq_Gvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var isRoot: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 53,
              "key.offset": 3009
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 53,
              "key.offset": 2998
            }
          ],
          "key.bodycolumn": 57,
          "key.bodylength": 53,
          "key.bodyline": 53,
          "key.bodyoffset": 3050,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isRoot<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 88,
          "key.line": 53,
          "key.name": "isRoot",
          "key.namecolumn": 27,
          "key.namelength": 6,
          "key.nameline": 53,
          "key.nameoffset": 3020,
          "key.offset": 3016,
          "key.parsed_declaration": "@inlinable public var isRoot:      Bool",
          "key.parsed_scope.end": 53,
          "key.parsed_scope.start": 53,
          "key.typename": "Bool",
          "key.typeusr": "$sSbD",
          "key.usr": "s:7Rubicon8TreeNodeC6isRootSbvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var index: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 54,
              "key.offset": 3120
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 54,
              "key.offset": 3109
            }
          ],
          "key.bodycolumn": 57,
          "key.bodylength": 53,
          "key.bodyline": 54,
          "key.bodyoffset": 3161,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>index<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 88,
          "key.line": 54,
          "key.name": "index",
          "key.namecolumn": 27,
          "key.namelength": 5,
          "key.nameline": 54,
          "key.nameoffset": 3131,
          "key.offset": 3127,
          "key.parsed_declaration": "@inlinable public var index:       Int",
          "key.parsed_scope.end": 54,
          "key.parsed_scope.start": 54,
          "key.typename": "Int",
          "key.typeusr": "$sSiD",
          "key.usr": "s:7Rubicon8TreeNodeC5indexSivp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var side: <Type usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 55,
              "key.offset": 3231
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 55,
              "key.offset": 3220
            }
          ],
          "key.bodycolumn": 57,
          "key.bodylength": 53,
          "key.bodyline": 55,
          "key.bodyoffset": 3272,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>side<\/decl.name>: <decl.var.type><ref.enum usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/ref.enum><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 88,
          "key.line": 55,
          "key.name": "side",
          "key.namecolumn": 27,
          "key.namelength": 4,
          "key.nameline": 55,
          "key.nameoffset": 3242,
          "key.offset": 3238,
          "key.parsed_declaration": "@inlinable public var side:        Side",
          "key.parsed_scope.end": 55,
          "key.parsed_scope.start": 55,
          "key.typename": "TreeNode<K, V>.Side",
          "key.typeusr": "$s7Rubicon8TreeNodeC4SideOyxq__GD",
          "key.usr": "s:7Rubicon8TreeNodeC4sideAC4SideOyxq__Gvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable var ccLeft: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 57,
              "key.offset": 3332
            }
          ],
          "key.bodycolumn": 34,
          "key.bodylength": 26,
          "key.bodyline": 57,
          "key.bodyoffset": 3361,
          "key.column": 16,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>ccLeft<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 45,
          "key.line": 57,
          "key.name": "ccLeft",
          "key.namecolumn": 20,
          "key.namelength": 6,
          "key.nameline": 57,
          "key.nameoffset": 3347,
          "key.offset": 3343,
          "key.parsed_declaration": "@inlinable var ccLeft:  Int",
          "key.parsed_scope.end": 57,
          "key.parsed_scope.start": 57,
          "key.typename": "Int",
          "key.typeusr": "$sSiD",
          "key.usr": "s:7Rubicon8TreeNodeC6ccLeftSivp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable var ccRight: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 58,
              "key.offset": 3393
            }
          ],
          "key.bodycolumn": 34,
          "key.bodylength": 26,
          "key.bodyline": 58,
          "key.bodyoffset": 3422,
          "key.column": 16,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>ccRight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 45,
          "key.line": 58,
          "key.name": "ccRight",
          "key.namecolumn": 20,
          "key.namelength": 7,
          "key.nameline": 58,
          "key.nameoffset": 3408,
          "key.offset": 3404,
          "key.parsed_declaration": "@inlinable var ccRight: Int",
          "key.parsed_scope.end": 58,
          "key.parsed_scope.start": 58,
          "key.typename": "Int",
          "key.typeusr": "$sSiD",
          "key.usr": "s:7Rubicon8TreeNodeC7ccRightSivp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable var pIndex: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 59,
              "key.offset": 3454
            }
          ],
          "key.bodycolumn": 34,
          "key.bodylength": 26,
          "key.bodyline": 59,
          "key.bodyoffset": 3483,
          "key.column": 16,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>pIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 45,
          "key.line": 59,
          "key.name": "pIndex",
          "key.namecolumn": 20,
          "key.namelength": 6,
          "key.nameline": 59,
          "key.nameoffset": 3469,
          "key.offset": 3465,
          "key.parsed_declaration": "@inlinable var pIndex:  Int",
          "key.parsed_scope.end": 59,
          "key.parsed_scope.start": 59,
          "key.typename": "Int",
          "key.typeusr": "$sSiD",
          "key.usr": "s:7Rubicon8TreeNodeC6pIndexSivp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable var lIndex: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 60,
              "key.offset": 3515
            }
          ],
          "key.bodycolumn": 34,
          "key.bodylength": 26,
          "key.bodyline": 60,
          "key.bodyoffset": 3544,
          "key.column": 16,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>lIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 45,
          "key.line": 60,
          "key.name": "lIndex",
          "key.namecolumn": 20,
          "key.namelength": 6,
          "key.nameline": 60,
          "key.nameoffset": 3530,
          "key.offset": 3526,
          "key.parsed_declaration": "@inlinable var lIndex:  Int",
          "key.parsed_scope.end": 60,
          "key.parsed_scope.start": 60,
          "key.typename": "Int",
          "key.typeusr": "$sSiD",
          "key.usr": "s:7Rubicon8TreeNodeC6lIndexSivp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@inlinable var rIndex: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 61,
              "key.offset": 3576
            }
          ],
          "key.bodycolumn": 34,
          "key.bodylength": 26,
          "key.bodyline": 61,
          "key.bodyoffset": 3605,
          "key.column": 16,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>rIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 45,
          "key.line": 61,
          "key.name": "rIndex",
          "key.namecolumn": 20,
          "key.namelength": 6,
          "key.nameline": 61,
          "key.nameoffset": 3591,
          "key.offset": 3587,
          "key.parsed_declaration": "@inlinable var rIndex:  Int",
          "key.parsed_scope.end": 61,
          "key.parsed_scope.start": 61,
          "key.typename": "Int",
          "key.typeusr": "$sSiD",
          "key.usr": "s:7Rubicon8TreeNodeC6rIndexSivp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public init(key: <Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, value: <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 64,
              "key.offset": 3649
            }
          ],
          "key.bodycolumn": 36,
          "key.bodylength": 83,
          "key.bodyline": 64,
          "key.bodyoffset": 3680,
          "key.column": 12,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>key<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>value<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 108,
          "key.line": 64,
          "key.name": "init(key:value:)",
          "key.namecolumn": 12,
          "key.namelength": 22,
          "key.nameline": 64,
          "key.nameoffset": 3656,
          "key.offset": 3656,
          "key.parsed_declaration": "public init(key: K, value: V)",
          "key.parsed_scope.end": 68,
          "key.parsed_scope.start": 64,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon8TreeNodeC3key5value6parentACyxq_Gx_q_AGtc33_74472ED349219B09CB7FD93FFDC8867DLlfc\">init(key:value:parent:)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>.Type) -> (K, V) -> TreeNode<K, V>",
          "key.typeusr": "$s3key5value7Rubicon8TreeNodeCyxq_Gx_q_tcD",
          "key.usr": "s:7Rubicon8TreeNodeC3key5valueACyxq_Gx_q_tcfc"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.private",
          "key.annotated_decl": "<Declaration>private init(key: <Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, value: <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>, parent: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.private",
              "key.column": 5,
              "key.length": 7,
              "key.line": 70,
              "key.offset": 3770
            }
          ],
          "key.bodycolumn": 61,
          "key.bodylength": 110,
          "key.bodyline": 70,
          "key.bodyoffset": 3826,
          "key.column": 13,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>key<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>value<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>parent<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 159,
          "key.line": 70,
          "key.name": "init(key:value:parent:)",
          "key.namecolumn": 13,
          "key.namelength": 46,
          "key.nameline": 70,
          "key.nameoffset": 3778,
          "key.offset": 3778,
          "key.parsed_declaration": "private init(key: K, value: V, parent: TreeNode<K, V>)",
          "key.parsed_scope.end": 75,
          "key.parsed_scope.start": 70,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon8TreeNodeC3key5valueACyxq_Gx_q_tcfc\">init(key:value:)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>.Type) -> (K, V, TreeNode<K, V>) -> TreeNode<K, V>",
          "key.typeusr": "$s3key5value6parent7Rubicon8TreeNodeCyxq_Gx_q_AGtcD",
          "key.usr": "s:7Rubicon8TreeNodeC3key5value6parentACyxq_Gx_q_AGtc33_74472ED349219B09CB7FD93FFDC8867DLlfc"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.open",
          "key.annotated_decl": "<Declaration>deinit<\/Declaration>",
          "key.bodycolumn": 13,
          "key.bodylength": 58,
          "key.bodyline": 77,
          "key.bodyoffset": 3951,
          "key.column": 5,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit<\/syntaxtype.keyword><\/decl.function.destructor>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 67,
          "key.line": 77,
          "key.name": "deinit",
          "key.namecolumn": 5,
          "key.namelength": 6,
          "key.nameline": 77,
          "key.nameoffset": 3943,
          "key.offset": 3943,
          "key.parsed_declaration": "deinit",
          "key.parsed_scope.end": 79,
          "key.parsed_scope.start": 77,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "s:7Rubicon8TreeNodeCfd"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public subscript(key: <Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>) -&gt; <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;? { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 81,
              "key.offset": 4016
            }
          ],
          "key.bodycolumn": 50,
          "key.bodylength": 201,
          "key.bodyline": 81,
          "key.bodyoffset": 4061,
          "key.column": 12,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
          "key.kind": "source.lang.swift.decl.function.subscript",
          "key.length": 240,
          "key.line": 81,
          "key.name": "subscript(_:)",
          "key.namecolumn": 12,
          "key.namelength": 17,
          "key.nameline": 81,
          "key.nameoffset": 4023,
          "key.offset": 4023,
          "key.parsed_declaration": "public subscript(key: K) -> TreeNode<K, V>?",
          "key.parsed_scope.end": 87,
          "key.parsed_scope.start": 81,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon8TreeNodeCyACyxq_GSgAA9ShadowIntVcip\">subscript(_:)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (K) -> TreeNode<K, V>?",
          "key.typeusr": "$sy7Rubicon8TreeNodeCyxq_GSgxcD",
          "key.usr": "s:7Rubicon8TreeNodeCyACyxq_GSgxcip"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public subscript(position: <Type usr=\"s:7Rubicon20BinaryTreeDictionaryC\">BinaryTreeDictionary<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;.<Type usr=\"s:7Rubicon20BinaryTreeDictionaryC5Indexa\">Index<\/Type>) -&gt; <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;? { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 89,
              "key.offset": 4269
            }
          ],
          "key.bodycolumn": 86,
          "key.bodylength": 42,
          "key.bodyline": 89,
          "key.bodyoffset": 4350,
          "key.column": 12,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>position<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon20BinaryTreeDictionaryC\">BinaryTreeDictionary<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;.<ref.typealias usr=\"s:7Rubicon20BinaryTreeDictionaryC5Indexa\">Index<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
          "key.kind": "source.lang.swift.decl.function.subscript",
          "key.length": 117,
          "key.line": 89,
          "key.name": "subscript(_:)",
          "key.namecolumn": 12,
          "key.namelength": 53,
          "key.nameline": 89,
          "key.nameoffset": 4276,
          "key.offset": 4276,
          "key.parsed_declaration": "public subscript(position: BinaryTreeDictionary<K, V>.Index) -> TreeNode<K, V>?",
          "key.parsed_scope.end": 91,
          "key.parsed_scope.start": 89,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon8TreeNodeCyACyxq_GSgxcip\">subscript(_:)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (ShadowInt) -> TreeNode<K, V>?",
          "key.typeusr": "$sy7Rubicon8TreeNodeCyxq_GSgAA9ShadowIntVcD",
          "key.usr": "s:7Rubicon8TreeNodeCyACyxq_GSgAA9ShadowIntVcip"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func getBy(index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;?<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 93,
              "key.offset": 4399
            }
          ],
          "key.bodycolumn": 55,
          "key.bodylength": 235,
          "key.bodyline": 93,
          "key.bodyoffset": 4449,
          "key.column": 12,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getBy<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>index<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 279,
          "key.line": 93,
          "key.name": "getBy(index:)",
          "key.namecolumn": 17,
          "key.namelength": 17,
          "key.nameline": 93,
          "key.nameoffset": 4411,
          "key.offset": 4406,
          "key.parsed_declaration": "public func getBy(index: Int) -> TreeNode<K, V>?",
          "key.parsed_scope.end": 99,
          "key.parsed_scope.start": 93,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> (Int) -> TreeNode<K, V>?",
          "key.typeusr": "$s5index7Rubicon8TreeNodeCyxq_GSgSi_tcD",
          "key.usr": "s:7Rubicon8TreeNodeC5getBy5indexACyxq_GSgSi_tF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func forEach(execute body: (<Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;) throws -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>) rethrows<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.rethrows",
              "key.column": 72,
              "key.length": 8,
              "key.line": 101,
              "key.offset": 4758
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 101,
              "key.offset": 4691
            }
          ],
          "key.bodycolumn": 82,
          "key.bodylength": 153,
          "key.bodyline": 101,
          "key.bodyoffset": 4768,
          "key.column": 12,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>forEach<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>execute<\/decl.var.parameter.argument_label> <decl.var.parameter.name>body<\/decl.var.parameter.name>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>rethrows<\/syntaxtype.keyword><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 224,
          "key.line": 101,
          "key.name": "forEach(execute:)",
          "key.namecolumn": 17,
          "key.namelength": 54,
          "key.nameline": 101,
          "key.nameoffset": 4703,
          "key.offset": 4698,
          "key.parsed_declaration": "public func forEach(execute body: (TreeNode<K, V>) throws -> Void) rethrows",
          "key.parsed_scope.end": 105,
          "key.parsed_scope.start": 101,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> ((TreeNode<K, V>) throws -> ()) throws -> ()",
          "key.typeusr": "$s7executeyy7Rubicon8TreeNodeCyxq_GKXE_tKcD",
          "key.usr": "s:7Rubicon8TreeNodeC7forEach7executeyyACyxq_GKXE_tKF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func forEachReversed(execute body: (<Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;) throws -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>) rethrows<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.rethrows",
              "key.column": 80,
              "key.length": 8,
              "key.line": 107,
              "key.offset": 5003
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 107,
              "key.offset": 4928
            }
          ],
          "key.bodycolumn": 90,
          "key.bodylength": 153,
          "key.bodyline": 107,
          "key.bodyoffset": 5013,
          "key.column": 12,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>forEachReversed<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>execute<\/decl.var.parameter.argument_label> <decl.var.parameter.name>body<\/decl.var.parameter.name>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>rethrows<\/syntaxtype.keyword><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 232,
          "key.line": 107,
          "key.name": "forEachReversed(execute:)",
          "key.namecolumn": 17,
          "key.namelength": 62,
          "key.nameline": 107,
          "key.nameoffset": 4940,
          "key.offset": 4935,
          "key.parsed_declaration": "public func forEachReversed(execute body: (TreeNode<K, V>) throws -> Void) rethrows",
          "key.parsed_scope.end": 111,
          "key.parsed_scope.start": 107,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> ((TreeNode<K, V>) throws -> ()) throws -> ()",
          "key.typeusr": "$s7executeyy7Rubicon8TreeNodeCyxq_GKXE_tKcD",
          "key.usr": "s:7Rubicon8TreeNodeC15forEachReversed7executeyyACyxq_GKXE_tKF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func add(key: <Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, value: <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>) -&gt; <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 113,
              "key.offset": 5173
            }
          ],
          "key.bodycolumn": 58,
          "key.bodylength": 673,
          "key.bodyline": 113,
          "key.bodyoffset": 5226,
          "key.column": 12,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>add<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>key<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>value<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 720,
          "key.line": 113,
          "key.name": "add(key:value:)",
          "key.namecolumn": 17,
          "key.namelength": 21,
          "key.nameline": 113,
          "key.nameoffset": 5185,
          "key.offset": 5180,
          "key.parsed_declaration": "public func add(key: K, value: V) -> TreeNode<K, V>",
          "key.parsed_scope.end": 129,
          "key.parsed_scope.start": 113,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> (K, V) -> TreeNode<K, V>",
          "key.typeusr": "$s3key5value7Rubicon8TreeNodeCyxq_Gx_q_tcD",
          "key.usr": "s:7Rubicon8TreeNodeC3add3key5valueACyxq_Gx_q_tF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.private",
          "key.annotated_decl": "<Declaration>private func addRebalance() -&gt; <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.private",
              "key.column": 5,
              "key.length": 7,
              "key.line": 131,
              "key.offset": 5906
            }
          ],
          "key.bodycolumn": 52,
          "key.bodylength": 393,
          "key.bodyline": 131,
          "key.bodyoffset": 5953,
          "key.column": 13,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addRebalance<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 433,
          "key.line": 131,
          "key.name": "addRebalance()",
          "key.namecolumn": 18,
          "key.namelength": 14,
          "key.nameline": 131,
          "key.nameoffset": 5919,
          "key.offset": 5914,
          "key.parsed_declaration": "private func addRebalance() -> TreeNode<K, V>",
          "key.parsed_scope.end": 139,
          "key.parsed_scope.start": 131,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> () -> TreeNode<K, V>",
          "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GycD",
          "key.usr": "s:7Rubicon8TreeNodeC12addRebalance33_74472ED349219B09CB7FD93FFDC8867DLLACyxq_GyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.private",
          "key.annotated_decl": "<Declaration>private func addRebalance2(parent p: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;, grandparent g: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;) -&gt; <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.private",
              "key.column": 5,
              "key.length": 7,
              "key.line": 141,
              "key.offset": 6353
            }
          ],
          "key.bodycolumn": 108,
          "key.bodylength": 177,
          "key.bodyline": 141,
          "key.bodyoffset": 6456,
          "key.column": 13,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addRebalance2<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>parent<\/decl.var.parameter.argument_label> <decl.var.parameter.name>p<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>grandparent<\/decl.var.parameter.argument_label> <decl.var.parameter.name>g<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 273,
          "key.line": 141,
          "key.name": "addRebalance2(parent:grandparent:)",
          "key.namecolumn": 18,
          "key.namelength": 70,
          "key.nameline": 141,
          "key.nameoffset": 6366,
          "key.offset": 6361,
          "key.parsed_declaration": "private func addRebalance2(parent p: TreeNode<K, V>, grandparent g: TreeNode<K, V>) -> TreeNode<K, V>",
          "key.parsed_scope.end": 146,
          "key.parsed_scope.start": 141,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>let pSide: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;.<Type usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/Type><\/Declaration>",
              "key.column": 9,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>pSide<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;.<ref.enum usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/ref.enum><\/decl.var.type><\/decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 18,
              "key.line": 142,
              "key.name": "pSide",
              "key.namecolumn": 13,
              "key.namelength": 5,
              "key.nameline": 142,
              "key.nameoffset": 6469,
              "key.offset": 6465,
              "key.parsed_declaration": "let pSide = p.side",
              "key.parsed_scope.end": 142,
              "key.parsed_scope.start": 142,
              "key.typename": "TreeNode<K, V>.Side",
              "key.typeusr": "$s7Rubicon8TreeNodeC4SideOyxq__GD",
              "key.usr": "s:7Rubicon8TreeNodeC13addRebalance233_74472ED349219B09CB7FD93FFDC8867DLL6parent11grandparentACyxq_GAH_AHtF5pSideL_AC0M0Oyxq__Gvp"
            }
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> (TreeNode<K, V>, TreeNode<K, V>) -> TreeNode<K, V>",
          "key.typeusr": "$s6parent11grandparent7Rubicon8TreeNodeCyxq_GAF_AFtcD",
          "key.usr": "s:7Rubicon8TreeNodeC13addRebalance233_74472ED349219B09CB7FD93FFDC8867DLL6parent11grandparentACyxq_GAH_AHtF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func remove() -&gt; <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;?<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 148,
              "key.offset": 6640
            }
          ],
          "key.bodycolumn": 46,
          "key.bodylength": 605,
          "key.bodyline": 148,
          "key.bodyoffset": 6681,
          "key.column": 12,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>remove<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 640,
          "key.line": 148,
          "key.name": "remove()",
          "key.namecolumn": 17,
          "key.namelength": 8,
          "key.nameline": 148,
          "key.nameoffset": 6652,
          "key.offset": 6647,
          "key.parsed_declaration": "public func remove() -> TreeNode<K, V>?",
          "key.parsed_scope.end": 167,
          "key.parsed_scope.start": 148,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> () -> TreeNode<K, V>?",
          "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GSgycD",
          "key.usr": "s:7Rubicon8TreeNodeC6removeACyxq_GSgyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.private",
          "key.annotated_decl": "<Declaration>private func removeRebalance(parent p: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.private",
              "key.column": 5,
              "key.length": 7,
              "key.line": 169,
              "key.offset": 7293
            }
          ],
          "key.bodycolumn": 61,
          "key.bodylength": 806,
          "key.bodyline": 169,
          "key.bodyoffset": 7349,
          "key.column": 13,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>removeRebalance<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>parent<\/decl.var.parameter.argument_label> <decl.var.parameter.name>p<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 855,
          "key.line": 169,
          "key.name": "removeRebalance(parent:)",
          "key.namecolumn": 18,
          "key.namelength": 41,
          "key.nameline": 169,
          "key.nameoffset": 7306,
          "key.offset": 7301,
          "key.parsed_declaration": "private func removeRebalance(parent p: TreeNode<K, V>)",
          "key.parsed_scope.end": 189,
          "key.parsed_scope.start": 169,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>let nSide: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;.<Type usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/Type><\/Declaration>",
              "key.column": 9,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>nSide<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;.<ref.enum usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/ref.enum><\/decl.var.type><\/decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 16,
              "key.line": 171,
              "key.name": "nSide",
              "key.namecolumn": 13,
              "key.namelength": 5,
              "key.nameline": 171,
              "key.nameoffset": 7442,
              "key.offset": 7438,
              "key.parsed_declaration": "let nSide = side",
              "key.parsed_scope.end": 171,
              "key.parsed_scope.start": 171,
              "key.typename": "TreeNode<K, V>.Side",
              "key.typeusr": "$s7Rubicon8TreeNodeC4SideOyxq__GD",
              "key.usr": "s:7Rubicon8TreeNodeC15removeRebalance33_74472ED349219B09CB7FD93FFDC8867DLL6parentyACyxq_G_tF5nSideL_AC0L0Oyxq__Gvp"
            }
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> (TreeNode<K, V>) -> ()",
          "key.typeusr": "$s6parenty7Rubicon8TreeNodeCyxq_G_tcD",
          "key.usr": "s:7Rubicon8TreeNodeC15removeRebalance33_74472ED349219B09CB7FD93FFDC8867DLL6parentyACyxq_G_tF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.private",
          "key.annotated_decl": "<Declaration>private func makeOrphan()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.private",
              "key.column": 5,
              "key.length": 7,
              "key.line": 191,
              "key.offset": 8162
            }
          ],
          "key.bodycolumn": 32,
          "key.bodylength": 28,
          "key.bodyline": 191,
          "key.bodyoffset": 8189,
          "key.column": 13,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeOrphan<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 48,
          "key.line": 191,
          "key.name": "makeOrphan()",
          "key.namecolumn": 18,
          "key.namelength": 12,
          "key.nameline": 191,
          "key.nameoffset": 8175,
          "key.offset": 8170,
          "key.parsed_declaration": "private func makeOrphan()",
          "key.parsed_scope.end": 191,
          "key.parsed_scope.start": 191,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "s:7Rubicon8TreeNodeC10makeOrphan33_74472ED349219B09CB7FD93FFDC8867DLLyyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.private",
          "key.annotated_decl": "<Declaration>private func set(child: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;?, on side: <Type usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.private",
              "key.column": 5,
              "key.length": 7,
              "key.line": 193,
              "key.offset": 8224
            }
          ],
          "key.bodycolumn": 62,
          "key.bodylength": 153,
          "key.bodyline": 193,
          "key.bodyoffset": 8281,
          "key.column": 13,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>child<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>side<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 203,
          "key.line": 193,
          "key.name": "set(child:on:)",
          "key.namecolumn": 18,
          "key.namelength": 42,
          "key.nameline": 193,
          "key.nameoffset": 8237,
          "key.offset": 8232,
          "key.parsed_declaration": "private func set(child: TreeNode<K, V>?, on side: Side)",
          "key.parsed_scope.end": 198,
          "key.parsed_scope.start": 193,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> (TreeNode<K, V>?, TreeNode<K, V>.Side) -> ()",
          "key.typeusr": "$s5child2ony7Rubicon8TreeNodeCyxq_GSg_AE4SideOyxq__GtcD",
          "key.usr": "s:7Rubicon8TreeNodeC3set33_74472ED349219B09CB7FD93FFDC8867DLL5child2onyACyxq_GSg_AC4SideOyxq__GtF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.private",
          "key.annotated_decl": "<Declaration>private func foo(_ node: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;?, on side: <Type usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.private",
              "key.column": 5,
              "key.length": 7,
              "key.line": 200,
              "key.offset": 8441
            }
          ],
          "key.bodycolumn": 63,
          "key.bodylength": 112,
          "key.bodyline": 200,
          "key.bodyoffset": 8499,
          "key.column": 13,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>foo<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>side<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 163,
          "key.line": 200,
          "key.name": "foo(_:on:)",
          "key.namecolumn": 18,
          "key.namelength": 43,
          "key.nameline": 200,
          "key.nameoffset": 8454,
          "key.offset": 8449,
          "key.parsed_declaration": "private func foo(_ node: TreeNode<K, V>?, on side: Side)",
          "key.parsed_scope.end": 204,
          "key.parsed_scope.start": 200,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> (TreeNode<K, V>?, TreeNode<K, V>.Side) -> ()",
          "key.typeusr": "$s_2ony7Rubicon8TreeNodeCyxq_GSg_AD4SideOyxq__GtcD",
          "key.usr": "s:7Rubicon8TreeNodeC3foo33_74472ED349219B09CB7FD93FFDC8867DLL_2onyACyxq_GSg_AC4SideOyxq__GtF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline func getChild(fromThe side: <Type usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/Type>) -&gt; <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;?<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.column": 5,
              "key.length": 17,
              "key.line": 206,
              "key.offset": 8618
            }
          ],
          "key.bodycolumn": 77,
          "key.bodylength": 63,
          "key.bodyline": 206,
          "key.bodyoffset": 8690,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>fromThe<\/decl.var.parameter.argument_label> <decl.var.parameter.name>side<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 118,
          "key.line": 206,
          "key.name": "getChild(fromThe:)",
          "key.namecolumn": 28,
          "key.namelength": 28,
          "key.nameline": 206,
          "key.nameoffset": 8641,
          "key.offset": 8636,
          "key.parsed_declaration": "@usableFromInline func getChild(fromThe side: Side) -> TreeNode<K, V>?",
          "key.parsed_scope.end": 206,
          "key.parsed_scope.start": 206,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon8TreeNodeC8getChild33_74472ED349219B09CB7FD93FFDC8867DLL7fromThe12errorMessageACyxq_GAC4SideOyxq__G_SStF\">getChild(fromThe:errorMessage:)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> (TreeNode<K, V>.Side) -> TreeNode<K, V>?",
          "key.typeusr": "$s7fromThe7Rubicon8TreeNodeCyxq_GSgAD4SideOyxq__G_tcD",
          "key.usr": "s:7Rubicon8TreeNodeC8getChild7fromTheACyxq_GSgAC4SideOyxq__G_tF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.private",
          "key.annotated_decl": "<Declaration>private func getChild(fromThe side: <Type usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/Type>, errorMessage msg: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.private",
              "key.column": 5,
              "key.length": 7,
              "key.line": 208,
              "key.offset": 8760
            }
          ],
          "key.bodycolumn": 92,
          "key.bodylength": 93,
          "key.bodyline": 208,
          "key.bodyoffset": 8847,
          "key.column": 13,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>fromThe<\/decl.var.parameter.argument_label> <decl.var.parameter.name>side<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>errorMessage<\/decl.var.parameter.argument_label> <decl.var.parameter.name>msg<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 173,
          "key.line": 208,
          "key.name": "getChild(fromThe:errorMessage:)",
          "key.namecolumn": 18,
          "key.namelength": 54,
          "key.nameline": 208,
          "key.nameoffset": 8773,
          "key.offset": 8768,
          "key.parsed_declaration": "private func getChild(fromThe side: Side, errorMessage msg: String) -> TreeNode<K, V>",
          "key.parsed_scope.end": 211,
          "key.parsed_scope.start": 208,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:7Rubicon8TreeNodeC8getChild7fromTheACyxq_GSgAC4SideOyxq__G_tF\">getChild(fromThe:)<\/RelatedName>"
            }
          ],
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> (TreeNode<K, V>.Side, String) -> TreeNode<K, V>",
          "key.typeusr": "$s7fromThe12errorMessage7Rubicon8TreeNodeCyxq_GAE4SideOyxq__G_SStcD",
          "key.usr": "s:7Rubicon8TreeNodeC8getChild33_74472ED349219B09CB7FD93FFDC8867DLL7fromThe12errorMessageACyxq_GAC4SideOyxq__G_SStF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.private",
          "key.annotated_decl": "<Declaration>private func fail(errorMessage msg: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:s5NeverO\">Never<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.private",
              "key.column": 5,
              "key.length": 7,
              "key.line": 213,
              "key.offset": 8947
            }
          ],
          "key.bodycolumn": 59,
          "key.bodylength": 60,
          "key.bodyline": 213,
          "key.bodyoffset": 9001,
          "key.column": 13,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fail<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>errorMessage<\/decl.var.parameter.argument_label> <decl.var.parameter.name>msg<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:s5NeverO\">Never<\/ref.enum><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 107,
          "key.line": 213,
          "key.name": "fail(errorMessage:)",
          "key.namecolumn": 18,
          "key.namelength": 30,
          "key.nameline": 213,
          "key.nameoffset": 8960,
          "key.offset": 8955,
          "key.parsed_declaration": "private func fail(errorMessage msg: String) -> Never",
          "key.parsed_scope.end": 215,
          "key.parsed_scope.start": 213,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> (String) -> Never",
          "key.typeusr": "$s12errorMessages5NeverOSS_tcD",
          "key.usr": "s:7Rubicon8TreeNodeC4fail33_74472ED349219B09CB7FD93FFDC8867DLL12errorMessages5NeverOSS_tF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.private",
          "key.annotated_decl": "<Declaration>private func rotate(toThe side: <Type usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.private",
              "key.column": 5,
              "key.length": 7,
              "key.line": 226,
              "key.offset": 9621
            }
          ],
          "key.bodycolumn": 44,
          "key.bodylength": 409,
          "key.bodyline": 226,
          "key.bodyoffset": 9660,
          "key.column": 13,
          "key.doc.column": 18,
          "key.doc.comment": "Rotate this node to either the left or the right according to the boolean value given for `toTheLeft`.\n\nNOTE: This method will automatically adjust the counts for all involved nodes so there is no need to do a\nrecount after calling this method.\n\n- Parameter l: If `true` then this node will be rotated to the left. If `false` it will be rotated to the\n               right.",
          "key.doc.declaration": "private func rotate(toThe side: Side)",
          "key.doc.discussion": [
            {
              "Para": "NOTE: This method will automatically adjust the counts for all involved nodes so there is no need to do a recount after calling this method."
            }
          ],
          "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.doc.full_as_xml": "<Function file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift\" line=\"226\" column=\"18\"><Name>rotate(toThe:)<\/Name><USR>s:7Rubicon8TreeNodeC6rotate33_74472ED349219B09CB7FD93FFDC8867DLL5toTheyAC4SideOyxq__G_tF<\/USR><Declaration>private func rotate(toThe side: Side)<\/Declaration><CommentParts><Abstract><Para>Rotate this node to either the left or the right according to the boolean value given for <codeVoice>toTheLeft<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>l<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>If <codeVoice>true<\/codeVoice> then this node will be rotated to the left. If <codeVoice>false<\/codeVoice> it will be rotated to the right.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>NOTE: This method will automatically adjust the counts for all involved nodes so there is no need to do a recount after calling this method.<\/Para><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.line": 226,
          "key.doc.name": "rotate(toThe:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "If `true` then this node will be rotated to the left. If `false` it will be rotated to the right."
                }
              ],
              "name": "l"
            }
          ],
          "key.doc.type": "Function",
          "key.doccolumn": 5,
          "key.doclength": 434,
          "key.docline": 218,
          "key.docoffset": 9183,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>rotate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>toThe<\/decl.var.parameter.argument_label> <decl.var.parameter.name>side<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 441,
          "key.line": 226,
          "key.name": "rotate(toThe:)",
          "key.namecolumn": 18,
          "key.namelength": 24,
          "key.nameline": 226,
          "key.nameoffset": 9634,
          "key.offset": 9629,
          "key.parsed_declaration": "private func rotate(toThe side: Side)",
          "key.parsed_scope.end": 236,
          "key.parsed_scope.start": 226,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>let nSide: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;.<Type usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/Type><\/Declaration>",
              "key.column": 9,
              "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>nSide<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;.<ref.enum usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/ref.enum><\/decl.var.type><\/decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 16,
              "key.line": 227,
              "key.name": "nSide",
              "key.namecolumn": 13,
              "key.namelength": 5,
              "key.nameline": 227,
              "key.nameoffset": 9673,
              "key.offset": 9669,
              "key.parsed_declaration": "let nSide = side",
              "key.parsed_scope.end": 227,
              "key.parsed_scope.start": 227,
              "key.typename": "TreeNode<K, V>.Side",
              "key.typeusr": "$s7Rubicon8TreeNodeC4SideOyxq__GD",
              "key.usr": "s:7Rubicon8TreeNodeC6rotate33_74472ED349219B09CB7FD93FFDC8867DLL5toTheyAC4SideOyxq__G_tF01nL0L_AIvp"
            }
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> (TreeNode<K, V>.Side) -> ()",
          "key.typeusr": "$s5toThey7Rubicon8TreeNodeC4SideOyxq__G_tcD",
          "key.usr": "s:7Rubicon8TreeNodeC6rotate33_74472ED349219B09CB7FD93FFDC8867DLL5toTheyAC4SideOyxq__G_tF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.private",
          "key.annotated_decl": "<Declaration>private func recount()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.private",
              "key.column": 5,
              "key.length": 7,
              "key.line": 238,
              "key.offset": 10076
            }
          ],
          "key.bodycolumn": 29,
          "key.bodylength": 70,
          "key.bodyline": 238,
          "key.bodyoffset": 10100,
          "key.column": 13,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>recount<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 87,
          "key.line": 238,
          "key.name": "recount()",
          "key.namecolumn": 18,
          "key.namelength": 9,
          "key.nameline": 238,
          "key.nameoffset": 10089,
          "key.offset": 10084,
          "key.parsed_declaration": "private func recount()",
          "key.parsed_scope.end": 241,
          "key.parsed_scope.start": 238,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "s:7Rubicon8TreeNodeC7recount33_74472ED349219B09CB7FD93FFDC8867DLLyyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.private",
          "key.annotated_decl": "<Declaration>private func localRecount()<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.private",
              "key.column": 5,
              "key.length": 7,
              "key.line": 243,
              "key.offset": 10177
            }
          ],
          "key.bodycolumn": 34,
          "key.bodylength": 44,
          "key.bodyline": 243,
          "key.bodyoffset": 10206,
          "key.column": 13,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>localRecount<\/decl.name>()<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 66,
          "key.line": 243,
          "key.name": "localRecount()",
          "key.namecolumn": 18,
          "key.namelength": 14,
          "key.nameline": 243,
          "key.nameoffset": 10190,
          "key.offset": 10185,
          "key.parsed_declaration": "private func localRecount()",
          "key.parsed_scope.end": 245,
          "key.parsed_scope.start": 243,
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> () -> ()",
          "key.typeusr": "$syycD",
          "key.usr": "s:7Rubicon8TreeNodeC12localRecount33_74472ED349219B09CB7FD93FFDC8867DLLyyF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@discardableResult func hardRecount() -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.discardableResult",
              "key.column": 5,
              "key.length": 18,
              "key.line": 247,
              "key.offset": 10257
            }
          ],
          "key.bodycolumn": 51,
          "key.bodylength": 161,
          "key.bodyline": 247,
          "key.bodyoffset": 10303,
          "key.column": 24,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hardRecount<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 189,
          "key.line": 247,
          "key.name": "hardRecount()",
          "key.namecolumn": 29,
          "key.namelength": 13,
          "key.nameline": 247,
          "key.nameoffset": 10281,
          "key.offset": 10276,
          "key.parsed_declaration": "@discardableResult func hardRecount() -> Int",
          "key.parsed_scope.end": 252,
          "key.parsed_scope.start": 247,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>) -> () -> Int",
          "key.typeusr": "$sSiycD",
          "key.usr": "s:7Rubicon8TreeNodeC11hardRecountSiyF"
        }
      ],
      "key.typename": "TreeNode<K, V>.Type",
      "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GmD",
      "key.usr": "s:7Rubicon8TreeNodeC"
    },
    {
      "key.annotated_decl": "<Declaration>open class TreeNode&lt;K, V&gt; where <Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type> : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type> : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
      "key.bodycolumn": 51,
      "key.bodylength": 96,
      "key.bodyline": 255,
      "key.bodyoffset": 10519,
      "key.column": 1,
      "key.doc.column": 12,
      "key.doc.declaration": "open class TreeNode<K, V> where K : Comparable, K : Hashable",
      "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.doc.full_as_xml": "<Class file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift\" line=\"34\" column=\"12\"><Name>TreeNode<\/Name><USR>s:7Rubicon8TreeNodeC<\/USR><Declaration>open class TreeNode&lt;K, V&gt; where K : Comparable, K : Hashable<\/Declaration><CommentParts><Abstract><Para>Implements a single node for a classic Red\/Black Binary Tree.<\/Para><\/Abstract><\/CommentParts><\/Class>",
      "key.doc.line": 34,
      "key.doc.name": "TreeNode",
      "key.doc.type": "Class",
      "key.elements": [
        {
          "key.column": 21,
          "key.kind": "source.lang.swift.structure.elem.typeref",
          "key.length": 9,
          "key.line": 255,
          "key.offset": 10489
        }
      ],
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TreeNode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\"><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
      "key.inheritedtypes": [
        {
          "key.name": "Equatable"
        }
      ],
      "key.kind": "source.lang.swift.decl.extension",
      "key.length": 147,
      "key.line": 255,
      "key.name": "TreeNode",
      "key.namecolumn": 11,
      "key.namelength": 8,
      "key.nameline": 255,
      "key.nameoffset": 10479,
      "key.offset": 10469,
      "key.parsed_declaration": "extension TreeNode: Equatable where V: Equatable",
      "key.parsed_scope.end": 257,
      "key.parsed_scope.start": 255,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public static func == (lhs: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeCAASQR_rlE1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeCAASQR_rlE1Vq_mfp\">V<\/Type>&gt;, rhs: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeCAASQR_rlE1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeCAASQR_rlE1Vq_mfp\">V<\/Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 256,
              "key.offset": 10524
            }
          ],
          "key.bodycolumn": 79,
          "key.bodylength": 15,
          "key.bodyline": 256,
          "key.bodyoffset": 10598,
          "key.column": 12,
          "key.doc.declaration": "static func == (lhs: Self, rhs: Self) -> Bool",
          "key.doc.discussion": [
            {
              "Para": "Equality is the inverse of inequality. For any values `a` and `b`, `a == b` implies that `a != b` is `false`."
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>==(_:_:)<\/Name><USR>s:SQ2eeoiySbx_xtFZ<\/USR><Declaration>static func == (lhs: Self, rhs: Self) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are equal.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A value to compare.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another value to compare.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Equality is the inverse of inequality. For any values <codeVoice>a<\/codeVoice> and <codeVoice>b<\/codeVoice>, <codeVoice>a == b<\/codeVoice> implies that <codeVoice>a != b<\/codeVoice> is <codeVoice>false<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Equatable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "==(_:_:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "A value to compare."
                }
              ],
              "name": "lhs"
            },
            {
              "discussion": [
                {
                  "Para": "Another value to compare."
                }
              ],
              "name": "rhs"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeCAASQR_rlE1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeCAASQR_rlE1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeCAASQR_rlE1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeCAASQR_rlE1Vq_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 83,
          "key.line": 256,
          "key.name": "==(_:_:)",
          "key.namecolumn": 24,
          "key.namelength": 45,
          "key.nameline": 256,
          "key.nameoffset": 10543,
          "key.offset": 10531,
          "key.overrides": [
            {
              "key.usr": "s:SQ2eeoiySbx_xtFZ"
            }
          ],
          "key.parsed_declaration": "public static func == (lhs: TreeNode<K, V>, rhs: TreeNode<K, V>) -> Bool",
          "key.parsed_scope.end": 256,
          "key.parsed_scope.start": 256,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable, V : Equatable> (TreeNode<K, V>.Type) -> (TreeNode<K, V>, TreeNode<K, V>) -> Bool",
          "key.typeusr": "$sySb7Rubicon8TreeNodeCyxq_G_ADtcD",
          "key.usr": "s:SQ2eeoiySbx_xtFZ"
        }
      ],
      "key.typename": "TreeNode<K, V>.Type",
      "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GmD",
      "key.usr": "s:7Rubicon8TreeNodeC"
    },
    {
      "key.annotated_decl": "<Declaration>open class TreeNode&lt;K, V&gt; where <Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type> : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type> : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
      "key.bodycolumn": 49,
      "key.bodylength": 253,
      "key.bodyline": 259,
      "key.bodyoffset": 10666,
      "key.column": 1,
      "key.doc.column": 12,
      "key.doc.declaration": "open class TreeNode<K, V> where K : Comparable, K : Hashable",
      "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.doc.full_as_xml": "<Class file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift\" line=\"34\" column=\"12\"><Name>TreeNode<\/Name><USR>s:7Rubicon8TreeNodeC<\/USR><Declaration>open class TreeNode&lt;K, V&gt; where K : Comparable, K : Hashable<\/Declaration><CommentParts><Abstract><Para>Implements a single node for a classic Red\/Black Binary Tree.<\/Para><\/Abstract><\/CommentParts><\/Class>",
      "key.doc.line": 34,
      "key.doc.name": "TreeNode",
      "key.doc.type": "Class",
      "key.elements": [
        {
          "key.column": 21,
          "key.kind": "source.lang.swift.structure.elem.typeref",
          "key.length": 8,
          "key.line": 259,
          "key.offset": 10638
        }
      ],
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TreeNode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\"><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
      "key.inheritedtypes": [
        {
          "key.name": "Hashable"
        }
      ],
      "key.kind": "source.lang.swift.decl.extension",
      "key.length": 302,
      "key.line": 259,
      "key.name": "TreeNode",
      "key.namecolumn": 11,
      "key.namelength": 8,
      "key.nameline": 259,
      "key.nameoffset": 10628,
      "key.offset": 10618,
      "key.parsed_declaration": "extension TreeNode: Hashable where V: Hashable",
      "key.parsed_scope.end": 270,
      "key.parsed_scope.start": 259,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func hash(into hasher: inout <Type usr=\"s:s6HasherV\">Hasher<\/Type>)<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 260,
              "key.offset": 10671
            }
          ],
          "key.bodycolumn": 50,
          "key.bodylength": 63,
          "key.bodyline": 260,
          "key.bodyoffset": 10716,
          "key.column": 12,
          "key.doc.declaration": "func hash(into hasher: inout Hasher)",
          "key.doc.discussion": [
            {
              "Para": "Implement this method to conform to the `Hashable` protocol. The components used for hashing must be the same as the components compared in your type’s `==` operator implementation. Call `hasher.combine(_:)` with each of these components."
            },
            {
              "Important": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>hash(into:)<\/Name><USR>s:SH4hash4intoys6HasherVz_tF<\/USR><Declaration>func hash(into hasher: inout Hasher)<\/Declaration><CommentParts><Abstract><Para>Hashes the essential components of this value by feeding them into the given hasher.<\/Para><\/Abstract><Parameters><Parameter><Name>hasher<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The hasher to use when combining the components of this instance.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Implement this method to conform to the <codeVoice>Hashable<\/codeVoice> protocol. The components used for hashing must be the same as the components compared in your type’s <codeVoice>==<\/codeVoice> operator implementation. Call <codeVoice>hasher.combine(_:)<\/codeVoice> with each of these components.<\/Para><Important><Para>Never call <codeVoice>finalize()<\/codeVoice> on <codeVoice>hasher<\/codeVoice>. Doing so may become a compile-time error in the future.<\/Para><\/Important><Note><Para>This documentation comment was inherited from <codeVoice>Hashable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "hash(into:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The hasher to use when combining the components of this instance."
                }
              ],
              "name": "hasher"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hash<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>into<\/decl.var.parameter.argument_label> <decl.var.parameter.name>hasher<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:s6HasherV\">Hasher<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 102,
          "key.line": 260,
          "key.name": "hash(into:)",
          "key.namecolumn": 17,
          "key.namelength": 31,
          "key.nameline": 260,
          "key.nameoffset": 10683,
          "key.offset": 10678,
          "key.overrides": [
            {
              "key.usr": "s:SH4hash4intoys6HasherVz_tF"
            }
          ],
          "key.parsed_declaration": "public func hash(into hasher: inout Hasher)",
          "key.parsed_scope.end": 263,
          "key.parsed_scope.start": 260,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable, V : Hashable> (TreeNode<K, V>) -> (inout Hasher) -> ()",
          "key.typeusr": "$s4intoys6HasherVz_tcD",
          "key.usr": "s:SH4hash4intoys6HasherVz_tF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public var hashValue: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 265,
              "key.offset": 10786
            }
          ],
          "key.bodycolumn": 32,
          "key.bodylength": 104,
          "key.bodyline": 265,
          "key.bodyoffset": 10813,
          "key.column": 12,
          "key.doc.declaration": "var hashValue: Int { get }",
          "key.doc.discussion": [
            {
              "Para": "Hash values are not guaranteed to be equal across different executions of your program. Do not save hash values to use during a future execution."
            },
            {
              "Important": ""
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Other><Name>hashValue<\/Name><USR>s:SH9hashValueSivp<\/USR><Declaration>var hashValue: Int { get }<\/Declaration><CommentParts><Abstract><Para>The hash value.<\/Para><\/Abstract><Discussion><Para>Hash values are not guaranteed to be equal across different executions of your program. Do not save hash values to use during a future execution.<\/Para><Important><Para><codeVoice>hashValue<\/codeVoice> is deprecated as a <codeVoice>Hashable<\/codeVoice> requirement. To conform to <codeVoice>Hashable<\/codeVoice>, implement the <codeVoice>hash(into:)<\/codeVoice> requirement instead.<\/Para><\/Important><Note><Para>This documentation comment was inherited from <codeVoice>Hashable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
          "key.doc.name": "hashValue",
          "key.doc.type": "Other",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>hashValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 125,
          "key.line": 265,
          "key.name": "hashValue",
          "key.namecolumn": 16,
          "key.namelength": 9,
          "key.nameline": 265,
          "key.nameoffset": 10797,
          "key.offset": 10793,
          "key.overrides": [
            {
              "key.usr": "s:SH9hashValueSivp"
            }
          ],
          "key.parsed_declaration": "public var hashValue: Int",
          "key.parsed_scope.end": 269,
          "key.parsed_scope.start": 265,
          "key.typename": "Int",
          "key.typeusr": "$sSiD",
          "key.usr": "s:SH9hashValueSivp"
        },
        {
          "key.annotated_decl": "<Declaration>var hasher: <Type usr=\"s:s6HasherV\">Hasher<\/Type><\/Declaration>",
          "key.column": 9,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>hasher<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s6HasherV\">Hasher<\/ref.struct><\/decl.var.type><\/decl.var.local>",
          "key.kind": "source.lang.swift.decl.var.local",
          "key.length": 29,
          "key.line": 266,
          "key.name": "hasher",
          "key.namecolumn": 13,
          "key.namelength": 6,
          "key.nameline": 266,
          "key.nameoffset": 10826,
          "key.offset": 10822,
          "key.parsed_declaration": "var hasher: Hasher = Hasher()",
          "key.parsed_scope.end": 266,
          "key.parsed_scope.start": 266,
          "key.typename": "Hasher",
          "key.typeusr": "$ss6HasherVD",
          "key.usr": "s:7Rubicon8TreeNodeCAASHR_rlE9hashValueSivg6hasherL_s6HasherVvp"
        }
      ],
      "key.typename": "TreeNode<K, V>.Type",
      "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GmD",
      "key.usr": "s:7Rubicon8TreeNodeC"
    },
    {
      "key.annotated_decl": "<Declaration>open class TreeNode&lt;K, V&gt; where <Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type> : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type> : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
      "key.bodycolumn": 65,
      "key.bodylength": 135,
      "key.bodyline": 272,
      "key.bodyoffset": 10986,
      "key.column": 1,
      "key.doc.column": 12,
      "key.doc.declaration": "open class TreeNode<K, V> where K : Comparable, K : Hashable",
      "key.doc.file": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.doc.full_as_xml": "<Class file=\"\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift\" line=\"34\" column=\"12\"><Name>TreeNode<\/Name><USR>s:7Rubicon8TreeNodeC<\/USR><Declaration>open class TreeNode&lt;K, V&gt; where K : Comparable, K : Hashable<\/Declaration><CommentParts><Abstract><Para>Implements a single node for a classic Red\/Black Binary Tree.<\/Para><\/Abstract><\/CommentParts><\/Class>",
      "key.doc.line": 34,
      "key.doc.name": "TreeNode",
      "key.doc.type": "Class",
      "key.elements": [
        {
          "key.column": 21,
          "key.kind": "source.lang.swift.structure.elem.typeref",
          "key.length": 9,
          "key.line": 272,
          "key.offset": 10942
        }
      ],
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TreeNode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\"><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
      "key.inheritedtypes": [
        {
          "key.name": "Encodable"
        }
      ],
      "key.kind": "source.lang.swift.decl.extension",
      "key.length": 200,
      "key.line": 272,
      "key.name": "TreeNode",
      "key.namecolumn": 11,
      "key.namelength": 8,
      "key.nameline": 272,
      "key.nameoffset": 10932,
      "key.offset": 10922,
      "key.parsed_declaration": "extension TreeNode: Encodable where K: Encodable, V: Encodable",
      "key.parsed_scope.end": 278,
      "key.parsed_scope.start": 272,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func encode(to encoder: <Type usr=\"s:s7EncoderP\">Encoder<\/Type>) throws<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 5,
              "key.length": 6,
              "key.line": 274,
              "key.offset": 10992
            }
          ],
          "key.bodycolumn": 53,
          "key.bodylength": 79,
          "key.bodyline": 274,
          "key.bodyoffset": 11040,
          "key.column": 12,
          "key.doc.declaration": "func encode(to encoder: Encoder) throws",
          "key.doc.discussion": [
            {
              "Para": "If the value fails to encode anything, `encoder` will encode an empty keyed container in its place."
            },
            {
              "Para": "This function throws an error if any values are invalid for the given encoder’s format."
            },
            {
              "Note": ""
            }
          ],
          "key.doc.full_as_xml": "<Function><Name>encode(to:)<\/Name><USR>s:SE6encode2toys7Encoder_p_tKF<\/USR><Declaration>func encode(to encoder: Encoder) throws<\/Declaration><CommentParts><Abstract><Para>Encodes this value into the given encoder.<\/Para><\/Abstract><Parameters><Parameter><Name>encoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The encoder to write data to.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>If the value fails to encode anything, <codeVoice>encoder<\/codeVoice> will encode an empty keyed container in its place.<\/Para><Para>This function throws an error if any values are invalid for the given encoder’s format.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Encodable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.name": "encode(to:)",
          "key.doc.parameters": [
            {
              "discussion": [
                {
                  "Para": "The encoder to write data to."
                }
              ],
              "name": "encoder"
            }
          ],
          "key.doc.type": "Function",
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encoder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7EncoderP\">Encoder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
          "key.kind": "source.lang.swift.decl.function.method.instance",
          "key.length": 121,
          "key.line": 274,
          "key.name": "encode(to:)",
          "key.namecolumn": 17,
          "key.namelength": 27,
          "key.nameline": 274,
          "key.nameoffset": 11004,
          "key.offset": 10999,
          "key.overrides": [
            {
              "key.usr": "s:SE6encode2toys7Encoder_p_tKF"
            }
          ],
          "key.parsed_declaration": "public func encode(to encoder: Encoder) throws",
          "key.parsed_scope.end": 277,
          "key.parsed_scope.start": 274,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Encodable, K : Hashable, V : Encodable> (TreeNode<K, V>) -> (Encoder) throws -> ()",
          "key.typeusr": "$s2toys7Encoder_p_tKcD",
          "key.usr": "s:SE6encode2toys7Encoder_p_tKF"
        }
      ],
      "key.typename": "TreeNode<K, V>.Type",
      "key.typeusr": "$s7Rubicon8TreeNodeCyxq_GmD",
      "key.usr": "s:7Rubicon8TreeNodeC"
    },
    {
      "key.accessibility": "source.lang.swift.accessibility.fileprivate",
      "key.annotated_decl": "<Declaration>fileprivate func areRed&lt;K, V&gt;(nodes: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon6areRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/Type>, <Type usr=\"s:7Rubicon6areRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp\">V<\/Type>&gt;?...) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where <Type usr=\"s:7Rubicon6areRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/Type> : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:7Rubicon6areRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/Type> : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
      "key.attributes": [
        {
          "key.attribute": "source.decl.attribute.fileprivate",
          "key.column": 1,
          "key.length": 11,
          "key.line": 280,
          "key.offset": 11124
        }
      ],
      "key.bodycolumn": 67,
      "key.bodylength": 97,
      "key.bodyline": 280,
      "key.bodyoffset": 11190,
      "key.column": 13,
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>areRed<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Rubicon6areRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:7Rubicon6areRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp\"><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>nodes<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon6areRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon6areRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.var.parameter.type>...<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon6areRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon6areRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.free>",
      "key.kind": "source.lang.swift.decl.function.free",
      "key.length": 152,
      "key.line": 280,
      "key.name": "areRed(nodes:)",
      "key.namecolumn": 18,
      "key.namelength": 39,
      "key.nameline": 280,
      "key.nameoffset": 11141,
      "key.offset": 11136,
      "key.parsed_declaration": "fileprivate func areRed<K, V>(nodes: TreeNode<K, V>?...) -> Bool",
      "key.parsed_scope.end": 283,
      "key.parsed_scope.start": 280,
      "key.substructure": [
        {
          "key.annotated_decl": "<Declaration>K<\/Declaration>",
          "key.column": 25,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>",
          "key.kind": "source.lang.swift.decl.generic_type_param",
          "key.length": 1,
          "key.line": 280,
          "key.name": "K",
          "key.namecolumn": 25,
          "key.namelength": 1,
          "key.nameline": 280,
          "key.nameoffset": 11148,
          "key.offset": 11148,
          "key.parsed_declaration": "fileprivate func areRed<K",
          "key.parsed_scope.end": 280,
          "key.parsed_scope.start": 280,
          "key.typename": "K.Type",
          "key.typeusr": "$sxmD",
          "key.usr": "s:7Rubicon6areRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp"
        },
        {
          "key.annotated_decl": "<Declaration>V<\/Declaration>",
          "key.column": 28,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>",
          "key.kind": "source.lang.swift.decl.generic_type_param",
          "key.length": 1,
          "key.line": 280,
          "key.name": "V",
          "key.namecolumn": 28,
          "key.namelength": 1,
          "key.nameline": 280,
          "key.nameoffset": 11151,
          "key.offset": 11151,
          "key.parsed_declaration": "fileprivate func areRed<K, V",
          "key.parsed_scope.end": 280,
          "key.parsed_scope.start": 280,
          "key.typename": "V.Type",
          "key.typeusr": "$sq_mD",
          "key.usr": "s:7Rubicon6areRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp"
        }
      ],
      "key.typename": "<K, V where K : Comparable, K : Hashable> (nodes: TreeNode<K, V>?...) -> Bool",
      "key.typeusr": "$s5nodesSb7Rubicon8TreeNodeCyxq_GSgd_tcSLRzSHRzr0_luD",
      "key.usr": "s:7Rubicon6areRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF"
    },
    {
      "key.accessibility": "source.lang.swift.accessibility.fileprivate",
      "key.annotated_decl": "<Declaration>fileprivate func areBlack&lt;K, V&gt;(nodes: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8areBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8areBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp\">V<\/Type>&gt;?...) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where <Type usr=\"s:7Rubicon8areBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/Type> : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:7Rubicon8areBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/Type> : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
      "key.attributes": [
        {
          "key.attribute": "source.decl.attribute.fileprivate",
          "key.column": 1,
          "key.length": 11,
          "key.line": 285,
          "key.offset": 11290
        }
      ],
      "key.bodycolumn": 69,
      "key.bodylength": 89,
      "key.bodyline": 285,
      "key.bodyoffset": 11358,
      "key.column": 13,
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>areBlack<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Rubicon8areBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:7Rubicon8areBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp\"><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>nodes<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8areBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8areBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.var.parameter.type>...<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon8areBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon8areBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.free>",
      "key.kind": "source.lang.swift.decl.function.free",
      "key.length": 146,
      "key.line": 285,
      "key.name": "areBlack(nodes:)",
      "key.namecolumn": 18,
      "key.namelength": 41,
      "key.nameline": 285,
      "key.nameoffset": 11307,
      "key.offset": 11302,
      "key.parsed_declaration": "fileprivate func areBlack<K, V>(nodes: TreeNode<K, V>?...) -> Bool",
      "key.parsed_scope.end": 288,
      "key.parsed_scope.start": 285,
      "key.substructure": [
        {
          "key.annotated_decl": "<Declaration>K<\/Declaration>",
          "key.column": 27,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>",
          "key.kind": "source.lang.swift.decl.generic_type_param",
          "key.length": 1,
          "key.line": 285,
          "key.name": "K",
          "key.namecolumn": 27,
          "key.namelength": 1,
          "key.nameline": 285,
          "key.nameoffset": 11316,
          "key.offset": 11316,
          "key.parsed_declaration": "fileprivate func areBlack<K",
          "key.parsed_scope.end": 285,
          "key.parsed_scope.start": 285,
          "key.typename": "K.Type",
          "key.typeusr": "$sxmD",
          "key.usr": "s:7Rubicon8areBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp"
        },
        {
          "key.annotated_decl": "<Declaration>V<\/Declaration>",
          "key.column": 30,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>",
          "key.kind": "source.lang.swift.decl.generic_type_param",
          "key.length": 1,
          "key.line": 285,
          "key.name": "V",
          "key.namecolumn": 30,
          "key.namelength": 1,
          "key.nameline": 285,
          "key.nameoffset": 11319,
          "key.offset": 11319,
          "key.parsed_declaration": "fileprivate func areBlack<K, V",
          "key.parsed_scope.end": 285,
          "key.parsed_scope.start": 285,
          "key.typename": "V.Type",
          "key.typeusr": "$sq_mD",
          "key.usr": "s:7Rubicon8areBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp"
        }
      ],
      "key.typename": "<K, V where K : Comparable, K : Hashable> (nodes: TreeNode<K, V>?...) -> Bool",
      "key.typeusr": "$s5nodesSb7Rubicon8TreeNodeCyxq_GSgd_tcSLRzSHRzr0_luD",
      "key.usr": "s:7Rubicon8areBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesSbAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF"
    },
    {
      "key.accessibility": "source.lang.swift.accessibility.fileprivate",
      "key.annotated_decl": "<Declaration>fileprivate func setBlack&lt;K, V&gt;(nodes: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8setBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8setBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp\">V<\/Type>&gt;?...) where <Type usr=\"s:7Rubicon8setBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/Type> : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:7Rubicon8setBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/Type> : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
      "key.attributes": [
        {
          "key.attribute": "source.decl.attribute.fileprivate",
          "key.column": 1,
          "key.length": 11,
          "key.line": 290,
          "key.offset": 11450
        }
      ],
      "key.bodycolumn": 61,
      "key.bodylength": 54,
      "key.bodyline": 290,
      "key.bodyoffset": 11510,
      "key.column": 13,
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>setBlack<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Rubicon8setBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:7Rubicon8setBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp\"><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>nodes<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8setBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8setBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.var.parameter.type>...<\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon8setBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon8setBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.free>",
      "key.kind": "source.lang.swift.decl.function.free",
      "key.length": 103,
      "key.line": 290,
      "key.name": "setBlack(nodes:)",
      "key.namecolumn": 18,
      "key.namelength": 41,
      "key.nameline": 290,
      "key.nameoffset": 11467,
      "key.offset": 11462,
      "key.parsed_declaration": "fileprivate func setBlack<K, V>(nodes: TreeNode<K, V>?...)",
      "key.parsed_scope.end": 290,
      "key.parsed_scope.start": 290,
      "key.substructure": [
        {
          "key.annotated_decl": "<Declaration>K<\/Declaration>",
          "key.column": 27,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>",
          "key.kind": "source.lang.swift.decl.generic_type_param",
          "key.length": 1,
          "key.line": 290,
          "key.name": "K",
          "key.namecolumn": 27,
          "key.namelength": 1,
          "key.nameline": 290,
          "key.nameoffset": 11476,
          "key.offset": 11476,
          "key.parsed_declaration": "fileprivate func setBlack<K",
          "key.parsed_scope.end": 290,
          "key.parsed_scope.start": 290,
          "key.typename": "K.Type",
          "key.typeusr": "$sxmD",
          "key.usr": "s:7Rubicon8setBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp"
        },
        {
          "key.annotated_decl": "<Declaration>V<\/Declaration>",
          "key.column": 30,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>",
          "key.kind": "source.lang.swift.decl.generic_type_param",
          "key.length": 1,
          "key.line": 290,
          "key.name": "V",
          "key.namecolumn": 30,
          "key.namelength": 1,
          "key.nameline": 290,
          "key.nameoffset": 11479,
          "key.offset": 11479,
          "key.parsed_declaration": "fileprivate func setBlack<K, V",
          "key.parsed_scope.end": 290,
          "key.parsed_scope.start": 290,
          "key.typename": "V.Type",
          "key.typeusr": "$sq_mD",
          "key.usr": "s:7Rubicon8setBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp"
        }
      ],
      "key.typename": "<K, V where K : Comparable, K : Hashable> (nodes: TreeNode<K, V>?...) -> ()",
      "key.typeusr": "$s5nodesy7Rubicon8TreeNodeCyxq_GSgd_tcSLRzSHRzr0_luD",
      "key.usr": "s:7Rubicon8setBlack33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF"
    },
    {
      "key.accessibility": "source.lang.swift.accessibility.fileprivate",
      "key.annotated_decl": "<Declaration>fileprivate func setRed&lt;K, V&gt;(nodes: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon6setRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/Type>, <Type usr=\"s:7Rubicon6setRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp\">V<\/Type>&gt;?...) where <Type usr=\"s:7Rubicon6setRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/Type> : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:7Rubicon6setRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/Type> : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
      "key.attributes": [
        {
          "key.attribute": "source.decl.attribute.fileprivate",
          "key.column": 1,
          "key.length": 11,
          "key.line": 292,
          "key.offset": 11567
        }
      ],
      "key.bodycolumn": 59,
      "key.bodylength": 52,
      "key.bodyline": 292,
      "key.bodyoffset": 11625,
      "key.column": 13,
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>setRed<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Rubicon6setRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:7Rubicon6setRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp\"><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>nodes<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon6setRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon6setRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp\">V<\/ref.generic_type_param>&gt;?<\/decl.var.parameter.type>...<\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon6setRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Rubicon6setRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.free>",
      "key.kind": "source.lang.swift.decl.function.free",
      "key.length": 99,
      "key.line": 292,
      "key.name": "setRed(nodes:)",
      "key.namecolumn": 18,
      "key.namelength": 39,
      "key.nameline": 292,
      "key.nameoffset": 11584,
      "key.offset": 11579,
      "key.parsed_declaration": "fileprivate func setRed<K, V>(nodes: TreeNode<K, V>?...)",
      "key.parsed_scope.end": 292,
      "key.parsed_scope.start": 292,
      "key.substructure": [
        {
          "key.annotated_decl": "<Declaration>K<\/Declaration>",
          "key.column": 25,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>",
          "key.kind": "source.lang.swift.decl.generic_type_param",
          "key.length": 1,
          "key.line": 292,
          "key.name": "K",
          "key.namecolumn": 25,
          "key.namelength": 1,
          "key.nameline": 292,
          "key.nameoffset": 11591,
          "key.offset": 11591,
          "key.parsed_declaration": "fileprivate func setRed<K",
          "key.parsed_scope.end": 292,
          "key.parsed_scope.start": 292,
          "key.typename": "K.Type",
          "key.typeusr": "$sxmD",
          "key.usr": "s:7Rubicon6setRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1KL_xmfp"
        },
        {
          "key.annotated_decl": "<Declaration>V<\/Declaration>",
          "key.column": 28,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>",
          "key.kind": "source.lang.swift.decl.generic_type_param",
          "key.length": 1,
          "key.line": 292,
          "key.name": "V",
          "key.namecolumn": 28,
          "key.namelength": 1,
          "key.nameline": 292,
          "key.nameoffset": 11594,
          "key.offset": 11594,
          "key.parsed_declaration": "fileprivate func setRed<K, V",
          "key.parsed_scope.end": 292,
          "key.parsed_scope.start": 292,
          "key.typename": "V.Type",
          "key.typeusr": "$sq_mD",
          "key.usr": "s:7Rubicon6setRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF1VL_q_mfp"
        }
      ],
      "key.typename": "<K, V where K : Comparable, K : Hashable> (nodes: TreeNode<K, V>?...) -> ()",
      "key.typeusr": "$s5nodesy7Rubicon8TreeNodeCyxq_GSgd_tcSLRzSHRzr0_luD",
      "key.usr": "s:7Rubicon6setRed33_74472ED349219B09CB7FD93FFDC8867DLL5nodesyAA8TreeNodeCyxq_GSgd_tSLRzSHRzr0_lF"
    },
    {
      "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>&lt;<Type usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/Type>, <Type usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/Type>&gt;.Side<\/Declaration>",
      "key.bodycolumn": 26,
      "key.bodylength": 537,
      "key.bodyline": 294,
      "key.bodyoffset": 11705,
      "key.column": 1,
      "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
      "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Kxmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:7Rubicon8TreeNodeC1Vq_mfp\">V<\/ref.generic_type_param>&gt;.<decl.name>Side<\/decl.name><\/decl.enum>",
      "key.kind": "source.lang.swift.decl.extension",
      "key.length": 563,
      "key.line": 294,
      "key.name": "TreeNode.Side",
      "key.namecolumn": 11,
      "key.namelength": 13,
      "key.nameline": 294,
      "key.nameoffset": 11690,
      "key.offset": 11680,
      "key.parsed_declaration": "extension TreeNode.Side",
      "key.parsed_scope.end": 306,
      "key.parsed_scope.start": 294,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var isLeft: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 295,
              "key.offset": 11721
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 295,
              "key.offset": 11710
            }
          ],
          "key.bodycolumn": 43,
          "key.bodylength": 17,
          "key.bodyline": 295,
          "key.bodyoffset": 11748,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isLeft<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 38,
          "key.line": 295,
          "key.name": "isLeft",
          "key.namecolumn": 27,
          "key.namelength": 6,
          "key.nameline": 295,
          "key.nameoffset": 11732,
          "key.offset": 11728,
          "key.parsed_declaration": "@inlinable public var isLeft:   Bool",
          "key.parsed_scope.end": 295,
          "key.parsed_scope.start": 295,
          "key.typename": "Bool",
          "key.typeusr": "$sSbD",
          "key.usr": "s:7Rubicon8TreeNodeC4SideO6isLeftSbvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var isRight: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 296,
              "key.offset": 11782
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 296,
              "key.offset": 11771
            }
          ],
          "key.bodycolumn": 43,
          "key.bodylength": 18,
          "key.bodyline": 296,
          "key.bodyoffset": 11809,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isRight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 39,
          "key.line": 296,
          "key.name": "isRight",
          "key.namecolumn": 27,
          "key.namelength": 7,
          "key.nameline": 296,
          "key.nameoffset": 11793,
          "key.offset": 11789,
          "key.parsed_declaration": "@inlinable public var isRight:  Bool",
          "key.parsed_scope.end": 296,
          "key.parsed_scope.start": 296,
          "key.typename": "Bool",
          "key.typeusr": "$sSbD",
          "key.usr": "s:7Rubicon8TreeNodeC4SideO7isRightSbvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public var isOrphan: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 297,
              "key.offset": 11844
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 297,
              "key.offset": 11833
            }
          ],
          "key.bodycolumn": 43,
          "key.bodylength": 19,
          "key.bodyline": 297,
          "key.bodyoffset": 11871,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isOrphan<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
          "key.kind": "source.lang.swift.decl.var.instance",
          "key.length": 40,
          "key.line": 297,
          "key.name": "isOrphan",
          "key.namecolumn": 27,
          "key.namelength": 8,
          "key.nameline": 297,
          "key.nameoffset": 11855,
          "key.offset": 11851,
          "key.parsed_declaration": "@inlinable public var isOrphan: Bool",
          "key.parsed_scope.end": 297,
          "key.parsed_scope.start": 297,
          "key.typename": "Bool",
          "key.typeusr": "$sSbD",
          "key.usr": "s:7Rubicon8TreeNodeC4SideO8isOrphanSbvp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@inlinable public prefix static func ! (side: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>.<Type usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/Type>) -&gt; <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>.<Type usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.prefix",
              "key.column": 30,
              "key.length": 6,
              "key.line": 299,
              "key.offset": 11922
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.column": 16,
              "key.length": 6,
              "key.line": 299,
              "key.offset": 11908
            },
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 299,
              "key.offset": 11897
            }
          ],
          "key.bodycolumn": 84,
          "key.bodylength": 59,
          "key.bodyline": 299,
          "key.bodyoffset": 11976,
          "key.column": 23,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.operator.prefix><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>prefix<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>! <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>side<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>.<ref.enum usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>.<ref.enum usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/ref.enum><\/decl.function.returntype><\/decl.function.operator.prefix>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 121,
          "key.line": 299,
          "key.name": "!(_:)",
          "key.namecolumn": 42,
          "key.namelength": 23,
          "key.nameline": 299,
          "key.nameoffset": 11934,
          "key.offset": 11915,
          "key.parsed_declaration": "@inlinable public static prefix func ! (side: TreeNode.Side) -> TreeNode.Side",
          "key.parsed_scope.end": 299,
          "key.parsed_scope.start": 299,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>.Side.Type) -> (TreeNode<K, V>.Side) -> TreeNode<K, V>.Side",
          "key.typeusr": "$sy7Rubicon8TreeNodeC4SideOyxq__GAFcD",
          "key.usr": "s:7Rubicon8TreeNodeC4SideO1nopyAEyxq__GAGFZ"
        },
        {
          "key.annotated_decl": "<Declaration>@inlinable static func side(_ node: <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>) -&gt; <Type usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/Type>.<Type usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/Type><\/Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.inlinable",
              "key.column": 5,
              "key.length": 10,
              "key.line": 301,
              "key.offset": 12042
            }
          ],
          "key.bodycolumn": 69,
          "key.bodylength": 134,
          "key.bodyline": 301,
          "key.bodyoffset": 12106,
          "key.column": 16,
          "key.filepath": "\/Users\/grhodes\/Projects\/2020\/SwiftProjects\/Rubicon\/Sources\/Rubicon\/BinaryTree\/TreeNode.swift",
          "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>side<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Rubicon8TreeNodeC\">TreeNode<\/ref.class>.<ref.enum usr=\"s:7Rubicon8TreeNodeC4SideO\">Side<\/ref.enum><\/decl.function.returntype><\/decl.function.method.static>",
          "key.kind": "source.lang.swift.decl.function.method.static",
          "key.length": 188,
          "key.line": 301,
          "key.name": "side(_:)",
          "key.namecolumn": 28,
          "key.namelength": 22,
          "key.nameline": 301,
          "key.nameoffset": 12065,
          "key.offset": 12053,
          "key.parsed_declaration": "@inlinable static func side(_ node: TreeNode) -> TreeNode.Side",
          "key.parsed_scope.end": 305,
          "key.parsed_scope.start": 301,
          "key.substructure": [
          ],
          "key.typename": "<K, V where K : Comparable, K : Hashable> (TreeNode<K, V>.Side.Type) -> (TreeNode<K, V>) -> TreeNode<K, V>.Side",
          "key.typeusr": "$sy7Rubicon8TreeNodeC4SideOyxq__GACyxq_GcD",
          "key.usr": "s:7Rubicon8TreeNodeC4SideO4sideyAEyxq__GACyxq_GFZ"
        }
      ],
      "key.typename": "TreeNode<K, V>.Side.Type",
      "key.typeusr": "$s7Rubicon8TreeNodeC4SideOyxq__GmD",
      "key.usr": "s:7Rubicon8TreeNodeC4SideO"
    }
  ]
}
